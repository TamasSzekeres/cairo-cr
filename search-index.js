crystal_doc_search_index_callback({"repository_name":"cairo","body":"# cairo-cr\n\n[Cairo](https://cairographics.org/) bindings for Crystal language.\n\n[![Build Status](https://travis-ci.org/TamasSzekeres/cairo-cr.svg?branch=master)](https://travis-ci.org/TamasSzekeres/cairo-cr)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://tamasszekeres.github.io/cairo-cr/)\n\n## Installation\n\nFirst install cairo:\n```bash\nsudo apt-get install libcairo2 libcairo2-dev\n```\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  cairo:\n    github: TamasSzekeres/cairo-cr\n```\nThen run in terminal:\n```bash\nshards install\n```\n\nSee also: [x11-cr](https://github.com/TamasSzekeres/x11-cr)\n\n## Usage\n\n```crystal\nrequire \"x11\"\nrequire \"cairo\"\n\nmodule YourModule\n  include X11::C # for low-level usage\n  include Cairo::C # for low-level usage\n  include X11 # for high-level usage\n  include Cairo # for high-level usage\nend\n```\n\nFor more details see the sample in [/examples](/examples) folder.\n\n## Sample\n\nBuild and run the low-level sample:\n```shell\n  cd examples/sample_window\n  shards install\n  make\n  ./sample_window\n```\n![Sample Window](https://raw.githubusercontent.com/TamasSzekeres/cairo-cr/master/examples/screenshot/sample_window.png)\n\nBuild and run the high-level sample:\n```shell\n  cd examples/sample_window_hl\n  shards install\n  make\n  ./sample_window_hl\n```\n\n## Documentation\n\nYou can generate documentation for yourself:\n```shell\ncrystal docs\n```\nThen you can open `/doc/index.html` in your browser.\n\nOr you can view last commited documentation online at: [https://tamasszekeres.github.io/cairo-cr/docs/](https://tamasszekeres.github.io/cairo-cr/).\n\n## Contributing\n\n1. Fork it ( https://github.com/TamasSzekeres/cairo-cr/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [TamasSzekeres](https://github.com/TamasSzekeres) Tam√°s Szekeres - creator, maintainer\n","program":{"html_id":"cairo/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"cairo","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"cairo/Cairo","path":"Cairo.html","kind":"module","full_name":"Cairo","name":"Cairo","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/X11","kind":"module","full_name":"X11","name":"X11"},{"html_id":"cairo/X11/C","kind":"module","full_name":"X11::C","name":"C"},{"html_id":"cairo/Cairo/C","kind":"module","full_name":"Cairo::C","name":"C"},{"html_id":"cairo/X11","kind":"module","full_name":"X11","name":"X11"},{"html_id":"cairo/X11/C","kind":"module","full_name":"X11::C","name":"C"}],"locations":[{"filename":"src/cairo/antialias.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/antialias.cr#L1"},{"filename":"src/cairo/c/features.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/c/features.cr#L1"},{"filename":"src/cairo/color_stop.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/color_stop.cr#L1"},{"filename":"src/cairo/content.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/content.cr#L1"},{"filename":"src/cairo/context.cr","line_number":5,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L5"},{"filename":"src/cairo/device.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L3"},{"filename":"src/cairo/device_type.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device_type.cr#L1"},{"filename":"src/cairo/extend.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extend.cr#L1"},{"filename":"src/cairo/extents.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extents.cr#L3"},{"filename":"src/cairo/fill_rule.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/fill_rule.cr#L1"},{"filename":"src/cairo/filter.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/filter.cr#L1"},{"filename":"src/cairo/font_extents.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_extents.cr#L3"},{"filename":"src/cairo/font_face.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L3"},{"filename":"src/cairo/font_options.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L3"},{"filename":"src/cairo/font_slant.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_slant.cr#L1"},{"filename":"src/cairo/font_type.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_type.cr#L1"},{"filename":"src/cairo/font_weight.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_weight.cr#L1"},{"filename":"src/cairo/format.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/format.cr#L3"},{"filename":"src/cairo/glyph.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph.cr#L3"},{"filename":"src/cairo/glyph_array.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph_array.cr#L4"},{"filename":"src/cairo/hint_metrics.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/hint_metrics.cr#L1"},{"filename":"src/cairo/hint_style.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/hint_style.cr#L1"},{"filename":"src/cairo/line_cap.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/line_cap.cr#L1"},{"filename":"src/cairo/line_join.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/line_join.cr#L1"},{"filename":"src/cairo/matrix.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L3"},{"filename":"src/cairo/operator.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L1"},{"filename":"src/cairo/path.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path.cr#L3"},{"filename":"src/cairo/path_data.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data.cr#L3"},{"filename":"src/cairo/path_data_header.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data_header.cr#L3"},{"filename":"src/cairo/path_data_type.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data_type.cr#L1"},{"filename":"src/cairo/pattern.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L3"},{"filename":"src/cairo/pattern_type.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern_type.cr#L1"},{"filename":"src/cairo/pdf_surface.cr","line_number":6,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pdf_surface.cr#L6"},{"filename":"src/cairo/pdf_version.cr","line_number":5,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pdf_version.cr#L5"},{"filename":"src/cairo/point.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/point.cr#L3"},{"filename":"src/cairo/ps_level.cr","line_number":5,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/ps_level.cr#L5"},{"filename":"src/cairo/ps_surface.cr","line_number":5,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/ps_surface.cr#L5"},{"filename":"src/cairo/rectangle.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle.cr#L3"},{"filename":"src/cairo/rectangle_int.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_int.cr#L3"},{"filename":"src/cairo/rectangle_list.cr","line_number":5,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_list.cr#L5"},{"filename":"src/cairo/region.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L3"},{"filename":"src/cairo/region_overlap.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region_overlap.cr#L1"},{"filename":"src/cairo/rgba.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rgba.cr#L1"},{"filename":"src/cairo/scaled_font.cr","line_number":5,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L5"},{"filename":"src/cairo/script.cr","line_number":5,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script.cr#L5"},{"filename":"src/cairo/script_interpreter.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script_interpreter.cr#L4"},{"filename":"src/cairo/script_mode.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script_mode.cr#L4"},{"filename":"src/cairo/status.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L3"},{"filename":"src/cairo/status_exception.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status_exception.cr#L1"},{"filename":"src/cairo/subpixel_order.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/subpixel_order.cr#L1"},{"filename":"src/cairo/surface.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L4"},{"filename":"src/cairo/surface_observer_mode.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_observer_mode.cr#L1"},{"filename":"src/cairo/surface_type.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L1"},{"filename":"src/cairo/svg_surface.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/svg_surface.cr#L4"},{"filename":"src/cairo/svg_version.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/svg_version.cr#L4"},{"filename":"src/cairo/tee_surface.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/tee_surface.cr#L4"},{"filename":"src/cairo/text_cluster.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster.cr#L3"},{"filename":"src/cairo/text_cluster_array.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster_array.cr#L4"},{"filename":"src/cairo/text_cluster_flags.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster_flags.cr#L1"},{"filename":"src/cairo/text_extents.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L3"},{"filename":"src/cairo/user_data_key.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/user_data_key.cr#L3"},{"filename":"src/cairo/version.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/version.cr#L1"},{"filename":"src/cairo/xlib_surface.cr","line_number":5,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/xlib_surface.cr#L5"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CAIRO_VERSION_MAJOR","name":"CAIRO_VERSION_MAJOR","value":"1","doc":null,"summary":null},{"id":"CAIRO_VERSION_MICRO","name":"CAIRO_VERSION_MICRO","value":"3","doc":null,"summary":null},{"id":"CAIRO_VERSION_MINOR","name":"CAIRO_VERSION_MINOR","value":"17","doc":null,"summary":null},{"id":"TAG_DEST","name":"TAG_DEST","value":"\"cairo.dest\"","doc":"Create a destination for a hyperlink. Destination tag attributes are detailed at Destinations.","summary":"<p>Create a destination for a hyperlink.</p>"},{"id":"TAG_LINK","name":"TAG_LINK","value":"\"Link\"","doc":"Create hyperlink. Link tag attributes are detailed at Links.","summary":"<p>Create hyperlink.</p>"},{"id":"VERSION","name":"VERSION","value":"\"0.3.0\"","doc":null,"summary":null}],"included_modules":[{"html_id":"cairo/Cairo/C","kind":"module","full_name":"Cairo::C","name":"C"},{"html_id":"cairo/X11","kind":"module","full_name":"X11","name":"X11"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"cairo/Cairo/Antialias","path":"Cairo/Antialias.html","kind":"enum","full_name":"Cairo::Antialias","name":"Antialias","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/antialias.cr","line_number":17,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/antialias.cr#L17"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Default","name":"Default","value":"0","doc":"Use the default antialiasing for the subsystem and target device.","summary":"<p>Use the default antialiasing for the subsystem and target device.</p>"},{"id":"None","name":"None","value":"1","doc":"Use a bilevel alpha mask.","summary":"<p>Use a bilevel alpha mask.</p>"},{"id":"Gray","name":"Gray","value":"2","doc":"Perform single-color antialiasing (using shades of gray for black text on a white background, for example).","summary":"<p>Perform single-color antialiasing (using shades of gray for black text on a white background, for example).</p>"},{"id":"Subpixel","name":"Subpixel","value":"3","doc":"Perform antialiasing by taking advantage of the order of subpixel elements on devices such as LCD panels.","summary":"<p>Perform antialiasing by taking advantage of the order of subpixel elements on devices such as LCD panels.</p>"},{"id":"Fast","name":"Fast","value":"4","doc":"Hint that the backend should perform some antialiasing but prefer speed over quality.","summary":"<p>Hint that the backend should perform some antialiasing but prefer speed over quality.</p>"},{"id":"Good","name":"Good","value":"5","doc":"The backend should balance quality against performance","summary":"<p>The backend should balance quality against performance</p>"},{"id":"Best","name":"Best","value":"6","doc":"Hint that the backend should render at the highest quality, sacrificing speed if necessary.","summary":"<p>Hint that the backend should render at the highest quality, sacrificing speed if necessary.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Specifies the type of antialiasing to do when rendering text or shapes.\n\nAs it is not necessarily clear from the above what advantages a particular antialias method provides,\nthere is also a set of hints:\n- `Antialias::Fast` : Allow the backend to degrade raster quality for speed\n- `Antialias::Good` : A balance between speed and quality\n- `Antialias::Best` : A high-fidelity, but potentially slow, raster mode\n\nThese make no guarantee on how the backend will perform its rasterisation (if it even rasterises!),\nnor that they have any differing effect other than to enable some form of antialiasing.\nIn the case of glyph rendering, `Antialias::Fast` and `Antialias::Good` will be mapped to `Antialias::Gray`,\nwith `Antialias::Best` being equivalent to `Antialias::Subpixel`.\n\nThe interpretation of `Antialias::Default` is left entirely up to the backend,\ntypically this will be similar to `Antialias::Good` .","summary":"<p>Specifies the type of antialiasing to do when rendering text or shapes.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"best?-instance-method","html_id":"best?-instance-method","name":"best?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/antialias.cr#L37","def":{"name":"best?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Best"}},{"id":"default?-instance-method","html_id":"default?-instance-method","name":"default?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/antialias.cr#L19","def":{"name":"default?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Default"}},{"id":"fast?-instance-method","html_id":"fast?-instance-method","name":"fast?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/antialias.cr#L31","def":{"name":"fast?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Fast"}},{"id":"good?-instance-method","html_id":"good?-instance-method","name":"good?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/antialias.cr#L34","def":{"name":"good?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Good"}},{"id":"gray?-instance-method","html_id":"gray?-instance-method","name":"gray?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/antialias.cr#L25","def":{"name":"gray?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Gray"}},{"id":"none?-instance-method","html_id":"none?-instance-method","name":"none?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/antialias.cr#L22","def":{"name":"none?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == None"}},{"id":"subpixel?-instance-method","html_id":"subpixel?-instance-method","name":"subpixel?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/antialias.cr#L28","def":{"name":"subpixel?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Subpixel"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/C","path":"Cairo/C.html","kind":"module","full_name":"Cairo::C","name":"C","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/X11","kind":"module","full_name":"X11","name":"X11"},{"html_id":"cairo/X11/C","kind":"module","full_name":"X11::C","name":"C"}],"locations":[{"filename":"src/cairo/c/features.cr","line_number":1,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/c/features.cr#L1"},{"filename":"src/cairo/c/lib_cairo.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/c/lib_cairo.cr#L4"},{"filename":"src/cairo/c/pdf.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/c/pdf.cr#L4"},{"filename":"src/cairo/c/ps.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/c/ps.cr#L4"},{"filename":"src/cairo/c/script.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/c/script.cr#L4"},{"filename":"src/cairo/c/script_interpreter.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/c/script_interpreter.cr#L3"},{"filename":"src/cairo/c/svg.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/c/svg.cr#L4"},{"filename":"src/cairo/c/tee.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/c/tee.cr#L4"},{"filename":"src/cairo/c/xlib.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/c/xlib.cr#L4"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"HAS_FC_FONT","name":"HAS_FC_FONT","value":"true","doc":null,"summary":null},{"id":"HAS_FT_FONT","name":"HAS_FT_FONT","value":"true","doc":null,"summary":null},{"id":"HAS_GOBJECT_FUNCTIONS","name":"HAS_GOBJECT_FUNCTIONS","value":"true","doc":null,"summary":null},{"id":"HAS_IMAGE_SURFACE","name":"HAS_IMAGE_SURFACE","value":"true","doc":null,"summary":null},{"id":"HAS_MIME_SURFACE","name":"HAS_MIME_SURFACE","value":"true","doc":null,"summary":null},{"id":"HAS_OBSERVER_SURFACE","name":"HAS_OBSERVER_SURFACE","value":"true","doc":null,"summary":null},{"id":"HAS_PDF_SURFACE","name":"HAS_PDF_SURFACE","value":"true","doc":null,"summary":null},{"id":"HAS_PNG_FUNCTIONS","name":"HAS_PNG_FUNCTIONS","value":"true","doc":null,"summary":null},{"id":"HAS_PS_SURFACE","name":"HAS_PS_SURFACE","value":"true","doc":null,"summary":null},{"id":"HAS_RECORDING_SURFACE","name":"HAS_RECORDING_SURFACE","value":"true","doc":null,"summary":null},{"id":"HAS_SCRIPT_SURFACE","name":"HAS_SCRIPT_SURFACE","value":"true","doc":null,"summary":null},{"id":"HAS_SVG_SURFACE","name":"HAS_SVG_SURFACE","value":"true","doc":null,"summary":null},{"id":"HAS_TEE_SURFACE","name":"HAS_TEE_SURFACE","value":"true","doc":null,"summary":null},{"id":"HAS_USER_FONT","name":"HAS_USER_FONT","value":"true","doc":null,"summary":null},{"id":"HAS_XCB_SHM_FUNCTIONS","name":"HAS_XCB_SHM_FUNCTIONS","value":"true","doc":null,"summary":null},{"id":"HAS_XCB_SURFACE","name":"HAS_XCB_SURFACE","value":"true","doc":null,"summary":null},{"id":"HAS_XLIB_SURFACE","name":"HAS_XLIB_SURFACE","value":"true","doc":null,"summary":null},{"id":"HAS_XLIB_XRENDER_SURFACE","name":"HAS_XLIB_XRENDER_SURFACE","value":"true","doc":null,"summary":null}],"included_modules":[{"html_id":"cairo/X11","kind":"module","full_name":"X11","name":"X11"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"}],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[{"id":"version-class-method","html_id":"version-class-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/c/lib_cairo.cr#L11","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"version_encode(CAIRO_VERSION_MAJOR, CAIRO_VERSION_MINOR, CAIRO_VERSION_MICRO)"}},{"id":"version_encode(major,minor,micro)-class-method","html_id":"version_encode(major,minor,micro)-class-method","name":"version_encode","doc":null,"summary":null,"abstract":false,"args":[{"name":"major","doc":null,"default_value":"","external_name":"major","restriction":""},{"name":"minor","doc":null,"default_value":"","external_name":"minor","restriction":""},{"name":"micro","doc":null,"default_value":"","external_name":"micro","restriction":""}],"args_string":"(major, minor, micro)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/c/lib_cairo.cr#L5","def":{"name":"version_encode","args":[{"name":"major","doc":null,"default_value":"","external_name":"major","restriction":""},{"name":"minor","doc":null,"default_value":"","external_name":"minor","restriction":""},{"name":"micro","doc":null,"default_value":"","external_name":"micro","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((major * 10000) + (minor * 100)) + (micro * 1)"}},{"id":"version_string-class-method","html_id":"version_string-class-method","name":"version_string","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/c/lib_cairo.cr#L22","def":{"name":"version_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"version_stringize(CAIRO_VERSION_MAJOR, CAIRO_VERSION_MINOR, CAIRO_VERSION_MICRO)"}},{"id":"version_stringize(major,minor,micro)-class-method","html_id":"version_stringize(major,minor,micro)-class-method","name":"version_stringize","doc":null,"summary":null,"abstract":false,"args":[{"name":"major","doc":null,"default_value":"","external_name":"major","restriction":""},{"name":"minor","doc":null,"default_value":"","external_name":"minor","restriction":""},{"name":"micro","doc":null,"default_value":"","external_name":"micro","restriction":""}],"args_string":"(major, minor, micro)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/c/lib_cairo.cr#L18","def":{"name":"version_stringize","args":[{"name":"major","doc":null,"default_value":"","external_name":"major","restriction":""},{"name":"minor","doc":null,"default_value":"","external_name":"minor","restriction":""},{"name":"micro","doc":null,"default_value":"","external_name":"micro","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{major}.#{minor}.#{micro}\""}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"cairo/Cairo/ColorStop","path":"Cairo/ColorStop.html","kind":"struct","full_name":"Cairo::ColorStop","name":"ColorStop","abstract":false,"superclass":{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/color_stop.cr","line_number":2,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/color_stop.cr#L2"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(offset:Float64,red:Float64,green:Float64,blue:Float64,alpha:Float64)-class-method","html_id":"new(offset:Float64,red:Float64,green:Float64,blue:Float64,alpha:Float64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Float64"},{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"},{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"args_string":"(offset : Float64, red : Float64, green : Float64, blue : Float64, alpha : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/color_stop.cr#L9","def":{"name":"new","args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Float64"},{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"},{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(offset, red, green, blue, alpha)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(offset:Float64,rgba:RGBA)-class-method","html_id":"new(offset:Float64,rgba:RGBA)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Float64"},{"name":"rgba","doc":null,"default_value":"","external_name":"rgba","restriction":"RGBA"}],"args_string":"(offset : Float64, rgba : RGBA)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/color_stop.cr#L6","def":{"name":"new","args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Float64"},{"name":"rgba","doc":null,"default_value":"","external_name":"rgba","restriction":"RGBA"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(offset, rgba)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"alpha-instance-method","html_id":"alpha-instance-method","name":"alpha","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/color_stop.cr#L37","def":{"name":"alpha","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rgba.alpha"}},{"id":"alpha=(alpha:Float64)-instance-method","html_id":"alpha=(alpha:Float64)-instance-method","name":"alpha=","doc":null,"summary":null,"abstract":false,"args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"args_string":"(alpha : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/color_stop.cr#L41","def":{"name":"alpha=","args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rgba.alpha = alpha"}},{"id":"blue-instance-method","html_id":"blue-instance-method","name":"blue","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/color_stop.cr#L29","def":{"name":"blue","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rgba.blue"}},{"id":"blue=(blue:Float64)-instance-method","html_id":"blue=(blue:Float64)-instance-method","name":"blue=","doc":null,"summary":null,"abstract":false,"args":[{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"}],"args_string":"(blue : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/color_stop.cr#L33","def":{"name":"blue=","args":[{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rgba.blue = blue"}},{"id":"green-instance-method","html_id":"green-instance-method","name":"green","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/color_stop.cr#L21","def":{"name":"green","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rgba.green"}},{"id":"green=(green:Float64)-instance-method","html_id":"green=(green:Float64)-instance-method","name":"green=","doc":null,"summary":null,"abstract":false,"args":[{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"}],"args_string":"(green : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/color_stop.cr#L25","def":{"name":"green=","args":[{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rgba.green = green"}},{"id":"offset:Float64-instance-method","html_id":"offset:Float64-instance-method","name":"offset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/color_stop.cr#L3","def":{"name":"offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@offset"}},{"id":"offset=(offset:Float64)-instance-method","html_id":"offset=(offset:Float64)-instance-method","name":"offset=","doc":null,"summary":null,"abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Float64"}],"args_string":"(offset : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/color_stop.cr#L3","def":{"name":"offset=","args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@offset = offset"}},{"id":"red-instance-method","html_id":"red-instance-method","name":"red","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/color_stop.cr#L13","def":{"name":"red","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rgba.red"}},{"id":"red=(red:Float64)-instance-method","html_id":"red=(red:Float64)-instance-method","name":"red=","doc":null,"summary":null,"abstract":false,"args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"}],"args_string":"(red : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/color_stop.cr#L17","def":{"name":"red=","args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rgba.red = red"}},{"id":"rgba:RGBA-instance-method","html_id":"rgba:RGBA-instance-method","name":"rgba","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : RGBA","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/color_stop.cr#L4","def":{"name":"rgba","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"RGBA","visibility":"Public","body":"@rgba"}},{"id":"rgba=(rgba:RGBA)-instance-method","html_id":"rgba=(rgba:RGBA)-instance-method","name":"rgba=","doc":null,"summary":null,"abstract":false,"args":[{"name":"rgba","doc":null,"default_value":"","external_name":"rgba","restriction":"RGBA"}],"args_string":"(rgba : RGBA)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/color_stop.cr#L4","def":{"name":"rgba=","args":[{"name":"rgba","doc":null,"default_value":"","external_name":"rgba","restriction":"RGBA"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rgba = rgba"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Content","path":"Cairo/Content.html","kind":"enum","full_name":"Cairo::Content","name":"Content","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/content.cr","line_number":2,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/content.cr#L2"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Color","name":"Color","value":"4096","doc":null,"summary":null},{"id":"Alpha","name":"Alpha","value":"8192","doc":null,"summary":null},{"id":"ColorAlpha","name":"ColorAlpha","value":"12288","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"alpha?-instance-method","html_id":"alpha?-instance-method","name":"alpha?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/content.cr#L4","def":{"name":"alpha?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Alpha"}},{"id":"color?-instance-method","html_id":"color?-instance-method","name":"color?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/content.cr#L3","def":{"name":"color?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Color"}},{"id":"color_alpha?-instance-method","html_id":"color_alpha?-instance-method","name":"color_alpha?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/content.cr#L5","def":{"name":"color_alpha?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ColorAlpha"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Context","path":"Cairo/Context.html","kind":"class","full_name":"Cairo::Context","name":"Context","abstract":false,"superclass":{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/context.cr","line_number":28,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L28"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"The cairo drawing context.\n\n`Context` is the main object used when drawing with cairo. To draw with cairo, you create a `Context`,\nset the target surface, and drawing options for the `Context`, create shapes with functions like `Context#move_to`\nand `Context#line_to`, and then draw shapes with `Context#stroke` or `Context#fill`.\n\n`Context`'s can be pushed to a stack via `Context#save`. They may then safely be changed, without losing the current state.\nUse `Context#restore` to restore to the saved state.\n\nA `Context` contains the current state of the rendering device, including coordinates of yet to be drawn shapes.\n\nCairo contexts, as `Context` objects are named, are central to cairo and all drawing with cairo is always done to a `Context` object.\n\nMemory management of `Context` is done with `Context#reference` and `Context#finalize`.","summary":"<p>The cairo drawing context.</p>","class_methods":[{"id":"version:Int32-class-method","html_id":"version:Int32-class-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L58","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"LibCairo.version"}},{"id":"version_string:String-class-method","html_id":"version_string:String-class-method","name":"version_string","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L62","def":{"name":"version_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.new(LibCairo.version_string)"}}],"constructors":[{"id":"new(cairo:LibCairo::PCairoT)-class-method","html_id":"new(cairo:LibCairo::PCairoT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"cairo","doc":null,"default_value":"","external_name":"cairo","restriction":"LibCairo::PCairoT"}],"args_string":"(cairo : LibCairo::PCairoT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L48","def":{"name":"new","args":[{"name":"cairo","doc":null,"default_value":"","external_name":"cairo","restriction":"LibCairo::PCairoT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(cairo)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(target:Surface)-class-method","html_id":"new(target:Surface)-class-method","name":"new","doc":"Creates a new `Context` with all graphics state parameters set to default values and with target as a target surface.\nThe target surface should be constructed with a backend-specific function such as `Surface#initialite`.\n\nThis function references target, so you can immediately call `Context#finalize` on it\nif you don't need to maintain a separate reference to it.\n\n###Paremeters\n- **target** target surface for the context\n\n###Returns\nA newly allocated `Context` with a reference count of 1. The initial reference count should be released with `Content::finalize`\nwhen you are done using the `Context`. This function never returns `Nil`.\nIf memory cannot be allocated, a special `Context` object will be returned on which `Context#status` returns\n`Status::NoMemory`. If you attempt to target a surface which does not support writing then a `Status::WriteError` will be raised.\nYou can use this object normally, but no drawing will be done.","summary":"<p>Creates a new <code><a href=\"../Cairo/Context.html\">Context</a></code> with all graphics state parameters set to default values and with target as a target surface.</p>","abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Surface"}],"args_string":"(target : Surface)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L44","def":{"name":"new","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Surface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(target)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"antialias:Antialias-instance-method","html_id":"antialias:Antialias-instance-method","name":"antialias","doc":"Gets the current shape antialiasing mode, as set by `Context#antialias=`.\n\n###Returns\nThe current shape antialiasing mode.","summary":"<p>Gets the current shape antialiasing mode, as set by <code><a href=\"../Cairo/Context.html#antialias=(antialias:Antialias)-instance-method\">Context#antialias=</a></code>.</p>","abstract":false,"args":[],"args_string":" : Antialias","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1523","def":{"name":"antialias","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Antialias","visibility":"Public","body":"Antialias.new((LibCairo.get_antialias(@cairo)).value)"}},{"id":"antialias=(antialias:Antialias)-instance-method","html_id":"antialias=(antialias:Antialias)-instance-method","name":"antialias=","doc":"Set the antialiasing mode of the rasterizer used for drawing shapes. This value is a hint,\nand a particular backend may or may not support a particular value. At the current time,\nno backend supports `Antialias::SubPixel` when drawing shapes.\n\nNOTE that this option does not affect text rendering, instead see `FontOptions#antialias=`.\n\n###Parameters\n- **antialias** the new antialiasing mode","summary":"<p>Set the antialiasing mode of the rasterizer used for drawing shapes.</p>","abstract":false,"args":[{"name":"antialias","doc":null,"default_value":"","external_name":"antialias","restriction":"Antialias"}],"args_string":"(antialias : Antialias)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L309","def":{"name":"antialias=","args":[{"name":"antialias","doc":null,"default_value":"","external_name":"antialias","restriction":"Antialias"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_antialias(@cairo, LibCairo::AntialiasT.new(antialias.value))\nself\n"}},{"id":"append(path:Path)-instance-method","html_id":"append(path:Path)-instance-method","name":"append","doc":"Append the path onto the current path. The path may be either the return value from one of `Context#cairo_copy_path`\nor `Context#copy_path_flat` or it may be constructed manually. See `Path` for details on how the path data structure\nshould be initialized, and note that `Path#status` must be initialized to `Status::Success`.\n\n###Parameters\n- **path** path to be appended","summary":"<p>Append the path onto the current path.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Path"}],"args_string":"(path : Path)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1686","def":{"name":"append","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"Path"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.append_path(@cairo, path.to_unsafe)\nself\n"}},{"id":"arc(xc:Int32|Float64,yc:Int32|Float64,radius:Int32|Float64,angle1:Float64,angle2:Float64)-instance-method","html_id":"arc(xc:Int32|Float64,yc:Int32|Float64,radius:Int32|Float64,angle1:Float64,angle2:Float64)-instance-method","name":"arc","doc":"Adds a circular arc of the given radius to the current path. The arc is centered at *(xc, yc)*,\nbegins at *angle1* and proceeds in the direction of increasing angles to end at *angle2*.\nIf *angle2* is less than *angle1* it will be progressively increased by 2*PI until it is greater than *angle1*.\n\nIf there is a current point, an initial line segment will be added to the path to connect the current point to the beginning of the arc.\nIf this initial line is undesired, it can be avoided by calling `Context#new_sub_path` before calling `Context#arc`.\n\nAngles are measured in radians. An angle of 0.0 is in the direction of the positive X axis (in user space).\nAn angle of *PI/2.0* radians (90 degrees) is in the direction of the positive Y axis (in user space).\nAngles increase in the direction from the positive X axis toward the positive Y axis.\nSo with the default transformation matrix, angles increase in a clockwise direction.\n\n(To convert from degrees to radians, use (degrees*(PI / 180.0)).)\n\nThis function gives the arc in the direction of increasing angles; see `Context#arc_negative`\nto get the arc in the direction of decreasing angles.\n\nThe arc is circular in user space. To achieve an elliptical arc, you can scale the current transformation matrix\nby different amounts in the X and Y directions. For example, to draw an ellipse in the box given by *x*, *y*, *width*, *height*:\n```\ncontext.save\ncontext.translate(x + width / 20., y + height / 2.0)\ncontext.scale(width / 2.0, height / 2.0)\ncontext.arc(0.0, 0.0, 1.0, 0.0, 2.0 * Math.PI)\ncontext.restore\n```\n\n###Parameters\n- **xc** X position of the center of the arc\n- **yc** Y position of the center of the arc\n- **radius** the radius of the arc\n- **angle1** the start angle, in radians\n- **angle2** the end angle, in radians","summary":"<p>Adds a circular arc of the given radius to the current path.</p>","abstract":false,"args":[{"name":"xc","doc":null,"default_value":"","external_name":"xc","restriction":"Int32 | Float64"},{"name":"yc","doc":null,"default_value":"","external_name":"yc","restriction":"Int32 | Float64"},{"name":"radius","doc":null,"default_value":"","external_name":"radius","restriction":"Int32 | Float64"},{"name":"angle1","doc":null,"default_value":"","external_name":"angle1","restriction":"Float64"},{"name":"angle2","doc":null,"default_value":"","external_name":"angle2","restriction":"Float64"}],"args_string":"(xc : Int32 | Float64, yc : Int32 | Float64, radius : Int32 | Float64, angle1 : Float64, angle2 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L659","def":{"name":"arc","args":[{"name":"xc","doc":null,"default_value":"","external_name":"xc","restriction":"Int32 | Float64"},{"name":"yc","doc":null,"default_value":"","external_name":"yc","restriction":"Int32 | Float64"},{"name":"radius","doc":null,"default_value":"","external_name":"radius","restriction":"Int32 | Float64"},{"name":"angle1","doc":null,"default_value":"","external_name":"angle1","restriction":"Float64"},{"name":"angle2","doc":null,"default_value":"","external_name":"angle2","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.arc(@cairo, xc, yc, radius, angle1, angle2)\nself\n"}},{"id":"arc(c:Point,radius:Float64,angle1:Float64,angle2:Float64)-instance-method","html_id":"arc(c:Point,radius:Float64,angle1:Float64,angle2:Float64)-instance-method","name":"arc","doc":null,"summary":null,"abstract":false,"args":[{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Point"},{"name":"radius","doc":null,"default_value":"","external_name":"radius","restriction":"Float64"},{"name":"angle1","doc":null,"default_value":"","external_name":"angle1","restriction":"Float64"},{"name":"angle2","doc":null,"default_value":"","external_name":"angle2","restriction":"Float64"}],"args_string":"(c : Point, radius : Float64, angle1 : Float64, angle2 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L665","def":{"name":"arc","args":[{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Point"},{"name":"radius","doc":null,"default_value":"","external_name":"radius","restriction":"Float64"},{"name":"angle1","doc":null,"default_value":"","external_name":"angle1","restriction":"Float64"},{"name":"angle2","doc":null,"default_value":"","external_name":"angle2","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.arc(@cairo, c.x, c.y, radius, angle1, angle2)\nself\n"}},{"id":"arc_negative(xc:Float64,yc:Float64,radius:Float64,angle1:Float64,angle2:Float64)-instance-method","html_id":"arc_negative(xc:Float64,yc:Float64,radius:Float64,angle1:Float64,angle2:Float64)-instance-method","name":"arc_negative","doc":"Adds a circular arc of the given radius to the current path. The arc is centered at *(xc, yc)*,\nbegins at *angle1* and proceeds in the direction of decreasing angles to end at *angle2*.\nIf *angle2* is greater than *angle1* it will be progressively decreased by 2*PI until it is less than *angle1*.\n\nSee `Context#arc` for more details. This function differs only in the direction of the arc between the two angles.\n\n###Parameters\n- **xc** X position of the center of the arc\n- **yc** Y position of the center of the arc\n- **radius** the radius of the arc\n- **angle1** the start angle, in radians\n- **angle2** the end angle, in radians","summary":"<p>Adds a circular arc of the given radius to the current path.</p>","abstract":false,"args":[{"name":"xc","doc":null,"default_value":"","external_name":"xc","restriction":"Float64"},{"name":"yc","doc":null,"default_value":"","external_name":"yc","restriction":"Float64"},{"name":"radius","doc":null,"default_value":"","external_name":"radius","restriction":"Float64"},{"name":"angle1","doc":null,"default_value":"","external_name":"angle1","restriction":"Float64"},{"name":"angle2","doc":null,"default_value":"","external_name":"angle2","restriction":"Float64"}],"args_string":"(xc : Float64, yc : Float64, radius : Float64, angle1 : Float64, angle2 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L682","def":{"name":"arc_negative","args":[{"name":"xc","doc":null,"default_value":"","external_name":"xc","restriction":"Float64"},{"name":"yc","doc":null,"default_value":"","external_name":"yc","restriction":"Float64"},{"name":"radius","doc":null,"default_value":"","external_name":"radius","restriction":"Float64"},{"name":"angle1","doc":null,"default_value":"","external_name":"angle1","restriction":"Float64"},{"name":"angle2","doc":null,"default_value":"","external_name":"angle2","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.arc_negative(@cairo, xc, yc, radius, angle1, angle2)\nself\n"}},{"id":"arc_negative(c:Point,radius:Float64,angle1:Float64,angle2:Float64)-instance-method","html_id":"arc_negative(c:Point,radius:Float64,angle1:Float64,angle2:Float64)-instance-method","name":"arc_negative","doc":null,"summary":null,"abstract":false,"args":[{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Point"},{"name":"radius","doc":null,"default_value":"","external_name":"radius","restriction":"Float64"},{"name":"angle1","doc":null,"default_value":"","external_name":"angle1","restriction":"Float64"},{"name":"angle2","doc":null,"default_value":"","external_name":"angle2","restriction":"Float64"}],"args_string":"(c : Point, radius : Float64, angle1 : Float64, angle2 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L688","def":{"name":"arc_negative","args":[{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Point"},{"name":"radius","doc":null,"default_value":"","external_name":"radius","restriction":"Float64"},{"name":"angle1","doc":null,"default_value":"","external_name":"angle1","restriction":"Float64"},{"name":"angle2","doc":null,"default_value":"","external_name":"angle2","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.arc_negative(@cairo, c.x, c.y, radius, angle1, angle2)\nself\n"}},{"id":"clip-instance-method","html_id":"clip-instance-method","name":"clip","doc":"Establishes a new clip region by intersecting the current clip region with the current path as it\nwould be filled by `Context#fill` and according to the current fill rule (see `Context#fill_rule=`).\n\nAfter `Context#clip`, the current path will be cleared from the cairo context.\n\nThe current clip region affects all drawing operations by effectively masking out any changes to\nthe surface that are outside the current clip region.\n\nCalling `Context#clip` can only make the clip region smaller, never larger.\nBut the current clip is part of the graphics state, so a temporary restriction of the clip region\ncan be achieved by calling `Context#clip` within a `Context#save`/`Context#restore` pair.\nThe only other means of increasing the size of the clip region is `Context#reset_clip`.","summary":"<p>Establishes a new clip region by intersecting the current clip region with the current path as it would be filled by <code><a href=\"../Cairo/Context.html#fill-instance-method\">Context#fill</a></code> and according to the current fill rule (see <code><a href=\"../Cairo/Context.html#fill_rule=(fill_rule:FillRule)-instance-method\">Context#fill_rule=</a></code>).</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1114","def":{"name":"clip","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.clip(@cairo)\nself\n"}},{"id":"clip_extents:Extents-instance-method","html_id":"clip_extents:Extents-instance-method","name":"clip_extents","doc":"Computes a bounding box in user coordinates covering the area inside the current clip.\n\n###Parameters\n- **x1** left of the resulting extents\n- **y1** top of the resulting extents\n- **x2** right of the resulting extents\n- **y2** bottom of the resulting extents","summary":"<p>Computes a bounding box in user coordinates covering the area inside the current clip.</p>","abstract":false,"args":[],"args_string":" : Extents","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1143","def":{"name":"clip_extents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Extents","visibility":"Public","body":"LibCairo.clip_extents(@cairo, out x1, out y1, out x2, out y2)\nExtents.new(x1, y1, x2, y2)\n"}},{"id":"clip_preserve-instance-method","html_id":"clip_preserve-instance-method","name":"clip_preserve","doc":"Establishes a new clip region by intersecting the current clip region with the current path as\nit would be filled by `Context#fill` and according to the current fill rule (see `Context#fill_rule=`).\n\nUnlike `Context#clip`, `Context#clip_preserve` preserves the path within the cairo context.\n\nThe current clip region affects all drawing operations by effectively masking out any changes\nto the surface that are outside the current clip region.\n\nCalling `Context#clip_preserve` can only make the clip region smaller, never larger.\nBut the current clip is part of the graphics state, so a temporary restriction of the clip region\ncan be achieved by calling `Context#clip_preserve` within a `Context#save`/`Context#restore` pair.\nThe only other means of increasing the size of the clip region is `Context#reset_clip`.","summary":"<p>Establishes a new clip region by intersecting the current clip region with the current path as it would be filled by <code><a href=\"../Cairo/Context.html#fill-instance-method\">Context#fill</a></code> and according to the current fill rule (see <code><a href=\"../Cairo/Context.html#fill_rule=(fill_rule:FillRule)-instance-method\">Context#fill_rule=</a></code>).</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1131","def":{"name":"clip_preserve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.clip_preserve(@cairo)\nself\n"}},{"id":"close_path-instance-method","html_id":"close_path-instance-method","name":"close_path","doc":"Adds a line segment to the path from the current point to the beginning of the current sub-path,\n(the most recent point passed to `Context#move_to`), and closes this sub-path.\nAfter this call the current point will be at the joined endpoint of the sub-path.\n\nThe behavior of `Context#close_path` is distinct from simply calling `Context#line_to`\nwith the equivalent coordinate in the case of stroking. When a closed sub-path is stroked,\nthere are no caps on the ends of the sub-path. Instead, there is a line join connecting the final and initial segments of the sub-path.\n\nIf there is no current point before the call to `Context#close_path`, this function will have no effect.\n\nNOTE: As of cairo version 1.2.4 any call to `Context#close_path` will place an explicit `PathDataType::MoveTo`\nelement into the path immediately after the `PathDataType::ClosePath` element,\n(which can be seen in `Context#copy_path` for example). This can simplify path processing in some cases as it may not be necessary\nto save the \"last move_to point\" during processing as the `PathDataType::MoveTo`\nimmediately after the `PathDataType::ClosePath` will provide that point.","summary":"<p>Adds a line segment to the path from the current point to the beginning of the current sub-path, (the most recent point passed to <code><a href=\"../Cairo/Context.html#move_to(x:Float64,y:Float64)-instance-method\">Context#move_to</a></code>), and closes this sub-path.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L802","def":{"name":"close_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.close_path(@cairo)\nself\n"}},{"id":"copy_clip_rectangle_list:RectangleList?-instance-method","html_id":"copy_clip_rectangle_list:RectangleList?-instance-method","name":"copy_clip_rectangle_list","doc":"Gets the current clip region as a list of rectangles in user coordinates. Never returns `Nil`.\nThe status in the list may be `Status::ClipNotRepresentable` to indicate that the clip region\ncannot be represented as a list of user-space rectangles. The status may have other values to indicate other errors.\n\n###Returns\nThe current clip region as a list of rectangles in user coordinates, which should be destroyed using `RectangleList#finalize`.","summary":"<p>Gets the current clip region as a list of rectangles in user coordinates.</p>","abstract":false,"args":[],"args_string":" : RectangleList?","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1154","def":{"name":"copy_clip_rectangle_list","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"RectangleList | ::Nil","visibility":"Public","body":"list = LibCairo.copy_clip_rectangle_list(@cairo)\nif list.null?\n  nil\nelse\n  RectangleList.new(list)\nend\n"}},{"id":"copy_page-instance-method","html_id":"copy_page-instance-method","name":"copy_page","doc":"Emits the current page for backends that support multiple pages, but doesn't clear it, so,\nthe contents of the current page will be retained for the next page too.\nUse `Context#show_page` if you want to get an empty page after the emission.\n\nThis is a convenience function that simply calls `Surface#copy_page` on context's target.","summary":"<p>Emits the current page for backends that support multiple pages, but doesn't clear it, so, the contents of the current page will be retained for the next page too.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L925","def":{"name":"copy_page","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.copy_page(@cairo)\nself\n"}},{"id":"copy_path:Path-instance-method","html_id":"copy_path:Path-instance-method","name":"copy_path","doc":"Creates a copy of the current path and returns it to the user as a `Path`.\nSee `PathData` for hints on how to iterate over the returned data structure.\n\nThis function will always return a valid pointer, but the result will have no data (data==Nil and num_data==0),\nif either of the following conditions hold:\n1. If there is insufficient memory to copy the path. In this case `Path#status` will be set to `Status::NoMemory`.\n2. If `Context` is already in an error state. In this case `path.status` will contain the same status\nthat would be returned by `Context#status`.\n\n###Returns\nThe copy of the current path. The caller owns the returned object and should call `Path#finalize` when finished with it.","summary":"<p>Creates a copy of the current path and returns it to the user as a <code><a href=\"../Cairo/Path.html\">Path</a></code>.</p>","abstract":false,"args":[],"args_string":" : Path","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1656","def":{"name":"copy_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path","visibility":"Public","body":"Path.new(LibCairo.copy_path(@cairo))"}},{"id":"copy_path_flat:Path-instance-method","html_id":"copy_path_flat:Path-instance-method","name":"copy_path_flat","doc":"Gets a flattened copy of the current path and returns it to the user as a `Path`.\nSee `PathData` for hints on how to iterate over the returned data structure.\n\nThis function is like `Context#copy_path` except that any curves in the path will be approximated\nwith piecewise-linear approximations, (accurate to within the current tolerance value).\nThat is, the result is guaranteed to not have any elements of type `PathDataType::CurveTo`\nwhich will instead be replaced by a series of `PathDataType::LineTo` elements.\n\nThis function will always return a valid pointer, but the result will have no data (data==Nil and num_data==0),\nif either of the following conditions hold:\n1. If there is insufficient memory to copy the path. In this case `Path#status` will be set to `Status::NoMemory`.\n2. If `Context` is already in an error state. In this case `Path#status` will contain the same status\nthat would be returned by `Context#status`.\n\n###Returns\nThe copy of the current path. The caller owns the returned object and should call `Path#fnalize` when finished with it.","summary":"<p>Gets a flattened copy of the current path and returns it to the user as a <code><a href=\"../Cairo/Path.html\">Path</a></code>.</p>","abstract":false,"args":[],"args_string":" : Path","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1676","def":{"name":"copy_path_flat","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path","visibility":"Public","body":"Path.new(LibCairo.copy_path_flat(@cairo))"}},{"id":"current_point:Point-instance-method","html_id":"current_point:Point-instance-method","name":"current_point","doc":"Gets the current point of the current path, which is conceptually the final point reached by the path so far.\n\nThe current point is returned in the user-space coordinate system.\nIf there is no defined current point or if `Context` is in an error status,\nx and y will both be set to 0.0. It is possible to check this in advance with `Context#has_current_point?`.\n\nMost path construction functions alter the current point.\nSee the following for details on how they affect the current point: `Context#new_path`, `Context#new_sub_path`,\n`Context#append`, `Context#close_path`, `Context#move_to`, `Context#line_to`, `Context#curve_to`, `Context#rel_move_to`,\n`Context#rel_line_to`, `Context#rel_curve_to`, `Context#arc`, `Context#arc_negative`, `Context#cairo_rectangle`,\n`Context#text_path`, `Context#glyph_path`, `Context#stroke_to_path`.\n\nSome functions use and alter the current point but do not otherwise change current path: `Context#show_text`.\n\nSome functions unset the current path and as a result, current point: `Context#fill`, `Context#stroke`.","summary":"<p>Gets the current point of the current path, which is conceptually the final point reached by the path so far.</p>","abstract":false,"args":[],"args_string":" : Point","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1550","def":{"name":"current_point","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point","visibility":"Public","body":"LibCairo.get_current_point(@cairo, out x, out y)\nPoint.new(x, y)\n"}},{"id":"curve_to(x1:Float64,y1:Float64,x2:Float64,y2:Float64,x3:Float64,y3:Float64)-instance-method","html_id":"curve_to(x1:Float64,y1:Float64,x2:Float64,y2:Float64,x3:Float64,y3:Float64)-instance-method","name":"curve_to","doc":"Adds a cubic B√©zier spline to the path from the current point to position *(x3, y3)* in user-space coordinates,\nusing *(x1, y1)* and *(x2, y2)* as the control points. After this call the current point will be *(x3, y3)*.\n\nIf there is no current point before the call to `Context#curve_to` this function will behave as\nif preceded by a call to `Context#move_to(x1, y1)`.\n\n###Parameters\n- **x1** the X coordinate of the first control point\n- **y1** the Y coordinate of the first control point\n- **x2** the X coordinate of the second control point\n- **y2** the Y coordinate of the second control point\n- **x3** the X coordinate of the end of the curve\n- **y3** the Y coordinate of the end of the curve","summary":"<p>Adds a cubic B√©zier spline to the path from the current point to position <em>(x3, y3)</em> in user-space coordinates, using <em>(x1, y1)</em> and <em>(x2, y2)</em> as the control points.</p>","abstract":false,"args":[{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Float64"},{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Float64"},{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Float64"},{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Float64"},{"name":"x3","doc":null,"default_value":"","external_name":"x3","restriction":"Float64"},{"name":"y3","doc":null,"default_value":"","external_name":"y3","restriction":"Float64"}],"args_string":"(x1 : Float64, y1 : Float64, x2 : Float64, y2 : Float64, x3 : Float64, y3 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L614","def":{"name":"curve_to","args":[{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Float64"},{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Float64"},{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Float64"},{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Float64"},{"name":"x3","doc":null,"default_value":"","external_name":"x3","restriction":"Float64"},{"name":"y3","doc":null,"default_value":"","external_name":"y3","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.curve_to(@cairo, x1, y1, x2, y2, x3, y3)\nself\n"}},{"id":"curve_to(p1:Point,p2:Point,p3:Point)-instance-method","html_id":"curve_to(p1:Point,p2:Point,p3:Point)-instance-method","name":"curve_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"p1","doc":null,"default_value":"","external_name":"p1","restriction":"Point"},{"name":"p2","doc":null,"default_value":"","external_name":"p2","restriction":"Point"},{"name":"p3","doc":null,"default_value":"","external_name":"p3","restriction":"Point"}],"args_string":"(p1 : Point, p2 : Point, p3 : Point)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L621","def":{"name":"curve_to","args":[{"name":"p1","doc":null,"default_value":"","external_name":"p1","restriction":"Point"},{"name":"p2","doc":null,"default_value":"","external_name":"p2","restriction":"Point"},{"name":"p3","doc":null,"default_value":"","external_name":"p3","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.curve_to(@cairo, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y)\nself\n"}},{"id":"dash:NamedTuple()-instance-method","html_id":"dash:NamedTuple()-instance-method","name":"dash","doc":"Gets the current dash array. If not empty, dashes should be big enough to hold at least the number of values returned\nby `Context#dash_count`.","summary":"<p>Gets the current dash array.</p>","abstract":false,"args":[],"args_string":" : NamedTuple()","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1608","def":{"name":"dash","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(dashes: Float64, offset: Float64)","visibility":"Public","body":"LibCairo.get_dash(@cairo, out dashes, out offset)\n{dashes: dashes, offset: offset}\n"}},{"id":"dash_count:Int32-instance-method","html_id":"dash_count:Int32-instance-method","name":"dash_count","doc":"This function returns the length of the dash array in `Context` (0 if dashing is not currently in effect).\n\nSee also `Context#set_dash` and `Context#dash`.\n\n###Returns\nThe length of the dash array, or 0 if no dash array set.","summary":"<p>This function returns the length of the dash array in <code><a href=\"../Cairo/Context.html\">Context</a></code> (0 if dashing is not currently in effect).</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1602","def":{"name":"dash_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"LibCairo.get_dash_count(@cairo)"}},{"id":"device_to_user(p:Point):Point-instance-method","html_id":"device_to_user(p:Point):Point-instance-method","name":"device_to_user","doc":"Transform a coordinate from device space to user space by multiplying the given point by the inverse\nof the current transformation matrix (CTM).\n\n###Parameters\n- **p** point to transform\n\n###Returns\nThe transformed point.","summary":"<p>Transform a coordinate from device space to user space by multiplying the given point by the inverse of the current transformation matrix (CTM).</p>","abstract":false,"args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"args_string":"(p : Point) : Point","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L518","def":{"name":"device_to_user","args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point","visibility":"Public","body":"x, y = p.x, p.x\nLibCairo.device_to_user(@cairo, pointerof(x), pointerof(y))\nPoint.new(x, y)\n"}},{"id":"device_to_user_distance(d:Point):Point-instance-method","html_id":"device_to_user_distance(d:Point):Point-instance-method","name":"device_to_user_distance","doc":"Transform a distance vector from device space to user space.\nThis function is similar to `Context#device_to_user` except that the translation components\nof the inverse CTM will be ignored when transforming *(dx, dy)*.\n\n###Parameters\n- **d** the distance vector in device space.\n\n###Returns\nThe distance vector is user space.","summary":"<p>Transform a distance vector from device space to user space.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Point"}],"args_string":"(d : Point) : Point","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L533","def":{"name":"device_to_user_distance","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point","visibility":"Public","body":"x, y = d.x, d.y\nLibCairo.device_to_user_distance(@cairo, pointerof(x), pointerof(y))\nPoint.new(x, y)\n"}},{"id":"fill-instance-method","html_id":"fill-instance-method","name":"fill","doc":"A drawing operator that fills the current path according to the current fill rule,\n(each sub-path is implicitly closed before being filled). After `Context#fill`,\nthe current path will be cleared from the cairo context.\nSee `Context#fill_rule=` and `Context#fill_preserve`.","summary":"<p>A drawing operator that fills the current path according to the current fill rule, (each sub-path is implicitly closed before being filled).</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L905","def":{"name":"fill","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.fill(@cairo)\nself\n"}},{"id":"fill_extents(x1:Float64,y1:Float64,x2:Float64,y2:Float64)-instance-method","html_id":"fill_extents(x1:Float64,y1:Float64,x2:Float64,y2:Float64)-instance-method","name":"fill_extents","doc":"Computes a bounding box in user coordinates covering the area that would be affected,\n(the \"inked\" area), by a `Context#fill` operation given the current path and fill parameters.\nIf the current path is empty, returns an empty rectangle ((0,0), (0,0)).\nSurface dimensions and clipping are not taken into account.\n\nContrast with `Context#path_extents`, which is similar, but returns non-zero extents for some paths with no inked area,\n(such as a simple line segment).\n\nNOTE that `Context#fill_extents` must necessarily do more work to compute the precise inked areas in light of the fill rule,\nso `Context#path_extents` may be more desirable for sake of performance if the non-inked path extents are desired.\n\nSee `Context#fill`, `Context#fill_rule=` and `Context#fill_preserve`.\n\n###Parameters\n- **x1** left of the resulting extents\n- **y1** top of the resulting extents\n- **x2** right of the resulting extents\n- **y2** bottom of the resulting extents","summary":"<p>Computes a bounding box in user coordinates covering the area that would be affected, (the \"inked\" area), by a <code><a href=\"../Cairo/Context.html#fill-instance-method\">Context#fill</a></code> operation given the current path and fill parameters.</p>","abstract":false,"args":[{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Float64"},{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Float64"},{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Float64"},{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Float64"}],"args_string":"(x1 : Float64, y1 : Float64, x2 : Float64, y2 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1044","def":{"name":"fill_extents","args":[{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Float64"},{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Float64"},{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Float64"},{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.fill_extents(@cairo, x1, y1, x2, y2)\nself\n"}},{"id":"fill_extents(p1:Point,p2:Point)-instance-method","html_id":"fill_extents(p1:Point,p2:Point)-instance-method","name":"fill_extents","doc":"Computes a bounding box in user coordinates covering the area that would be affected,\n(the \"inked\" area), by a `Context#fill` operation given the current path and fill parameters.\nIf the current path is empty, returns an empty rectangle ((0,0), (0,0)).\nSurface dimensions and clipping are not taken into account.\n\nContrast with `Context#path_extents`, which is similar, but returns non-zero extents for some paths with no inked area,\n(such as a simple line segment).\n\nNOTE that `Context#fill_extents` must necessarily do more work to compute the precise inked areas in light of the fill rule,\nso `Context#path_extents` may be more desirable for sake of performance if the non-inked path extents are desired.\n\nSee `Context#fill`, `Context#fill_rule=` and `Context#fill_preserve`.\n\n###Parameters\n- **p1** top-left corner of the resulting extents\n- **p2** bottom-right corner of the resulting extents","summary":"<p>Computes a bounding box in user coordinates covering the area that would be affected, (the \"inked\" area), by a <code><a href=\"../Cairo/Context.html#fill-instance-method\">Context#fill</a></code> operation given the current path and fill parameters.</p>","abstract":false,"args":[{"name":"p1","doc":null,"default_value":"","external_name":"p1","restriction":"Point"},{"name":"p2","doc":null,"default_value":"","external_name":"p2","restriction":"Point"}],"args_string":"(p1 : Point, p2 : Point)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1065","def":{"name":"fill_extents","args":[{"name":"p1","doc":null,"default_value":"","external_name":"p1","restriction":"Point"},{"name":"p2","doc":null,"default_value":"","external_name":"p2","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.fill_extents(@cairo, p1.x, p1.y, p2.x, p2.y)\nself\n"}},{"id":"fill_extents(extents:Extents)-instance-method","html_id":"fill_extents(extents:Extents)-instance-method","name":"fill_extents","doc":"Computes a bounding box in user coordinates covering the area that would be affected,\n(the \"inked\" area), by a `Context#fill` operation given the current path and fill parameters.\nIf the current path is empty, returns an empty rectangle ((0,0), (0,0)).\nSurface dimensions and clipping are not taken into account.\n\nContrast with `Context#path_extents`, which is similar, but returns non-zero extents for some paths with no inked area,\n(such as a simple line segment).\n\nNOTE that `Context#fill_extents` must necessarily do more work to compute the precise inked areas in light of the fill rule,\nso `Context#path_extents` may be more desirable for sake of performance if the non-inked path extents are desired.\n\nSee `Context#fill`, `Context#fill_rule=` and `Context#fill_preserve`.\n\n###Parameters\n- **extents** the resulting extents","summary":"<p>Computes a bounding box in user coordinates covering the area that would be affected, (the \"inked\" area), by a <code><a href=\"../Cairo/Context.html#fill-instance-method\">Context#fill</a></code> operation given the current path and fill parameters.</p>","abstract":false,"args":[{"name":"extents","doc":null,"default_value":"","external_name":"extents","restriction":"Extents"}],"args_string":"(extents : Extents)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1085","def":{"name":"fill_extents","args":[{"name":"extents","doc":null,"default_value":"","external_name":"extents","restriction":"Extents"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.fill_extents(@cairo, extents.x1, extents.y1, extents.x2, extents.y2)\nself\n"}},{"id":"fill_preserve-instance-method","html_id":"fill_preserve-instance-method","name":"fill_preserve","doc":"A drawing operator that fills the current path according to the current fill rule,\n(each sub-path is implicitly closed before being filled). Unlike `Context#fill`,\n`Context#fill_preserve` preserves the path within the cairo context.\n\nSee `Context#fill_rule=` and `Context#fill`.","summary":"<p>A drawing operator that fills the current path according to the current fill rule, (each sub-path is implicitly closed before being filled).</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L915","def":{"name":"fill_preserve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.fill_preserve(@cairo)\nself\n"}},{"id":"fill_rule:FillRule-instance-method","html_id":"fill_rule:FillRule-instance-method","name":"fill_rule","doc":"Gets the current fill rule, as set by `Contex#fill_rule=`.\n\n###Returns\nThe current fill rule.","summary":"<p>Gets the current fill rule, as set by <code>Contex#fill_rule=</code>.</p>","abstract":false,"args":[],"args_string":" : FillRule","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1559","def":{"name":"fill_rule","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FillRule","visibility":"Public","body":"FillRule.new((LibCairo.get_fill_rule(@cairo)).value)"}},{"id":"fill_rule=(fill_rule:FillRule)-instance-method","html_id":"fill_rule=(fill_rule:FillRule)-instance-method","name":"fill_rule=","doc":"Set the current fill rule within the cairo context. The fill rule is used to determine which regions are inside\nor outside a complex (potentially self-intersecting) path. The current fill rule affects both `Context#fill` and `Context#clip`.\nSee `FillRule` for details on the semantics of each available fill rule.\n\nThe default fill rule is `FillRule::Winding`.\n\n###Parameters\n- **fill_rule** a fill rule","summary":"<p>Set the current fill rule within the cairo context.</p>","abstract":false,"args":[{"name":"fill_rule","doc":null,"default_value":"","external_name":"fill_rule","restriction":"FillRule"}],"args_string":"(fill_rule : FillRule)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L322","def":{"name":"fill_rule=","args":[{"name":"fill_rule","doc":null,"default_value":"","external_name":"fill_rule","restriction":"FillRule"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_fill_rule(@cairo, LibCairo::FillRuleT.new(fill_rule.value))\nself\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Decreases the reference count by one. If the result is zero, then `Context` and all associated resources are freed. See `Context#reference`.","summary":"<p>Decreases the reference count by one.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L54","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.destroy(@cairo)"}},{"id":"font_extents:FontExtents-instance-method","html_id":"font_extents:FontExtents-instance-method","name":"font_extents","doc":"Gets the font extents for the currently selected font.\n\n###Returns\nA `FontExtents` object into which the results will be stored.","summary":"<p>Gets the font extents for the currently selected font.</p>","abstract":false,"args":[],"args_string":" : FontExtents","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1490","def":{"name":"font_extents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FontExtents","visibility":"Public","body":"LibCairo.font_extents(@cairo, out font_extents)\nFontExtents.new(font_extents)\n"}},{"id":"font_face:FontFace-instance-method","html_id":"font_face:FontFace-instance-method","name":"font_face","doc":"Gets the current font face for a `Context`.\n\n###Returns\nThe current font face. This object is owned by cairo. To keep a reference to it, you must call `FontFace#reference`.\n\nThis function never returns Nil. If memory cannot be allocated, a special \"nil\" `FontFace` object will be\nreturned on which `FontFace#status` returns `Status::NoMemory`.\nUsing this nil object will cause its error state to propagate to other objects it is passed to,\n(for example, calling `Context#font_face=` with a nil font will trigger an error that will shutdown the `Context` object).","summary":"<p>Gets the current font face for a <code><a href=\"../Cairo/Context.html\">Context</a></code>.</p>","abstract":false,"args":[],"args_string":" : FontFace","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1313","def":{"name":"font_face","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FontFace","visibility":"Public","body":"font_face = LibCairo.get_font_face(@cairo)\nFontFace.new(font_face)\n"}},{"id":"font_face=(font_face:FontFace?)-instance-method","html_id":"font_face=(font_face:FontFace?)-instance-method","name":"font_face=","doc":"Replaces the current `FontFace` object in the `Context` with *font_face*.\nThe replaced font face in the `Context` will be destroyed if there are no other references to it.\n\n###Parameters\n- **font_face** a `FontFace`, or `Nil` to restore to the default font.","summary":"<p>Replaces the current <code><a href=\"../Cairo/FontFace.html\">FontFace</a></code> object in the <code><a href=\"../Cairo/Context.html\">Context</a></code> with <em>font_face</em>.</p>","abstract":false,"args":[{"name":"font_face","doc":null,"default_value":"","external_name":"font_face","restriction":"FontFace | ::Nil"}],"args_string":"(font_face : FontFace?)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1323","def":{"name":"font_face=","args":[{"name":"font_face","doc":null,"default_value":"","external_name":"font_face","restriction":"FontFace | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if font_face.nil?\n  LibCairo.set_font_face(@cairo, LibCairo::PFontFaceT.null)\nelse\n  LibCairo.set_font_face(@cairo, font_face.not_nil!.to_unsafe)\nend\nself\n"}},{"id":"font_matrix:Matrix-instance-method","html_id":"font_matrix:Matrix-instance-method","name":"font_matrix","doc":"Returns the current font matrix. See `Context#font_matrix=`.\n\n###Return\nThe matrix.","summary":"<p>Returns the current font matrix.</p>","abstract":false,"args":[],"args_string":" : Matrix","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1263","def":{"name":"font_matrix","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Matrix","visibility":"Public","body":"matrix = Matrix.new\nLibCairo.get_font_matrix(@cairo, matrix.to_unsafe)\nmatrix\n"}},{"id":"font_matrix=(matrix:Matrix)-instance-method","html_id":"font_matrix=(matrix:Matrix)-instance-method","name":"font_matrix=","doc":"Sets the current font matrix to matrix. The font matrix gives a transformation from the design space\nof the font (in this space, the em-square is 1 unit by 1 unit) to user space.\nNormally, a simple scale is used (see `Context#font_size=`), but a more complex font matrix can be used\nto shear the font or stretch it unequally along the two axes.\n\n###Parameters\n- **matrix** a `Matrix` describing a transform to be applied to the current font.","summary":"<p>Sets the current font matrix to matrix.</p>","abstract":false,"args":[{"name":"matrix","doc":null,"default_value":"","external_name":"matrix","restriction":"Matrix"}],"args_string":"(matrix : Matrix)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1276","def":{"name":"font_matrix=","args":[{"name":"matrix","doc":null,"default_value":"","external_name":"matrix","restriction":"Matrix"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_font_matrix(@cairo, matrix.to_unsafe)\nself\n"}},{"id":"font_options:FontOptions-instance-method","html_id":"font_options:FontOptions-instance-method","name":"font_options","doc":"Retrieves font rendering options set via `Context#font_options=`.\nNOTE that the returned options do not include any options derived from the underlying surface;\nthey are literally the options passed to `Context#font_options=`.\n\n###Parameters\n- **options** a `FontOptions` object into which to store the retrieved options. All existing values are overwritten.","summary":"<p>Retrieves font rendering options set via <code><a href=\"../Cairo/Context.html#font_options=(options:FontOptions)-instance-method\">Context#font_options=</a></code>.</p>","abstract":false,"args":[],"args_string":" : FontOptions","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1287","def":{"name":"font_options","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FontOptions","visibility":"Public","body":"font_options = FontOptions.new\nLibCairo.get_font_options(@cairo, font_options.to_unsafe)\nfont_options\n"}},{"id":"font_options=(options:FontOptions)-instance-method","html_id":"font_options=(options:FontOptions)-instance-method","name":"font_options=","doc":"Sets a set of custom font rendering options for the `Context`.\nRendering options are derived by merging these options with the options derived from underlying surface;\nif the value in options has a default value (like Antialias::Default), then the value from the surface is used.\n\n###Parameters\n- **options** font options to use","summary":"<p>Sets a set of custom font rendering options for the <code><a href=\"../Cairo/Context.html\">Context</a></code>.</p>","abstract":false,"args":[{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"FontOptions"}],"args_string":"(options : FontOptions)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1299","def":{"name":"font_options=","args":[{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"FontOptions"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_font_options(@cairo, options.to_unsafe)\nself\n"}},{"id":"font_size=(size:Float64)-instance-method","html_id":"font_size=(size:Float64)-instance-method","name":"font_size=","doc":"Sets the current font matrix to a scale by a factor of size,\nreplacing any font matrix previously set with `Context#set_font_size=` or `Context#font_matrix=`.\nThis results in a font size of size user space units. (More precisely, this matrix will result in\nthe font's em-square being a size by size square in user space.)\n\nIf text is drawn without a call to `Context#font_size=`, (nor `Context#font_matrix=` nor `Context#scaled_font=`),\nthe default font size is 10.0.\n\n###Parameters\n- **size** the new font size, in user space units","summary":"<p>Sets the current font matrix to a scale by a factor of size, replacing any font matrix previously set with <code>Context#set_font_size=</code> or <code><a href=\"../Cairo/Context.html#font_matrix=(matrix:Matrix)-instance-method\">Context#font_matrix=</a></code>.</p>","abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Float64"}],"args_string":"(size : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1254","def":{"name":"font_size=","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_font_size(@cairo, size)\nself\n"}},{"id":"glyph_extents(glyphs:GlyphArray):TextExtents-instance-method","html_id":"glyph_extents(glyphs:GlyphArray):TextExtents-instance-method","name":"glyph_extents","doc":"Gets the extents for an array of glyphs. The extents describe a user-space rectangle that encloses\nthe \"inked\" portion of the glyphs, (as they would be drawn by `Context#show_glyphs`).\nAdditionally, the *x_advance* and *y_advance* values indicate the amount by which the current point\nwould be advanced by `Context#show_glyphs`.\n\nNOTE that whitespace glyphs do not contribute to the size of the rectangle (`extents.width` and `extents.height`).\n\n###Parameters\n- **glyphs** an array of `Glyph` objects\n\n###Returns\nA `TextExtents` object into which the results will be stored.","summary":"<p>Gets the extents for an array of glyphs.</p>","abstract":false,"args":[{"name":"glyphs","doc":null,"default_value":"","external_name":"glyphs","restriction":"GlyphArray"}],"args_string":"(glyphs : GlyphArray) : TextExtents","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1481","def":{"name":"glyph_extents","args":[{"name":"glyphs","doc":null,"default_value":"","external_name":"glyphs","restriction":"GlyphArray"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"TextExtents","visibility":"Public","body":"LibCairo.glyph_extents(@cairo, glyphs.to_unsafe, glyphs.size, out extents)\nTextExtents.new(extents)\n"}},{"id":"glyph_path(glyphs:GlyphArray)-instance-method","html_id":"glyph_path(glyphs:GlyphArray)-instance-method","name":"glyph_path","doc":"Adds closed paths for the glyphs to the current path. The generated path if filled,\nachieves an effect similar to that of `Context#show_glyphs`.\n\n###Parameters\n- **glyphs** array of glyphs to show","summary":"<p>Adds closed paths for the glyphs to the current path.</p>","abstract":false,"args":[{"name":"glyphs","doc":null,"default_value":"","external_name":"glyphs","restriction":"GlyphArray"}],"args_string":"(glyphs : GlyphArray)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1444","def":{"name":"glyph_path","args":[{"name":"glyphs","doc":null,"default_value":"","external_name":"glyphs","restriction":"GlyphArray"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.glyph_path(@cairo, glyphs.to_unsafe, glyphs.size)\nself\n"}},{"id":"group_target:Surface-instance-method","html_id":"group_target:Surface-instance-method","name":"group_target","doc":"Gets the current destination surface for the context. This is either the original target surface as passed to `Context#initialize`\nor the target surface for the current group as started by the most recent call to `Context#push_group` or `Context#push_group_with_content`.\n\nThis function will always return a valid pointer, but the result can be a \"nil\" surface if `Context` is already in an error state,\n(ie. `Context#status` != `Status::Success`). A Nil surface is indicated by `Surface#status` != `Status::Success`.\n\n###Returns\nThe target surface. This object is owned by cairo. To keep a reference to it, you must call `Surface#reference`.","summary":"<p>Gets the current destination surface for the context.</p>","abstract":false,"args":[],"args_string":" : Surface","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1641","def":{"name":"group_target","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Surface","visibility":"Public","body":"Surface.new(LibCairo.get_group_target(@cairo))"}},{"id":"has_current_point?:Bool-instance-method","html_id":"has_current_point?:Bool-instance-method","name":"has_current_point?","doc":"Returns whether a current point is defined on the current path. See `Context#current_point` for details on the current point.\n\n###Returns\nWhether a current point is defined.","summary":"<p>Returns whether a current point is defined on the current path.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1531","def":{"name":"has_current_point?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(LibCairo.has_current_point(@cairo)) == 1"}},{"id":"identity_matrix-instance-method","html_id":"identity_matrix-instance-method","name":"identity_matrix","doc":"Resets the current transformation matrix (CTM) by setting it equal to the identity matrix.\nThat is, the user-space and device-space axes will be aligned and one user-space unit will transform to one device-space unit.","summary":"<p>Resets the current transformation matrix (CTM) by setting it equal to the identity matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L478","def":{"name":"identity_matrix","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.identity_matrix(@cairo)\nself\n"}},{"id":"in_clip(x:Float64,y:Float64):Bool-instance-method","html_id":"in_clip(x:Float64,y:Float64):Bool-instance-method","name":"in_clip","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"args_string":"(x : Float64, y : Float64) : Bool","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L986","def":{"name":"in_clip","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(LibCairo.in_clip(@cairo, x, y)) == 1"}},{"id":"in_clip(p:Point):Bool-instance-method","html_id":"in_clip(p:Point):Bool-instance-method","name":"in_clip","doc":"Tests whether the given point is inside the area that would be visible through the current clip,\ni.e. the area that would be filled by a `Context#paint` operation.\n\nSee `Context#clip`, and `Context#clip_preserve`.\n\n###Parameters\n- **p** the point to test\n\n###Returns\n**true** if the point is inside, or **false** if outside.","summary":"<p>Tests whether the given point is inside the area that would be visible through the current clip, i.e.</p>","abstract":false,"args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"args_string":"(p : Point) : Bool","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1000","def":{"name":"in_clip","args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(LibCairo.in_clip(@cairo, p.x, p.y)) == 1"}},{"id":"in_fill(x:Float64,y:Float64):Bool-instance-method","html_id":"in_fill(x:Float64,y:Float64):Bool-instance-method","name":"in_fill","doc":"Tests whether the given point is inside the area that would be affected by a `Context#fill` operation\ngiven the current path and filling parameters. Surface dimensions and clipping are not taken into account.\n\nSee `Context#fill`, `Context#fill_rule=` and `Context#fill_preserve`.\n\n###Parameters\n- **x** X coordinate of the point to test\n- **y** Y coordinate of the point to test\n\n###Returns\nA non-zero value if the point is inside, or zero if outside.","summary":"<p>Tests whether the given point is inside the area that would be affected by a <code><a href=\"../Cairo/Context.html#fill-instance-method\">Context#fill</a></code> operation given the current path and filling parameters.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"args_string":"(x : Float64, y : Float64) : Bool","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L968","def":{"name":"in_fill","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(LibCairo.in_fill(@cairo, x, y)) == 1"}},{"id":"in_fill(p:Point):Bool-instance-method","html_id":"in_fill(p:Point):Bool-instance-method","name":"in_fill","doc":"Tests whether the given point is inside the area that would be affected by a `Context#fill` operation\ngiven the current path and filling parameters. Surface dimensions and clipping are not taken into account.\n\nSee `Context#fill`, `Context#fill_rule=` and `Context#fill_preserve`.\n\n###Parameters\n- **p** the point to test\n\n###Returns\nA non-zero value if the point is inside, or zero if outside.","summary":"<p>Tests whether the given point is inside the area that would be affected by a <code><a href=\"../Cairo/Context.html#fill-instance-method\">Context#fill</a></code> operation given the current path and filling parameters.</p>","abstract":false,"args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"args_string":"(p : Point) : Bool","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L982","def":{"name":"in_fill","args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(LibCairo.in_fill(@cairo, p.x, p.y)) == 1"}},{"id":"in_stroke(x:Float64,y:Float64):Bool-instance-method","html_id":"in_stroke(x:Float64,y:Float64):Bool-instance-method","name":"in_stroke","doc":"Tests whether the given point is inside the area that would be affected by a `Context#stroke` operation\ngiven the current path and stroking parameters. Surface dimensions and clipping are not taken into account.\n\nSee `Context#stroke`, `Context#line_width=`, `Context#line_join=`, `Context#line_cap=`, `Context#set_dash`, and `Context#stroke_preserve`.\n###Parameters\n- **x** X coordinate of the point to test\n- **y** Y coordinate of the point to test\n\n###Returns\nA non-zero value if the point is inside, or zero if outside.","summary":"<p>Tests whether the given point is inside the area that would be affected by a <code><a href=\"../Cairo/Context.html#stroke-instance-method\">Context#stroke</a></code> operation given the current path and stroking parameters.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"args_string":"(x : Float64, y : Float64) : Bool","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L949","def":{"name":"in_stroke","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(LibCairo.in_stroke(@cairo, x, y)) == 1"}},{"id":"in_stroke(p:Point):Bool-instance-method","html_id":"in_stroke(p:Point):Bool-instance-method","name":"in_stroke","doc":null,"summary":null,"abstract":false,"args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"args_string":"(p : Point) : Bool","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L953","def":{"name":"in_stroke","args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(LibCairo.in_stroke(@cairo, p.x, p.y)) == 1"}},{"id":"line(p1:Point,p2:Point)-instance-method","html_id":"line(p1:Point,p2:Point)-instance-method","name":"line","doc":null,"summary":null,"abstract":false,"args":[{"name":"p1","doc":null,"default_value":"","external_name":"p1","restriction":"Point"},{"name":"p2","doc":null,"default_value":"","external_name":"p2","restriction":"Point"}],"args_string":"(p1 : Point, p2 : Point)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L577","def":{"name":"line","args":[{"name":"p1","doc":null,"default_value":"","external_name":"p1","restriction":"Point"},{"name":"p2","doc":null,"default_value":"","external_name":"p2","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.move_to(@cairo, p1.x, p1.y)\nLibCairo.line_to(@cairo, p2.x, p2.y)\nself\n"}},{"id":"line(x1:Float64,y1:Float64,x2:Float64,y2:Float64)-instance-method","html_id":"line(x1:Float64,y1:Float64,x2:Float64,y2:Float64)-instance-method","name":"line","doc":null,"summary":null,"abstract":false,"args":[{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Float64"},{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Float64"},{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Float64"},{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Float64"}],"args_string":"(x1 : Float64, y1 : Float64, x2 : Float64, y2 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L571","def":{"name":"line","args":[{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Float64"},{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Float64"},{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Float64"},{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.move_to(@cairo, x1, y1)\nLibCairo.line_to(@cairo, x2, y2)\nself\n"}},{"id":"line_cap:LineCap-instance-method","html_id":"line_cap:LineCap-instance-method","name":"line_cap","doc":"Gets the current line cap style, as set by `Context#line_cap=`.\n\n###Returns\nThe current line cap style.","summary":"<p>Gets the current line cap style, as set by <code><a href=\"../Cairo/Context.html#line_cap=(line_cap:LineCap)-instance-method\">Context#line_cap=</a></code>.</p>","abstract":false,"args":[],"args_string":" : LineCap","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1576","def":{"name":"line_cap","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LineCap","visibility":"Public","body":"LineCap.new((LibCairo.get_line_cap(@cairo)).value)"}},{"id":"line_cap=(line_cap:LineCap)-instance-method","html_id":"line_cap=(line_cap:LineCap)-instance-method","name":"line_cap=","doc":"Sets the current line cap style within the cairo context.\nSee `LineCap` for details about how the available line cap styles are drawn.\n\nAs with the other stroke parameters, the current line cap style is examined by `Context#stroke`,\n`Context#stroke_extents`, and `Context#stroke_to_path`, but does not have any effect during path construction.\n\nThe default line cap style is `LineCap::Butt`.\n\n###Parameters\n- **line_cap** a line cap style","summary":"<p>Sets the current line cap style within the cairo context.</p>","abstract":false,"args":[{"name":"line_cap","doc":null,"default_value":"","external_name":"line_cap","restriction":"LineCap"}],"args_string":"(line_cap : LineCap)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L358","def":{"name":"line_cap=","args":[{"name":"line_cap","doc":null,"default_value":"","external_name":"line_cap","restriction":"LineCap"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_line_cap(@cairo, LibCairo::LineCapT.new(line_cap.value))\nself\n"}},{"id":"line_join:LineJoin-instance-method","html_id":"line_join:LineJoin-instance-method","name":"line_join","doc":"Gets the current line join style, as set by `Context#line_join=`.\n\n###Returns\nThe current line join style.","summary":"<p>Gets the current line join style, as set by <code><a href=\"../Cairo/Context.html#line_join=(line_join:LineJoin)-instance-method\">Context#line_join=</a></code>.</p>","abstract":false,"args":[],"args_string":" : LineJoin","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1584","def":{"name":"line_join","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LineJoin","visibility":"Public","body":"LineJoin.new((LibCairo.get_line_join(@cairo)).value)"}},{"id":"line_join=(line_join:LineJoin)-instance-method","html_id":"line_join=(line_join:LineJoin)-instance-method","name":"line_join=","doc":"Sets the current line join style within the cairo context. See `LineJoin` for details about how the available line join styles are drawn.\n\nAs with the other stroke parameters, the current line join style is examined by `Context#stroke`, `Context#stroke_extents`,\nand `Context#stroke_to_path`, but does not have any effect during path construction.\n\nThe default line join style is `LineJoin::Miter`.\n\n###Parameters\n- **line_join** a line join style","summary":"<p>Sets the current line join style within the cairo context.</p>","abstract":false,"args":[{"name":"line_join","doc":null,"default_value":"","external_name":"line_join","restriction":"LineJoin"}],"args_string":"(line_join : LineJoin)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L372","def":{"name":"line_join=","args":[{"name":"line_join","doc":null,"default_value":"","external_name":"line_join","restriction":"LineJoin"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_line_join(@cairo, LibCairo::LineJoinT.new(line_join.value))\nself\n"}},{"id":"line_to(p:Point)-instance-method","html_id":"line_to(p:Point)-instance-method","name":"line_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"args_string":"(p : Point)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L596","def":{"name":"line_to","args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.line_to(@cairo, p.x, p.y)\nself\n"}},{"id":"line_to(x:Float64,y:Float64)-instance-method","html_id":"line_to(x:Float64,y:Float64)-instance-method","name":"line_to","doc":"Adds a line to the path from the current point to position *(x, y)* in user-space coordinates.\nAfter this call the current point will be *(x, y)*.\n\nIf there is no current point before the call to `Context#line_to` this function will behave as `Context#move_to(x, y)`.\n\n###Parameters\n- **x** the X coordinate of the end of the new line\n- **y** the Y coordinate of the end of the new line","summary":"<p>Adds a line to the path from the current point to position <em>(x, y)</em> in user-space coordinates.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"args_string":"(x : Float64, y : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L591","def":{"name":"line_to","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.line_to(@cairo, x, y)\nself\n"}},{"id":"line_width:Float64-instance-method","html_id":"line_width:Float64-instance-method","name":"line_width","doc":"This function returns the current line width value exactly as set by `Context#line_width=`.\nNOTE that the value is unchanged even if the CTM has changed between the calls to `Context#line_width=` and `Context#line_width`.\n\n###Returns\nThe current line width.","summary":"<p>This function returns the current line width value exactly as set by <code><a href=\"../Cairo/Context.html#line_width=(width:Float64)-instance-method\">Context#line_width=</a></code>.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1568","def":{"name":"line_width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"LibCairo.get_line_width(@cairo)"}},{"id":"line_width=(width:Float64)-instance-method","html_id":"line_width=(width:Float64)-instance-method","name":"line_width=","doc":"Sets the current line width within the cairo context. The line width value specifies the diameter of a pen that is circular in user space,\n(though device-space pen may be an ellipse in general due to scaling/shear/rotation of the CTM).\n\nNOTE: When the description above refers to user space and CTM it refers to the user space and CTM in effect\nat the time of the stroking operation, not the user space and CTM in effect at the time of the call to `Context#line_width=`.\nThe simplest usage makes both of these spaces identical. That is, if there is no change to the CTM between\na call to `Context#line_width` and the stroking operation, then one can just pass user-space values to `Context#line_width=`\nand ignore this note.\n\nAs with the other stroke parameters, the current line width is examined by `Context#stroke`, `Context#stroke_extents`,\nand `Context#stroke_to_path`, but does not have any effect during path construction.\n\nThe default line width value is 2.0.\n\n###Parameters\n- **width** a line width","summary":"<p>Sets the current line width within the cairo context.</p>","abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Float64"}],"args_string":"(width : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L343","def":{"name":"line_width=","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_line_width(@cairo, width)\nself\n"}},{"id":"mask(pattern:Pattern)-instance-method","html_id":"mask(pattern:Pattern)-instance-method","name":"mask","doc":"A drawing operator that paints the current source using the alpha channel of pattern as a mask.\n(Opaque areas of pattern are painted with the source, transparent areas are not painted.)\n\n###Parameters\n- **pattern** a `Pattern`","summary":"<p>A drawing operator that paints the current source using the alpha channel of pattern as a mask.</p>","abstract":false,"args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"Pattern"}],"args_string":"(pattern : Pattern)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L855","def":{"name":"mask","args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"Pattern"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.mask(@cairo, pattern.to_unsafe)\nself\n"}},{"id":"mask_surface(surface:Surface,surface_x:Float64,surface_y:Float64)-instance-method","html_id":"mask_surface(surface:Surface,surface_x:Float64,surface_y:Float64)-instance-method","name":"mask_surface","doc":"A drawing operator that paints the current source using the alpha channel of surface as a mask.\n(Opaque areas of surface are painted with the source, transparent areas are not painted.)\n\n###Parameters\n**surface** a `Surface`\n**surface_x** X coordinate at which to place the origin of surface\n**surface_y** Y coordinate at which to place the origin of surface","summary":"<p>A drawing operator that paints the current source using the alpha channel of surface as a mask.</p>","abstract":false,"args":[{"name":"surface","doc":null,"default_value":"","external_name":"surface","restriction":"Surface"},{"name":"surface_x","doc":null,"default_value":"","external_name":"surface_x","restriction":"Float64"},{"name":"surface_y","doc":null,"default_value":"","external_name":"surface_y","restriction":"Float64"}],"args_string":"(surface : Surface, surface_x : Float64, surface_y : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L867","def":{"name":"mask_surface","args":[{"name":"surface","doc":null,"default_value":"","external_name":"surface","restriction":"Surface"},{"name":"surface_x","doc":null,"default_value":"","external_name":"surface_x","restriction":"Float64"},{"name":"surface_y","doc":null,"default_value":"","external_name":"surface_y","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.mask_surface(surface.to_unsafe, surface_x, surface_y)\nself\n"}},{"id":"matrix:Matrix-instance-method","html_id":"matrix:Matrix-instance-method","name":"matrix","doc":"Stores the current transformation matrix (CTM) into matrix .\n\n###Returns\nThe matrix.","summary":"<p>Stores the current transformation matrix (CTM) into matrix .</p>","abstract":false,"args":[],"args_string":" : Matrix","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1617","def":{"name":"matrix","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Matrix","visibility":"Public","body":"LibCairo.get_matrix(@cairo, out matrix)\nMatrix.new(matrix)\n"}},{"id":"matrix=(matrix:Matrix)-instance-method","html_id":"matrix=(matrix:Matrix)-instance-method","name":"matrix=","doc":"Modifies the current transformation matrix (CTM) by setting it equal to matrix.\n\n###Parameters\n- **matrix** a transformation matrix from user space to device space","summary":"<p>Modifies the current transformation matrix (CTM) by setting it equal to matrix.</p>","abstract":false,"args":[{"name":"matrix","doc":null,"default_value":"","external_name":"matrix","restriction":"Matrix"}],"args_string":"(matrix : Matrix)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L471","def":{"name":"matrix=","args":[{"name":"matrix","doc":null,"default_value":"","external_name":"matrix","restriction":"Matrix"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_matrix(@cairo, matrix.to_unsafe)\nself\n"}},{"id":"miter_limit:Float64-instance-method","html_id":"miter_limit:Float64-instance-method","name":"miter_limit","doc":"Gets the current miter limit, as set by `Context#miter_limit=`.\n\n###Returns\nThe current miter limit.","summary":"<p>Gets the current miter limit, as set by <code><a href=\"../Cairo/Context.html#miter_limit=(limit:Float64)-instance-method\">Context#miter_limit=</a></code>.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1592","def":{"name":"miter_limit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"LibCairo.get_miter_limit(@cairo)"}},{"id":"miter_limit=(limit:Float64)-instance-method","html_id":"miter_limit=(limit:Float64)-instance-method","name":"miter_limit=","doc":"Sets the current miter limit within the cairo context.\n\nIf the current line join style is set to `LineJoin::Miter` (see `Context#line_join=`),\nthe miter limit is used to determine whether the lines should be joined with a bevel instead of a miter.\nCairo divides the length of the miter by the line width. If the result is greater than the miter limit, the style is converted to a bevel.\n\nAs with the other stroke parameters, the current line miter limit is examined by `Context#stroke`, `Context#stroke_extents`,\nand `Context#stroke_to_path`, but does not have any effect during path construction.\n\nThe default miter limit value is 10.0, which will convert joins with interior angles less than 11 degrees to bevels instead of miters.\nFor reference, a miter limit of 2.0 makes the miter cutoff at 60 degrees, and a miter limit of 1.414 makes the cutoff at 90 degrees.\n\nA miter limit for a desired angle can be computed as: miter limit = 1/sin(angle/2)\n\n###Parameters\n- **limit** miter limit to set","summary":"<p>Sets the current miter limit within the cairo context.</p>","abstract":false,"args":[{"name":"limit","doc":null,"default_value":"","external_name":"limit","restriction":"Float64"}],"args_string":"(limit : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L419","def":{"name":"miter_limit=","args":[{"name":"limit","doc":null,"default_value":"","external_name":"limit","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_miter_limit(@cairo, limit)\nself\n"}},{"id":"move_to(x:Float64,y:Float64)-instance-method","html_id":"move_to(x:Float64,y:Float64)-instance-method","name":"move_to","doc":"Begin a new sub-path. After this call the current point will be *(x, y)*.\n\n###Parameters\n- **x** the X coordinate of the new position\n- **y** the Y coordinate of the new position","summary":"<p>Begin a new sub-path.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"args_string":"(x : Float64, y : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L550","def":{"name":"move_to","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.move_to(@cairo, x, y)\nself\n"}},{"id":"move_to(p:Point)-instance-method","html_id":"move_to(p:Point)-instance-method","name":"move_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"args_string":"(p : Point)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L555","def":{"name":"move_to","args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.move_to(@cairo, p.x, p.y)\nself\n"}},{"id":"new_path-instance-method","html_id":"new_path-instance-method","name":"new_path","doc":"Clears the current path. After this call there will be no path and no current point.","summary":"<p>Clears the current path.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L540","def":{"name":"new_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.new_path(@cairo)\nself\n"}},{"id":"new_sub_path-instance-method","html_id":"new_sub_path-instance-method","name":"new_sub_path","doc":"Begin a new sub-path. NOTE that the existing path is not affected. After this call there will be no current point.\n\nIn many cases, this call is not needed since new sub-paths are frequently started with `Context#move_to`.\n\nA call to `Context#new_sub_path` is particularly useful when beginning a new sub-path with one of the `Context#arc` calls.\nThis makes things easier as it is no longer necessary to manually compute the arc's initial coordinates for a call to `Context#move_to`.","summary":"<p>Begin a new sub-path.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L566","def":{"name":"new_sub_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.new_sub_path(@cairo)\nself\n"}},{"id":"operator:Operator-instance-method","html_id":"operator:Operator-instance-method","name":"operator","doc":"Gets the current compositing operator for a cairo context.\n\n###Returns\nThe current compositing operator.","summary":"<p>Gets the current compositing operator for a cairo context.</p>","abstract":false,"args":[],"args_string":" : Operator","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1499","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Operator","visibility":"Public","body":"Operator.new((LibCairo.get_operator(@cairo)).value)"}},{"id":"operator=(op:Operator)-instance-method","html_id":"operator=(op:Operator)-instance-method","name":"operator=","doc":"Sets the compositing operator to be used for all drawing operations.\nSee `Operator` for details on the semantics of each available compositing operator.\n\nThe default operator is `Operator::Over`.\n\n###Parameters\n- **op** a compositing operator, specified as a `Operator`","summary":"<p>Sets the compositing operator to be used for all drawing operations.</p>","abstract":false,"args":[{"name":"op","doc":null,"default_value":"","external_name":"op","restriction":"Operator"}],"args_string":"(op : Operator)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L210","def":{"name":"operator=","args":[{"name":"op","doc":null,"default_value":"","external_name":"op","restriction":"Operator"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_operator(@cairo, LibCairo::OperatorT.new(op.value))\nself\n"}},{"id":"paint-instance-method","html_id":"paint-instance-method","name":"paint","doc":"A drawing operator that paints the current source everywhere within the current clip region.","summary":"<p>A drawing operator that paints the current source everywhere within the current clip region.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L834","def":{"name":"paint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.paint(@cairo)\nself\n"}},{"id":"paint_with_alpha(alpha:Float64)-instance-method","html_id":"paint_with_alpha(alpha:Float64)-instance-method","name":"paint_with_alpha","doc":"A drawing operator that paints the current source everywhere within the current clip region\nusing a mask of constant alpha value alpha. The effect is similar to `Context#paint`,\nbut the drawing is faded out using the alpha value.\n\n###Parameters\n- **alpha** alpha value, between 0 (transparent) and 1 (opaque)","summary":"<p>A drawing operator that paints the current source everywhere within the current clip region using a mask of constant alpha value alpha.</p>","abstract":false,"args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"args_string":"(alpha : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L845","def":{"name":"paint_with_alpha","args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.paint_with_alpha(@cairo, alpha)\nself\n"}},{"id":"path_extents:Extents-instance-method","html_id":"path_extents:Extents-instance-method","name":"path_extents","doc":"Computes a bounding box in user-space coordinates covering the points on the current path.\nIf the current path is empty, returns an empty rectangle *((0,0), (0,0))*.\nStroke parameters, fill rule, surface dimensions and clipping are not taken into account.\n\nContrast with `Context#fill_extents` and `Context#stroke_extents` which return the extents of only the area\nthat would be \"inked\" by the corresponding drawing operations.\n\nThe result of `Context#path_extents` is defined as equivalent to the limit of `Context#stroke_extents`\nwith `LineCap::Round` as the line width approaches 0.0, (but never reaching the empty-rectangle\nreturned by `Context#stroke_extents` for a line width of 0.0).\n\nSpecifically, this means that zero-area sub-paths such as `Context#move_to`; `Context#line_to` segments,\n(even degenerate cases where the coordinates to both calls are identical),\nwill be considered as contributing to the extents. However, a lone `Context#move_to` will not contribute\nto the results of `Context#path_extents`.\n\n###Parameters\n- **x1** left of the resulting extents\n- **y1** top of the resulting extents\n- **x2** right of the resulting extents\n- **y2** bottom of the resulting extents","summary":"<p>Computes a bounding box in user-space coordinates covering the points on the current path.</p>","abstract":false,"args":[],"args_string":" : Extents","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L828","def":{"name":"path_extents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Extents","visibility":"Public","body":"LibCairo.path_extents(@cairo, out x1, out y1, out x2, out y2)\nExtents.new(x1, y1, x2, y2)\n"}},{"id":"pop_group:Pattern-instance-method","html_id":"pop_group:Pattern-instance-method","name":"pop_group","doc":"Terminates the redirection begun by a call to `Context#push_group` or `Context#push_group_with_content`\nand returns a new pattern containing the results of all drawing operations performed to the group.\n\nThe `Context#pop_group` function calls `Context#restore`, (balancing a call to `Context#save by the `Context#push_group` function),\nso that any changes to the graphics state will not be visible outside the group.\n\n###Returns\nA newly created (surface) pattern containing the results of all drawing operations performed to the group.\nThe caller owns the returned object and should call `Surface#finalize` when finished with it.","summary":"<p>Terminates the redirection begun by a call to <code><a href=\"../Cairo/Context.html#push_group-instance-method\">Context#push_group</a></code> or <code><a href=\"../Cairo/Context.html#push_group_with_content(content:Content)-instance-method\">Context#push_group_with_content</a></code> and returns a new pattern containing the results of all drawing operations performed to the group.</p>","abstract":false,"args":[],"args_string":" : Pattern","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L182","def":{"name":"pop_group","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Pattern","visibility":"Public","body":"Pattern.new(LibCairo.pop_group(@cairo))"}},{"id":"pop_group_to_source:Context-instance-method","html_id":"pop_group_to_source:Context-instance-method","name":"pop_group_to_source","doc":"Terminates the redirection begun by a call to `Context#push_group` or Context#push_group_with_content`\nand installs the resulting pattern as the source pattern in the given cairo context.\n\nThe behavior of this function is equivalent to the sequence of operations:\n```\ngroup = context.pop_group\ncontext.set_source(group)\ngroup.finalize\n```\nbut is more convenient as their is no need for a variable to store the short-lived pointer to the pattern.\n\nThe `Context#pop_group` function calls `Context#restore`, (balancing a call to `Context#save` by the `Context#push_group` function),\nso that any changes to the graphics state will not be visible outside the group.","summary":"<p>Terminates the redirection begun by a call to <code><a href=\"../Cairo/Context.html#push_group-instance-method\">Context#push_group</a></code> or Context#push_group_with_content` and installs the resulting pattern as the source pattern in the given cairo context.</p>","abstract":false,"args":[],"args_string":" : Context","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L199","def":{"name":"pop_group_to_source","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Context","visibility":"Public","body":"Context.new(LibCairo.pop_group_to_source(@cairo))"}},{"id":"push_group-instance-method","html_id":"push_group-instance-method","name":"push_group","doc":"Temporarily redirects drawing to an intermediate surface known as a group.\nThe redirection lasts until the group is completed by a call to `Context#pop_group` or `Context#pop_group_to_source`.\nThese calls provide the result of any drawing to the group as a pattern, (either as an explicit object, or set as the source pattern).\n\nThis group functionality can be convenient for performing intermediate compositing. One common use of a group is to render objects\nas opaque within the group, (so that they occlude each other), and then blend the result with translucence onto the destination.\n\nGroups can be nested arbitrarily deep by making balanced calls to `Context#push_group`/`Context#pop_group`.\nEach call pushes/pops the new target group onto/from a stack.\n\nThe `Context#push_group` function calls `Context#save` so that any changes to the graphics state will not be visible outside the group,\n(the pop_group functions call `Context#restore`).\n\nBy default the intermediate group will have a content type of `Content::ColorAlpha`.\nOther content types can be chosen for the group by using `Context#push_group_with_content` instead.\n\nAs an example, here is how one might fill and stroke a path with translucence, but without any portion of the fill being visible under the stroke:\n```\ncontext.push_group\ncontext.set_source(fill_pattern)\ncontext.fill_preserve\ncontext.set_source(stroke_pattern)\ncontext.stroke\ncontext.pop_group_to_source\ncontext.paint_with_alpha(alpha)\n```","summary":"<p>Temporarily redirects drawing to an intermediate surface known as a group.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L154","def":{"name":"push_group","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.push_group(@cairo)\nself\n"}},{"id":"push_group_with_content(content:Content)-instance-method","html_id":"push_group_with_content(content:Content)-instance-method","name":"push_group_with_content","doc":"Temporarily redirects drawing to an intermediate surface known as a group.\nThe redirection lasts until the group is completed by a call to `Context#pop_group` or `Context#pop_group_to_source`.\nThese calls provide the result of any drawing to the group as a pattern, (either as an explicit object, or set as the source pattern).\n\nThe group will have a content type of content. The ability to control this content type is the only distinction between this function\nand `Context#push_group` which you should see for a more detailed description of group rendering.\n\n###Parameters\n- **content** a `Content` indicating the type of group that will be created.","summary":"<p>Temporarily redirects drawing to an intermediate surface known as a group.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"Content"}],"args_string":"(content : Content)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L168","def":{"name":"push_group_with_content","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"Content"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.push_group_with_content(@cairo, LibCairo::ContentT.new(content.value))\nself\n"}},{"id":"rectangle(x:Float64,y:Float64,width:Float64,height:Float64)-instance-method","html_id":"rectangle(x:Float64,y:Float64,width:Float64,height:Float64)-instance-method","name":"rectangle","doc":"Adds a closed sub-path rectangle of the given size to the current path at position *(x, y)* in user-space coordinates.\n\nThis function is logically equivalent to:\n```\ncontext\n  .cairo_move_to(x, y)\n  .rel_line_to(width, 0)\n  .rel_line_to(0, height)\n  .rel_line_to(-width, 0)\n  .close_path\n```\n\n###Parameters\n- **x** the X coordinate of the top left corner of the rectangle\n- **y** the Y coordinate to the top left corner of the rectangle\n- **width** the width of the rectangle\n- **height** the height of the rectangle","summary":"<p>Adds a closed sub-path rectangle of the given size to the current path at position <em>(x, y)</em> in user-space coordinates.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Float64"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"}],"args_string":"(x : Float64, y : Float64, width : Float64, height : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L782","def":{"name":"rectangle","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Float64"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.rectangle(@cairo, x, y, width, height)\nself\n"}},{"id":"reference:Context-instance-method","html_id":"reference:Context-instance-method","name":"reference","doc":"Increases the reference count on cr by one. This prevents cr from being destroyed until a matching call to `Context#finalize` is made.\n\nUse `Context#reference_count` to get the number of references to a `Context`.\n\n###Returns\nThe referenced `Context`.","summary":"<p>Increases the reference count on cr by one.</p>","abstract":false,"args":[],"args_string":" : Context","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L72","def":{"name":"reference","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Context","visibility":"Public","body":"Context.new(LibCairo.reference(@cairo))"}},{"id":"reference_count:UInt32-instance-method","html_id":"reference_count:UInt32-instance-method","name":"reference_count","doc":"Returns the current reference count of *context*.\n\n###Returns\nThe current reference count of *context*. If the object is a nil object, 0 will be returned.","summary":"<p>Returns the current reference count of <em>context</em>.</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L80","def":{"name":"reference_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"LibCairo.get_reference_count(@cairo)"}},{"id":"rel_curve_to(d1:Point,d2:Point,d3:Point)-instance-method","html_id":"rel_curve_to(d1:Point,d2:Point,d3:Point)-instance-method","name":"rel_curve_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"d1","doc":null,"default_value":"","external_name":"d1","restriction":"Point"},{"name":"d2","doc":null,"default_value":"","external_name":"d2","restriction":"Point"},{"name":"d3","doc":null,"default_value":"","external_name":"d3","restriction":"Point"}],"args_string":"(d1 : Point, d2 : Point, d3 : Point)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L760","def":{"name":"rel_curve_to","args":[{"name":"d1","doc":null,"default_value":"","external_name":"d1","restriction":"Point"},{"name":"d2","doc":null,"default_value":"","external_name":"d2","restriction":"Point"},{"name":"d3","doc":null,"default_value":"","external_name":"d3","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.rel_curve_to(@cairo, d1.x, d1.y, d2.x, d2.y, d3.x, d3.y)\nself\n"}},{"id":"rel_curve_to(dx1:Float64,dy1:Float64,dx2:Float64,dy2:Float64,dx3:Float64,dy3:Float64)-instance-method","html_id":"rel_curve_to(dx1:Float64,dy1:Float64,dx2:Float64,dy2:Float64,dx3:Float64,dy3:Float64)-instance-method","name":"rel_curve_to","doc":"Relative-coordinate version of `Context#curve_to`. All offsets are relative to the current point.\nAdds a cubic B√©zier spline to the path from the current point to a point offset from the current point by *(dx3, dy3)*,\nusing points offset by *(dx1, dy1)* and *(dx2, dy2)* as the control points.\nAfter this call the current point will be offset by *(dx3, dy3)*.\n\nGiven a current point of *(x, y)*, `context.rel_curve_to(dx1, dy1, dx2, dy2, dx3, dy3)`\nis logically equivalent to `context.curve_to(x+dx1, y+dy1, x+dx2, y+dy2, x+dx3, y+dy3)`.\n\nIt is an error to call this function with no current point. Doing so will cause `Context` to shutdown\nwith a status of `Status::NoCurrentPoint`.\n\n###Parameters\n- **dx1** the X offset to the first control point\n- **dy1** the Y offset to the first control point\n- **dx2** the X offset to the second control point\n- **dy2** the Y offset to the second control point\n- **dx3** the X offset to the end of the curve\n- **dy3** the Y offset to the end of the curve","summary":"<p>Relative-coordinate version of <code><a href=\"../Cairo/Context.html#curve_to(x1:Float64,y1:Float64,x2:Float64,y2:Float64,x3:Float64,y3:Float64)-instance-method\">Context#curve_to</a></code>.</p>","abstract":false,"args":[{"name":"dx1","doc":null,"default_value":"","external_name":"dx1","restriction":"Float64"},{"name":"dy1","doc":null,"default_value":"","external_name":"dy1","restriction":"Float64"},{"name":"dx2","doc":null,"default_value":"","external_name":"dx2","restriction":"Float64"},{"name":"dy2","doc":null,"default_value":"","external_name":"dy2","restriction":"Float64"},{"name":"dx3","doc":null,"default_value":"","external_name":"dx3","restriction":"Float64"},{"name":"dy3","doc":null,"default_value":"","external_name":"dy3","restriction":"Float64"}],"args_string":"(dx1 : Float64, dy1 : Float64, dx2 : Float64, dy2 : Float64, dx3 : Float64, dy3 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L753","def":{"name":"rel_curve_to","args":[{"name":"dx1","doc":null,"default_value":"","external_name":"dx1","restriction":"Float64"},{"name":"dy1","doc":null,"default_value":"","external_name":"dy1","restriction":"Float64"},{"name":"dx2","doc":null,"default_value":"","external_name":"dx2","restriction":"Float64"},{"name":"dy2","doc":null,"default_value":"","external_name":"dy2","restriction":"Float64"},{"name":"dx3","doc":null,"default_value":"","external_name":"dx3","restriction":"Float64"},{"name":"dy3","doc":null,"default_value":"","external_name":"dy3","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.rel_curve_to(@cairo, dx1, dy1, dx2, dy2, dx3, dy3)\nself\n"}},{"id":"rel_line_to(d:Point)-instance-method","html_id":"rel_line_to(d:Point)-instance-method","name":"rel_line_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Point"}],"args_string":"(d : Point)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L730","def":{"name":"rel_line_to","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.rel_line_to(@cairo, d.x, d.y)\nself\n"}},{"id":"rel_line_to(dx:Float64,dy:Float64)-instance-method","html_id":"rel_line_to(dx:Float64,dy:Float64)-instance-method","name":"rel_line_to","doc":"Relative-coordinate version of `Context#line_to`. Adds a line to the path from the current point\nto a point that is offset from the current point by *(dx, dy)* in user space.\nAfter this call the current point will be offset by *(dx, dy)*.\n\nGiven a current point of *(x, y)*, `context.rel_line_to(dx, dy)` is logically equivalent to `context.line_to(x + dx , y + dy)`.\n\nIt is an error to call this function with no current point. Doing so will cause `Context` to shutdown\nwith a status of `Status::NoCurrentPoint`.\n\n###Parameters\n- **dx** the X offset to the end of the new line\n- **dy** the Y offset to the end of the new line","summary":"<p>Relative-coordinate version of <code><a href=\"../Cairo/Context.html#line_to(p:Point)-instance-method\">Context#line_to</a></code>.</p>","abstract":false,"args":[{"name":"dx","doc":null,"default_value":"","external_name":"dx","restriction":"Float64"},{"name":"dy","doc":null,"default_value":"","external_name":"dy","restriction":"Float64"}],"args_string":"(dx : Float64, dy : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L725","def":{"name":"rel_line_to","args":[{"name":"dx","doc":null,"default_value":"","external_name":"dx","restriction":"Float64"},{"name":"dy","doc":null,"default_value":"","external_name":"dy","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.rel_line_to(@cairo, dx, dy)\nself\n"}},{"id":"rel_move_to(dx:Float64,dy:Float64)-instance-method","html_id":"rel_move_to(dx:Float64,dy:Float64)-instance-method","name":"rel_move_to","doc":"Begin a new sub-path. After this call the current point will offset by *(x, y)*.\n\nGiven a current point of *(x, y)*, `context.rel_move_to(dx, dy)` is logically equivalent to `context.move_to(x + dx, y + dy)`.\n\nIt is an error to call this function with no current point. Doing so will cause cr to shutdown with\na status of `Status::NoCurrentPoint`.\n\n###Parameters\n- **dx** the X offset\n- **dy** the Y offset","summary":"<p>Begin a new sub-path.</p>","abstract":false,"args":[{"name":"dx","doc":null,"default_value":"","external_name":"dx","restriction":"Float64"},{"name":"dy","doc":null,"default_value":"","external_name":"dy","restriction":"Float64"}],"args_string":"(dx : Float64, dy : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L703","def":{"name":"rel_move_to","args":[{"name":"dx","doc":null,"default_value":"","external_name":"dx","restriction":"Float64"},{"name":"dy","doc":null,"default_value":"","external_name":"dy","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.rel_move_to(@cairo, dx, dy)\nself\n"}},{"id":"rel_move_to(d:Point)-instance-method","html_id":"rel_move_to(d:Point)-instance-method","name":"rel_move_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Point"}],"args_string":"(d : Point)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L708","def":{"name":"rel_move_to","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.rel_move_to(@cairo, d.x, d.y)\nself\n"}},{"id":"reset_clip-instance-method","html_id":"reset_clip-instance-method","name":"reset_clip","doc":"Reset the current clip region to its original, unrestricted state.\nThat is, set the clip region to an infinitely large shape containing the target surface.\nEquivalently, if infinity is too hard to grasp, one can imagine the clip region being reset to the exact bounds of the target surface.\n\nNOTE that code meant to be reusable should not call `Context#reset_clip` as it will cause results unexpected by higher-level code\nwhich calls `Context#clip`. Consider using `Context#save` and `Context#restore` around `Context#clip` as a more robust means\nof temporarily restricting the clip region.","summary":"<p>Reset the current clip region to its original, unrestricted state.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1097","def":{"name":"reset_clip","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.reset_clip(@cairo)\nself\n"}},{"id":"restore-instance-method","html_id":"restore-instance-method","name":"restore","doc":"Restores `Context` to the state saved by a preceding call to `Context#save` and removes that state from the stack of saved states.","summary":"<p>Restores <code><a href=\"../Cairo/Context.html\">Context</a></code> to the state saved by a preceding call to <code><a href=\"../Cairo/Context.html#save-instance-method\">Context#save</a></code> and removes that state from the stack of saved states.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L123","def":{"name":"restore","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.restore(@cairo)\nself\n"}},{"id":"rotate(angle:Float64)-instance-method","html_id":"rotate(angle:Float64)-instance-method","name":"rotate","doc":"Modifies the current transformation matrix (CTM) by rotating the user-space axes by angle radians.\nThe rotation of the axes takes places after any existing transformation of user space. The rotation direction\nfor positive angles is from the positive X axis toward the positive Y axis.\n\n###Parameters\n- **angle** angle (in radians) by which the user-space axes will be rotated","summary":"<p>Modifies the current transformation matrix (CTM) by rotating the user-space axes by angle radians.</p>","abstract":false,"args":[{"name":"angle","doc":null,"default_value":"","external_name":"angle","restriction":"Float64"}],"args_string":"(angle : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L453","def":{"name":"rotate","args":[{"name":"angle","doc":null,"default_value":"","external_name":"angle","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.rotate(@cairo, angle)\nself\n"}},{"id":"save-instance-method","html_id":"save-instance-method","name":"save","doc":"Makes a copy of the current state and saves it on an internal stack of saved states. When `Context#restore` is called,\n`Context` will be restored to the saved state. Multiple calls to `Context#save` and `Context#restore` can be nested;\neach call to `Context#restore` restores the state from the matching paired `Context#save`.\n\nIt isn't necessary to clear all saved states before a `Context` is freed. If the reference count\nof a `Context` drops to zero in response to a call to `Context#finalize`, any saved states will be freed along with the `Context`.","summary":"<p>Makes a copy of the current state and saves it on an internal stack of saved states.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L117","def":{"name":"save","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.save(@cairo)\nself\n"}},{"id":"scale(sx:Float64,sy:Float64)-instance-method","html_id":"scale(sx:Float64,sy:Float64)-instance-method","name":"scale","doc":"Modifies the current transformation matrix (CTM) by scaling the X and Y user-space axes by sx and sy respectively.\nThe scaling of the axes takes place after any existing transformation of user space.\n\n###Parameters\n- **sx** scale factor for the X dimension\n- **sy** scale factor for the Y dimension","summary":"<p>Modifies the current transformation matrix (CTM) by scaling the X and Y user-space axes by sx and sy respectively.</p>","abstract":false,"args":[{"name":"sx","doc":null,"default_value":"","external_name":"sx","restriction":"Float64"},{"name":"sy","doc":null,"default_value":"","external_name":"sy","restriction":"Float64"}],"args_string":"(sx : Float64, sy : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L442","def":{"name":"scale","args":[{"name":"sx","doc":null,"default_value":"","external_name":"sx","restriction":"Float64"},{"name":"sy","doc":null,"default_value":"","external_name":"sy","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.scale(@cairo, sx, sy)\nself\n"}},{"id":"scaled_font:ScaledFont-instance-method","html_id":"scaled_font:ScaledFont-instance-method","name":"scaled_font","doc":"Gets the current scaled font for a `Context`.\n\n###Returns\nThe current scaled font. This object is owned by cairo. To keep a reference to it, you must call `ScaledFont#reference`.\n\nThis function never returns Nil. If memory cannot be allocated, a special \"nil\" `ScaledFont` object\nwill be returned on which `ScaledFont#status` returns `Status::NoMemory`.\nUsing this nil object will cause its error state to propagate to other objects it is passed to,\n(for example, calling `Context#scaled_font=` with a nil font will trigger an error that will shutdown the `Context` object).","summary":"<p>Gets the current scaled font for a <code><a href=\"../Cairo/Context.html\">Context</a></code>.</p>","abstract":false,"args":[],"args_string":" : ScaledFont","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1341","def":{"name":"scaled_font","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ScaledFont","visibility":"Public","body":"scaled_font = LibCairo.get_scaled_font(@cairo)\nScaledFont.new(scaled_font)\n"}},{"id":"scaled_font=(scaled_font:ScaledFont)-instance-method","html_id":"scaled_font=(scaled_font:ScaledFont)-instance-method","name":"scaled_font=","doc":"Replaces the current font face, font matrix, and font options in the `Context` with those of the `ScaledFont`.\nExcept for some translation, the current CTM of the `Context` should be the same as that of the\n`ScaledFont`, which can be accessed using `ScaledFont#ctm`\n\n###Parameters\n- **scaled_font** a `ScaledFont`","summary":"<p>Replaces the current font face, font matrix, and font options in the <code><a href=\"../Cairo/Context.html\">Context</a></code> with those of the <code><a href=\"../Cairo/ScaledFont.html\">ScaledFont</a></code>.</p>","abstract":false,"args":[{"name":"scaled_font","doc":null,"default_value":"","external_name":"scaled_font","restriction":"ScaledFont"}],"args_string":"(scaled_font : ScaledFont)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1352","def":{"name":"scaled_font=","args":[{"name":"scaled_font","doc":null,"default_value":"","external_name":"scaled_font","restriction":"ScaledFont"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_scaled_font(@cairo, scaled_font.value)\nself\n"}},{"id":"select_font_face(family:String,slant:FontSlant,weight:FontWeight)-instance-method","html_id":"select_font_face(family:String,slant:FontSlant,weight:FontWeight)-instance-method","name":"select_font_face","doc":"NOTE: The `Context#select_font_face` function call is part of what the cairo designers\ncall the \"toy\" text API. It is convenient for short demos and simple programs,\nbut it is not expected to be adequate for serious text-using applications.\n\nSelects a family and style of font from a simplified description as a family name, slant and weight.\nCairo provides no operation to list available family names on the system (this is a \"toy\", remember),\nbut the standard CSS2 generic family names, (\"serif\", \"sans-serif\", \"cursive\", \"fantasy\", \"monospace\"),\nare likely to work as expected.\n\nIf family starts with the string \"cairo :\", or if no native font backends are compiled in,\ncairo will use an internal font family. The internal font family recognizes many modifiers in the family string,\nmost notably, it recognizes the string \"monospace\". That is, the family name \"cairo :monospace\" will use\nthe monospace version of the internal font family.\n\nFor \"real\" font selection, see the font-backend-specific font_face_create functions for the font backend you are using.\n(For example, if you are using the freetype-based cairo-ft font backend, see `FTFace#create_for_ft_face`\nor `FcPattern#create_for_pattern`.) The resulting font face could then be used with `FontFace#scaled_font_create`\nand `Context#scaled_font=`.\n\nSimilarly, when using the \"real\" font support, you can call directly into the underlying font system,\n(such as fontconfig or freetype), for operations such as listing available fonts, etc.\n\nIt is expected that most applications will need to use a more comprehensive font handling and text layout library,\n(for example, pango), in conjunction with cairo.\n\nIf text is drawn without a call to `Context#select_font_face`, (nor `Context#font_face=` nor `Context#scaled_font=`),\nthe default family is platform-specific, but is essentially \"sans-serif\". Default slant is\n`FontSlant::Normal`, and default weight is `FontWeight::Normal`.\n\nThis function is equivalent to a call to `FontFace#initialize(family, slant, weight)` followed by `Context#font_face=`.\n\n###Parameters\n- **family** a font family name, encoded in UTF-8\n- **slant** the slant for the font\n- **weight** the weight for the font","summary":"<p><span class=\"flag purple\">NOTE</span>  The <code><a href=\"../Cairo/Context.html#select_font_face(family:String,slant:FontSlant,weight:FontWeight)-instance-method\">Context#select_font_face</a></code> function call is part of what the cairo designers call the \"toy\" text API.</p>","abstract":false,"args":[{"name":"family","doc":null,"default_value":"","external_name":"family","restriction":"String"},{"name":"slant","doc":null,"default_value":"","external_name":"slant","restriction":"FontSlant"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"FontWeight"}],"args_string":"(family : String, slant : FontSlant, weight : FontWeight)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1237","def":{"name":"select_font_face","args":[{"name":"family","doc":null,"default_value":"","external_name":"family","restriction":"String"},{"name":"slant","doc":null,"default_value":"","external_name":"slant","restriction":"FontSlant"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"FontWeight"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.select_font_face(@cairo, family.to_unsafe, LibCairo::FontSlantT.new(slant.value), LibCairo::FontWeightT.new(weight.value))\nself\n"}},{"id":"set_dash(dashes:Array(Float64),offset:Float64)-instance-method","html_id":"set_dash(dashes:Array(Float64),offset:Float64)-instance-method","name":"set_dash","doc":"Sets the dash pattern to be used by `Context#stroke`. A dash pattern is specified by dashes,\nan array of positive values. Each value provides the length of alternate \"on\" and \"off\" portions of the stroke.\nThe offset specifies an offset into the pattern at which the stroke begins.\n\nEach \"on\" segment will have caps applied as if the segment were a separate sub-path. In particular,\nit is valid to use an \"on\" length of 0.0 with `LineCap::Round` or `LineCap::Square` in order to distributed dots or squares along a path.\n\nNOTE: The length values are in user-space units as evaluated at the time of stroking.\nThis is not necessarily the same as the user space at the time of `Context#dash`.\n\nIf `dashes.size` is 0 dashing is disabled.\n\nIf `dashes.size` is 1 a symmetric pattern is assumed with alternating on\nand off portions of the size specified by the single value in dashes .\n\nIf any value in dashes is negative, or if all values are 0, then `Context` will be put into an error state\nwith a status of `Status::InvalidDash`.\n\n###Parameters\n- **dashes** an array specifying alternate lengths of on and off stroke portions\n- **offset** an offset into the dash pattern at which the stroke should start","summary":"<p>Sets the dash pattern to be used by <code><a href=\"../Cairo/Context.html#stroke-instance-method\">Context#stroke</a></code>.</p>","abstract":false,"args":[{"name":"dashes","doc":null,"default_value":"","external_name":"dashes","restriction":"Array(Float64)"},{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Float64"}],"args_string":"(dashes : Array(Float64), offset : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L398","def":{"name":"set_dash","args":[{"name":"dashes","doc":null,"default_value":"","external_name":"dashes","restriction":"Array(Float64)"},{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_dash(@cairo, dashes.to_unsafe, dashes.size, offset)\nself\n"}},{"id":"set_source_rgb(red:Float64,green:Float64,blue:Float64)-instance-method","html_id":"set_source_rgb(red:Float64,green:Float64,blue:Float64)-instance-method","name":"set_source_rgb","doc":"Sets the source pattern within `Context` to an opaque color. This opaque color will then be used for any subsequent\ndrawing operation until a new source pattern is set.\n\nThe color components are floating point numbers in the range 0 to 1. If the values passed in are outside that range, they will be clamped.\n\nThe default source pattern is opaque black, (that is, it is equivalent to `context.set_source_rgb(0.0_f64, 0.0_f64, 0.0_f64)).\n\n###Parameters\n- **red** red component of color\n- **green** green component of color\n- **blue** blue component of color","summary":"<p>Sets the source pattern within <code><a href=\"../Cairo/Context.html\">Context</a></code> to an opaque color.</p>","abstract":false,"args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"}],"args_string":"(red : Float64, green : Float64, blue : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L243","def":{"name":"set_source_rgb","args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_source_rgb(@cairo, red, green, blue)\nself\n"}},{"id":"set_source_rgba(red:Float64,green:Float64,blue:Float64,alpha:Float64)-instance-method","html_id":"set_source_rgba(red:Float64,green:Float64,blue:Float64,alpha:Float64)-instance-method","name":"set_source_rgba","doc":"Sets the source pattern within cr to a translucent color. This color will then be used for any subsequent drawing operation\nuntil a new source pattern is set.\n\nThe color and alpha components are floating point numbers in the range 0 to 1.\nIf the values passed in are outside that range, they will be clamped.\n\nThe default source pattern is opaque black, (that is, it is equivalent `context.set_source_rgba(0.0_f64, 0.0_f64, 0.0_f64, 1.0_f64)).\n\n###Parameters\nred\n- **red** component of color\n- **green** green component of color\n- **blue** blue component of color\n- **alpha** alpha component of color","summary":"<p>Sets the source pattern within cr to a translucent color.</p>","abstract":false,"args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"},{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"args_string":"(red : Float64, green : Float64, blue : Float64, alpha : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L262","def":{"name":"set_source_rgba","args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"},{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_source_rgba(@cairo, red, green, blue, alpha)\nself\n"}},{"id":"set_source_surface(surface:Surface,x:Float64,y:Float64)-instance-method","html_id":"set_source_surface(surface:Surface,x:Float64,y:Float64)-instance-method","name":"set_source_surface","doc":"This is a convenience function for creating a pattern from surface and setting it as the source in `Context` with `Context#source=`.\n\nThe **x** and **y** parameters give the user-space coordinate at which the surface origin should appear.\n(The surface origin is its upper-left corner before any transformation has been applied.)\nThe **x** and **y** parameters are negated and then set as translation values in the pattern matrix.\n\nOther than the initial translation pattern matrix, as described above, all other pattern attributes, (such as its extend mode),\nare set to the default values as in `Pattern#create_for_surface`. The resulting pattern can be queried with `Context#source`\nso that these attributes can be modified if desired, (eg. to create a repeating pattern with `Pattern#extend=`).\n\n###Parameters\n- **surface** a surface to be used to set the source pattern\n- **x** User-space X coordinate for surface origin\n- **y** User-space Y coordinate for surface origin","summary":"<p>This is a convenience function for creating a pattern from surface and setting it as the source in <code><a href=\"../Cairo/Context.html\">Context</a></code> with <code><a href=\"../Cairo/Context.html#source=(source:Pattern)-instance-method\">Context#source=</a></code>.</p>","abstract":false,"args":[{"name":"surface","doc":null,"default_value":"","external_name":"surface","restriction":"Surface"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"args_string":"(surface : Surface, x : Float64, y : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L281","def":{"name":"set_source_surface","args":[{"name":"surface","doc":null,"default_value":"","external_name":"surface","restriction":"Surface"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_source_surface(surface.to_unsafe, x, y)\nself\n"}},{"id":"set_user_data(key:UserDataKey,user_data:Pointer(Void),destroy:LibCairo::DestroyFuncT):Status-instance-method","html_id":"set_user_data(key:UserDataKey,user_data:Pointer(Void),destroy:LibCairo::DestroyFuncT):Status-instance-method","name":"set_user_data","doc":"Attach user data to *context*. To remove user data from a surface, call this function with the key that was used to set it and `Nil` for data.\n\n###Parameters\n- **key** the address of a cairo_user_data_key_t to attach the user data to\n- **user_data** the user data to attach to the `Context`\n- **destroy** a `LibCairo::DestroyFuncT` which will be called when the `Context` is destroyed\nor when new user data is attached using the same key.\n\n###Returns\n`Status::Success` or `Status::NoMemory` if a slot could not be allocated for the user data.","summary":"<p>Attach user data to <em>context</em>.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"},{"name":"user_data","doc":null,"default_value":"","external_name":"user_data","restriction":"::Pointer(Void)"},{"name":"destroy","doc":null,"default_value":"","external_name":"destroy","restriction":"LibCairo::DestroyFuncT"}],"args_string":"(key : UserDataKey, user_data : Pointer(Void), destroy : LibCairo::DestroyFuncT) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L106","def":{"name":"set_user_data","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"},{"name":"user_data","doc":null,"default_value":"","external_name":"user_data","restriction":"::Pointer(Void)"},{"name":"destroy","doc":null,"default_value":"","external_name":"destroy","restriction":"LibCairo::DestroyFuncT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"LibCairo.set_user_data(@cairo, key.to_unsafe, user_data, destroy)\nself\n"}},{"id":"show_glyphs(glyphs:GlyphArray)-instance-method","html_id":"show_glyphs(glyphs:GlyphArray)-instance-method","name":"show_glyphs","doc":"A drawing operator that generates the shape from an array of glyphs, rendered according to the current font face,\nfont size (font matrix), and font options.\n\n###Parameters\n- **glyphs** array of glyphs to show","summary":"<p>A drawing operator that generates the shape from an array of glyphs, rendered according to the current font face, font size (font matrix), and font options.</p>","abstract":false,"args":[{"name":"glyphs","doc":null,"default_value":"","external_name":"glyphs","restriction":"GlyphArray"}],"args_string":"(glyphs : GlyphArray)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1384","def":{"name":"show_glyphs","args":[{"name":"glyphs","doc":null,"default_value":"","external_name":"glyphs","restriction":"GlyphArray"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.show_glyphs(@cairo, glyphs.to_unsafe, glyphs.size)\nself\n"}},{"id":"show_page-instance-method","html_id":"show_page-instance-method","name":"show_page","doc":"Emits and clears the current page for backends that support multiple pages.\nUse `Context#copy_page` if you don't want to clear the page.\n\nThis is a convenience function that simply calls `Surface#show_page` on context's target.","summary":"<p>Emits and clears the current page for backends that support multiple pages.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L934","def":{"name":"show_page","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.show_page(@cairo)\nself\n"}},{"id":"show_text(text:String)-instance-method","html_id":"show_text(text:String)-instance-method","name":"show_text","doc":"A drawing operator that generates the shape from a string of UTF-8 characters,\nrendered according to the current *font_face*, *font_size* (font_matrix), and *font_options*.\n\nThis function first computes a set of glyphs for the string of text.\nThe first glyph is placed so that its origin is at the current point.\nThe origin of each subsequent glyph is offset from that of the previous glyph by the advance values of the previous glyph.\n\nAfter this call the current point is moved to the origin of where the next glyph would be placed in this same progression.\nThat is, the current point will be at the origin of the final glyph offset by its advance values.\nThis allows for easy display of a single logical string with multiple calls to `Context#show_text`.\n\nNOTE: The `Context#show_text` function call is part of what the cairo designers call the \"toy\" text API.\nIt is convenient for short demos and simple programs, but it is not expected to be adequate for serious text-using applications.\nSee `Context#show_glyphs` for the \"real\" text display API in cairo.\n\n###Parameters\n- **utf8** a string of text encoded in UTF-8","summary":"<p>A drawing operator that generates the shape from a string of UTF-8 characters, rendered according to the current <em>font_face</em>, <em>font_size</em> (font_matrix), and <em>font_options</em>.</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"args_string":"(text : String)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1374","def":{"name":"show_text","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.show_text(@cairo, text.to_unsafe)\nself\n"}},{"id":"show_text_glyphs(text:String,glyphs:GlyphArray,clusters:TextClusterArray,cluster_flags:TextClusterFlags)-instance-method","html_id":"show_text_glyphs(text:String,glyphs:GlyphArray,clusters:TextClusterArray,cluster_flags:TextClusterFlags)-instance-method","name":"show_text_glyphs","doc":"This operation has rendering effects similar to `Context#show_glyphs` but, if the target surface supports it,\nuses the provided text and cluster mapping to embed the text for the *glyphs* shown in the output.\nIf the target does not support the extended attributes, this function acts like the basic `Context#show_glyphs`\nas if it had been passed *glyphs*.\n\nThe mapping between *text* and *glyphs** is provided by an array of *clusters*.\nEach cluster covers a number of *text* bytes and *glyphs*, and neighboring *clusters* cover neighboring areas of *text* and *glyphs*.\nThe *clusters* should collectively cover *text* and *glyphs* in entirety.\n\nThe first cluster always covers bytes from the beginning of *text*. If *cluster_flags* do not have the\n`TextClusterFlags::Backward` set, the first cluster also covers the beginning of *glyphs*,\notherwise it covers the end of the *glyphs* array and following *clusters* move backward.\n\nSee `TextCluster` for constraints on valid clusters.\n\n###Parameters\n- **text** a string of text encoded in UTF-8\n- **glyphs** array of glyphs to show\n- **clusters** array of cluster mapping information\n- **cluster_flags** cluster mapping flags","summary":"<p>This operation has rendering effects similar to <code><a href=\"../Cairo/Context.html#show_glyphs(glyphs:GlyphArray)-instance-method\">Context#show_glyphs</a></code> but, if the target surface supports it, uses the provided text and cluster mapping to embed the text for the <em>glyphs</em> shown in the output.</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"glyphs","doc":null,"default_value":"","external_name":"glyphs","restriction":"GlyphArray"},{"name":"clusters","doc":null,"default_value":"","external_name":"clusters","restriction":"TextClusterArray"},{"name":"cluster_flags","doc":null,"default_value":"","external_name":"cluster_flags","restriction":"TextClusterFlags"}],"args_string":"(text : String, glyphs : GlyphArray, clusters : TextClusterArray, cluster_flags : TextClusterFlags)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1409","def":{"name":"show_text_glyphs","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"},{"name":"glyphs","doc":null,"default_value":"","external_name":"glyphs","restriction":"GlyphArray"},{"name":"clusters","doc":null,"default_value":"","external_name":"clusters","restriction":"TextClusterArray"},{"name":"cluster_flags","doc":null,"default_value":"","external_name":"cluster_flags","restriction":"TextClusterFlags"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.show_text_glyphs(@cairo, text.to_unsafe, text.size, glyphs.to_unsafe, glyphs.size, clusters.to_unsafe, clusters.size, LibCairo::TextClusterFlagsT.new(cluster_flags.value))\nself\n"}},{"id":"source:Pattern-instance-method","html_id":"source:Pattern-instance-method","name":"source","doc":"Gets the current source pattern\n\n###Returns\nThe current source pattern. This object is owned by cairo. To keep a reference to it, you must call `Pattern#reference`.","summary":"<p>Gets the current source pattern</p>","abstract":false,"args":[],"args_string":" : Pattern","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1507","def":{"name":"source","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Pattern","visibility":"Public","body":"Pattern.new(LibCairo.get_source(@cairo))"}},{"id":"source=(source:Pattern)-instance-method","html_id":"source=(source:Pattern)-instance-method","name":"source=","doc":"Sets the source pattern within `Context` to source. This pattern will then be used for any subsequent\ndrawing operation until a new source pattern is set.\n\nNOTE: The pattern's transformation matrix will be locked to the user space in effect at the time of `Context#source=`.\nThis means that further modifications of the current transformation matrix will not affect the source pattern.\nSee `Pattern#matrix=`.\n\nThe default source pattern is a solid pattern that is opaque black,\n(that is, it is equivalent to `context.set_source_rgb(0.0_f64, 0.0_f64, 0.0_f64)`).\n\n###Parameters\n- **source** a `Pattern` to be used as the source for subsequent drawing operations.","summary":"<p>Sets the source pattern within <code><a href=\"../Cairo/Context.html\">Context</a></code> to source.</p>","abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Pattern"}],"args_string":"(source : Pattern)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L227","def":{"name":"source=","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"Pattern"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_source(@cairo, source.to_unsafe)\nself\n"}},{"id":"status:Status-instance-method","html_id":"status:Status-instance-method","name":"status","doc":"Checks whether an error has previously occurred for this context.\n\n###Returns\nThe current status of this context, see `Status`.","summary":"<p>Checks whether an error has previously occurred for this context.</p>","abstract":false,"args":[],"args_string":" : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1695","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.status(@cairo)).value)"}},{"id":"stroke-instance-method","html_id":"stroke-instance-method","name":"stroke","doc":"A drawing operator that strokes the current path according to the current line width, line join,\nline cap, and dash settings. After `Context#stroke`, the current path will be cleared from the cairo context.\nSee `Context#line_width=`, `Context#line_join=`, `Context#line_cap=`, `Context#set_dash`, and `Context#stroke_preserve`.\n\nNOTE: Degenerate segments and sub-paths are treated specially and provide a useful result. These can result in two different situations:\n1. Zero-length \"on\" segments set in `Context#set_dash`. If the cap style is `LineCap::Round` or `LineCap::Square`\nthen these segments will be drawn as circular dots or squares respectively. In the case of `LineCap::Square`,\nthe orientation of the squares is determined by the direction of the underlying path.\n2. A sub-path created by `Context#move_to` followed by either a `Cntext#close_path`\nor one or more calls to `Context#line_to` to the same coordinate as the `Context#move_to`.\nIf the cap style is `LineCap::Round` then these sub-paths will be drawn as circular dots.\nNOTE that in the case of `LineCap::Square` a degenerate sub-path will not be drawn at all,\n(since the correct orientation is indeterminate).\n\nIn no case will a cap style of `LineCap::Butt` cause anything to be drawn in the case of either degenerate segments or sub-paths.","summary":"<p>A drawing operator that strokes the current path according to the current line width, line join, line cap, and dash settings.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L887","def":{"name":"stroke","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.stroke(@cairo)\nself\n"}},{"id":"stroke_extents:Extents-instance-method","html_id":"stroke_extents:Extents-instance-method","name":"stroke_extents","doc":"Computes a bounding box in user coordinates covering the area that would be affected, (the \"inked\" area),\nby a `Context#stroke` operation given the current path and stroke parameters. If the current path is empty,\nreturns an empty rectangle ((0,0), (0,0)). Surface dimensions and clipping are not taken into account.\n\nNOTE that if the line width is set to exactly zero, then `Context#stroke_extents` will return an empty rectangle.\nContrast with `Context#path_extents` which can be used to compute the non-empty bounds as the line width approaches zero.\n\nNOTE that `Context#stroke_extents` must necessarily do more work to compute the precise inked areas in light of the stroke parameters,\nso `Context#path_extents` may be more desirable for sake of performance if non-inked path extents are desired.\n\nSee `Context#stroke`, `Context#line_width=`, `Context#`line_join=`, `Context#line_cap=`, `Context#set_dash`, and `Context#stroke_preserve`.\n\n###Parameters\n- **x1** left of the resulting extents\n- **y1** top of the resulting extents\n- **x2** right of the resulting extents\n- **y2** bottom of the resulting extents","summary":"<p>Computes a bounding box in user coordinates covering the area that would be affected, (the \"inked\" area), by a <code><a href=\"../Cairo/Context.html#stroke-instance-method\">Context#stroke</a></code> operation given the current path and stroke parameters.</p>","abstract":false,"args":[],"args_string":" : Extents","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1021","def":{"name":"stroke_extents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Extents","visibility":"Public","body":"LibCairo.stroke_extents(@cairo, out x1, out y1, out x2, out y2)\nExtents.new(x1, y1, x2, y2)\n"}},{"id":"stroke_preserve-instance-method","html_id":"stroke_preserve-instance-method","name":"stroke_preserve","doc":"A drawing operator that strokes the current path according to the current line width,\nline join, line cap, and dash settings. Unlike `Context#stroke`, `Context#stroke_preserve` preserves the path within the cairo context.\n\nSee `Context#line_width=`, `Context#line_join=`, `Context#line_cap=`, `Context#set_dash`, and `Context#stroke_preserve`.","summary":"<p>A drawing operator that strokes the current path according to the current line width, line join, line cap, and dash settings.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L896","def":{"name":"stroke_preserve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.stroke_preserve(@cairo)\nself\n"}},{"id":"tag_begin(tag_name:String,attributes:String)-instance-method","html_id":"tag_begin(tag_name:String,attributes:String)-instance-method","name":"tag_begin","doc":"Marks the beginning of the *tag_name* structure.\nCall `Context#tag_end` with the same *tag_name* to mark the end of the structure.\n\nThe attributes string is of the form `\"key1=value2 key2=value2 ...\"`.\nValues may be boolean (true/false or 1/0), integer, float, string, or an array.\n\nString values are enclosed in single quotes ('). Single quotes and backslashes inside the string should be escaped with a backslash.\n\nBoolean values may be set to true by only specifying the key. eg the attribute string `\"key\"` is the equivalent to `\"key=true\"`.\n\nArrays are enclosed in `'[]'`. eg `\"rect=[1.2 4.3 2.0 3.0]\"`.\n\nIf no attributes are required, attributes can be an empty string.\n\nInvalid nesting of tags or invalid attributes will cause `Context` to shutdown with a status of `Status::TagError`.\n\nSee `Context#tag_end`.\n\n###Parameters\n- **tag_name** tag name\n- **attributes** tag attributes","summary":"<p>Marks the beginning of the <em>tag_name</em> structure.</p>","abstract":false,"args":[{"name":"tag_name","doc":null,"default_value":"","external_name":"tag_name","restriction":"String"},{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":"String"}],"args_string":"(tag_name : String, attributes : String)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1184","def":{"name":"tag_begin","args":[{"name":"tag_name","doc":null,"default_value":"","external_name":"tag_name","restriction":"String"},{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.tag_begin(@cairo, tag_name.to_unsafe, attributes.to_unsafe)\nself\n"}},{"id":"tag_end(tag_name:String)-instance-method","html_id":"tag_end(tag_name:String)-instance-method","name":"tag_end","doc":"Marks the end of the tag_name structure.\n\nInvalid nesting of tags will cause cr to shutdown with a status of `Status::TagError`.\n\nSee `Context#tag_begin`.\n\n###Parameters\n- **tag_name** tag name","summary":"<p>Marks the end of the tag_name structure.</p>","abstract":false,"args":[{"name":"tag_name","doc":null,"default_value":"","external_name":"tag_name","restriction":"String"}],"args_string":"(tag_name : String)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1197","def":{"name":"tag_end","args":[{"name":"tag_name","doc":null,"default_value":"","external_name":"tag_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.tag_end(@cairo, tag_name.to_unsafe)\nself\n"}},{"id":"target:Surface-instance-method","html_id":"target:Surface-instance-method","name":"target","doc":"Gets the target surface for the cairo context as passed to `Context#initialized`.\n\nThis function will always return a valid object, but the result can be a \"nil\" surface if `Context` is already in an error state,\n(ie. `Context#state` != `State::Success`).\n\n###Returns\nThe target surface. This object is owned by cairo. To keep a reference to it, you must call `Surface#reference`.","summary":"<p>Gets the target surface for the cairo context as passed to <code>Context#initialized</code>.</p>","abstract":false,"args":[],"args_string":" : Surface","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1629","def":{"name":"target","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Surface","visibility":"Public","body":"Surface.new(LibCairo.get_target(@cairo))"}},{"id":"text_extents(text:String):TextExtents-instance-method","html_id":"text_extents(text:String):TextExtents-instance-method","name":"text_extents","doc":"Gets the extents for a string of text. The extents describe a user-space rectangle\nthat encloses the \"inked\" portion of the text, (as it would be drawn by `Context#show_text`).\nAdditionally, the *x_advance* and *y_advance* values indicate the amount by which the current\npoint would be advanced by `Context#show_text`.\n\nNOTE that whitespace characters do not directly contribute to the size of the rectangle\n(`extents.width` and `extents.height`). They do contribute indirectly by changing\nthe position of non-whitespace characters. In particular, trailing whitespace characters are\nlikely to not affect the size of the rectangle, though they will affect the *x_advance* and *y_advance* values.\n\n###Parameters\n- **text** a string of text encoded in UTF-8\n\n###Returns\nA `TextExtends` object into which the results will be stored.","summary":"<p>Gets the extents for a string of text.</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"args_string":"(text : String) : TextExtents","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1464","def":{"name":"text_extents","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"TextExtents","visibility":"Public","body":"LibCairo.text_extents(@cairo, text.to_unsafe, out text_extents)\nTextExtents.new(text_extents)\n"}},{"id":"text_path(text:String)-instance-method","html_id":"text_path(text:String)-instance-method","name":"text_path","doc":"Adds closed paths for text to the current path. The generated path if filled,\nachieves an effect similar to that of `Context#show_text`.\n\nText conversion and positioning is done similar to `Context#show_text`.\n\nLike `Context#show_text`, After this call the current point is moved to the origin of where\nthe next glyph would be placed in this same progression. That is, the current point will be\nat the origin of the final glyph offset by its advance values. This allows for chaining multiple\ncalls to to `Context#text_path` without having to set current point in between.\n\nNOTE: The `Context#text_path` function call is part of what the cairo designers call the \"toy\" text API.\nIt is convenient for short demos and simple programs, but it is not expected to be adequate for serious text-using applications.\nSee `Context#glyph_path` for the \"real\" text path API in cairo.\n\n###Parameters\n- **text** string of text encoded in UTF-8","summary":"<p>Adds closed paths for text to the current path.</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"args_string":"(text : String)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1434","def":{"name":"text_path","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.text_path(@cairo, text.to_unsafe)\nself\n"}},{"id":"to_unsafe:LibCairo::PCairoT-instance-method","html_id":"to_unsafe:LibCairo::PCairoT-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PCairoT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1699","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PCairoT","visibility":"Public","body":"@cairo"}},{"id":"tolerance:Float64-instance-method","html_id":"tolerance:Float64-instance-method","name":"tolerance","doc":"Gets the current tolerance value, as set by `Context#tolerance=`.\n\n###Returns\nThe current tolerance value.","summary":"<p>Gets the current tolerance value, as set by <code><a href=\"../Cairo/Context.html#tolerance=(tolerance:Float64)-instance-method\">Context#tolerance=</a></code>.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L1515","def":{"name":"tolerance","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"LibCairo.get_tolerance(@cairo)"}},{"id":"tolerance=(tolerance:Float64)-instance-method","html_id":"tolerance=(tolerance:Float64)-instance-method","name":"tolerance=","doc":"Sets the tolerance used when converting paths into trapezoids.\nCurved segments of the path will be subdivided until the maximum deviation between the original\npath and the polygonal approximation is less than tolerance. The default value is 0.1.\nA larger value will give better performance, a smaller value, better appearance.\n(Reducing the value from the default value of 0.1 is unlikely to improve appearance significantly.)\nThe accuracy of paths within Cairo is limited by the precision of its internal arithmetic,\nand the prescribed tolerance is restricted to the smallest representable internal value.\n\n###Parameters\n- **tolerance** the tolerance, in device units (typically pixels)","summary":"<p>Sets the tolerance used when converting paths into trapezoids.</p>","abstract":false,"args":[{"name":"tolerance","doc":null,"default_value":"","external_name":"tolerance","restriction":"Float64"}],"args_string":"(tolerance : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L296","def":{"name":"tolerance=","args":[{"name":"tolerance","doc":null,"default_value":"","external_name":"tolerance","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.set_tolerance(@cairo, tolerance)\nself\n"}},{"id":"transform(matrix:Matrix)-instance-method","html_id":"transform(matrix:Matrix)-instance-method","name":"transform","doc":"Modifies the current transformation matrix (CTM) by applying matrix as an additional transformation.\nThe new transformation of user space takes place after any existing transformation.\n\n###Parameters\n- **matrix** a transformation to be applied to the user-space axes","summary":"<p>Modifies the current transformation matrix (CTM) by applying matrix as an additional transformation.</p>","abstract":false,"args":[{"name":"matrix","doc":null,"default_value":"","external_name":"matrix","restriction":"Matrix"}],"args_string":"(matrix : Matrix)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L463","def":{"name":"transform","args":[{"name":"matrix","doc":null,"default_value":"","external_name":"matrix","restriction":"Matrix"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.transform(@cairo, matrix.to_unsafe)"}},{"id":"translate(tx:Float64,ty:Float64)-instance-method","html_id":"translate(tx:Float64,ty:Float64)-instance-method","name":"translate","doc":"Modifies the current transformation matrix (CTM) by translating the user-space origin by *(tx, ty)*.\nThis offset is interpreted as a user-space coordinate according to the CTM in place before the new call to `Context#translate`.\nIn other words, the translation of the user-space origin takes place after any existing transformation.\n\n###Parameters\n- **tx** amount to translate in the X direction\n- **ty** amount to translate in the Y direction","summary":"<p>Modifies the current transformation matrix (CTM) by translating the user-space origin by <em>(tx, ty)</em>.</p>","abstract":false,"args":[{"name":"tx","doc":null,"default_value":"","external_name":"tx","restriction":"Float64"},{"name":"ty","doc":null,"default_value":"","external_name":"ty","restriction":"Float64"}],"args_string":"(tx : Float64, ty : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L431","def":{"name":"translate","args":[{"name":"tx","doc":null,"default_value":"","external_name":"tx","restriction":"Float64"},{"name":"ty","doc":null,"default_value":"","external_name":"ty","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.translate(@cairo, tx, ty)\nself\n"}},{"id":"user_data(key:UserDataKey):Pointer(Void)-instance-method","html_id":"user_data(key:UserDataKey):Pointer(Void)-instance-method","name":"user_data","doc":"Return user data previously attached to cr using the specified key.\nIf no user data has been attached with the given key this function returns `Nil`.\n\n###Parameters\n- **key** the address of the `UserDataKey` the user data was attached to\n\n###Returns\nThe user data previously attached or `Nil`.","summary":"<p>Return user data previously attached to cr using the specified key.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"}],"args_string":"(key : UserDataKey) : Pointer(Void)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L92","def":{"name":"user_data","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Pointer(Void)","visibility":"Public","body":"LibCairo.get_user_data(@cairo, key.to_unsafe)"}},{"id":"user_to_device(p:Point):Point-instance-method","html_id":"user_to_device(p:Point):Point-instance-method","name":"user_to_device","doc":"Transform a coordinate from user space to device space by multiplying the given point by the current transformation matrix (CTM).\n\n###Parameters\n- **p** point to transform\n\n###Returns\nThe transformed point.","summary":"<p>Transform a coordinate from user space to device space by multiplying the given point by the current transformation matrix (CTM).</p>","abstract":false,"args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"args_string":"(p : Point) : Point","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L490","def":{"name":"user_to_device","args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point","visibility":"Public","body":"x, y = p.x, p.y\nLibCairo.user_to_device(@cairo, pointerof(x), pointerof(y))\nPoint.new(x, y)\n"}},{"id":"user_to_device_distance(d:Point):Point-instance-method","html_id":"user_to_device_distance(d:Point):Point-instance-method","name":"user_to_device_distance","doc":"Transform a distance vector from user space to device space. This function is similar to `Context#user_to_device`\nexcept that the translation components of the CTM will be ignored when transforming *(dx, dy)*.\n\n###Parameters\n- **d** the distance vector in user space.\n\n###Returns\nThe distance vector is device space.","summary":"<p>Transform a distance vector from user space to device space.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Point"}],"args_string":"(d : Point) : Point","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/context.cr#L504","def":{"name":"user_to_device_distance","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point","visibility":"Public","body":"x, y = d.x, d.y\nLibCairo.user_to_device_distance(@cairo, pointerof(x), pointerof(y))\nPoint.new(x, y)\n"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Device","path":"Cairo/Device.html","kind":"class","full_name":"Cairo::Device","name":"Device","abstract":false,"superclass":{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/device.cr","line_number":7,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L7"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"cairo/Cairo/Script","kind":"class","full_name":"Cairo::Script","name":"Script"}],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Wrapper for LibCairo::PDeviceT","summary":"<p>Wrapper for LibCairo::PDeviceT</p>","class_methods":[],"constructors":[{"id":"new(device:LibCairo::PDeviceT)-class-method","html_id":"new(device:LibCairo::PDeviceT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"device","doc":null,"default_value":"","external_name":"device","restriction":"LibCairo::PDeviceT"}],"args_string":"(device : LibCairo::PDeviceT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L8","def":{"name":"new","args":[{"name":"device","doc":null,"default_value":"","external_name":"device","restriction":"LibCairo::PDeviceT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(device)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"acquire:Status-instance-method","html_id":"acquire:Status-instance-method","name":"acquire","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L29","def":{"name":"acquire","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.device_acquire(@device)).value)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L13","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.device_destroy(@device)"}},{"id":"finish-instance-method","html_id":"finish-instance-method","name":"finish","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L43","def":{"name":"finish","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.device_finish(@device)\nself\n"}},{"id":"flush-instance-method","html_id":"flush-instance-method","name":"flush","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L38","def":{"name":"flush","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.device_flush(@device)\nself\n"}},{"id":"observer_elapsed:Float64-instance-method","html_id":"observer_elapsed:Float64-instance-method","name":"observer_elapsed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L64","def":{"name":"observer_elapsed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"LibCairo.device_observer_elapsed(@device)"}},{"id":"observer_fill_elapsed:Float64-instance-method","html_id":"observer_fill_elapsed:Float64-instance-method","name":"observer_fill_elapsed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L76","def":{"name":"observer_fill_elapsed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"LibCairo.device_observer_fill_elapsed(@device)"}},{"id":"observer_glyphs_elapsed:Float64-instance-method","html_id":"observer_glyphs_elapsed:Float64-instance-method","name":"observer_glyphs_elapsed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L84","def":{"name":"observer_glyphs_elapsed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"LibCairo.device_observer_glyphs_elapsed(@device)"}},{"id":"observer_mask_elapsed:Float64-instance-method","html_id":"observer_mask_elapsed:Float64-instance-method","name":"observer_mask_elapsed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L72","def":{"name":"observer_mask_elapsed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"LibCairo.device_observer_mask_elapsed(@device)"}},{"id":"observer_paint_elapsed:Float64-instance-method","html_id":"observer_paint_elapsed:Float64-instance-method","name":"observer_paint_elapsed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L68","def":{"name":"observer_paint_elapsed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"LibCairo.device_observer_paint_elapsed(@device)"}},{"id":"observer_print(write_func:LibCairo::WriteFuncT,closure:Pointer(Void)):Status-instance-method","html_id":"observer_print(write_func:LibCairo::WriteFuncT,closure:Pointer(Void)):Status-instance-method","name":"observer_print","doc":null,"summary":null,"abstract":false,"args":[{"name":"write_func","doc":null,"default_value":"","external_name":"write_func","restriction":"LibCairo::WriteFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"}],"args_string":"(write_func : LibCairo::WriteFuncT, closure : Pointer(Void)) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L60","def":{"name":"observer_print","args":[{"name":"write_func","doc":null,"default_value":"","external_name":"write_func","restriction":"LibCairo::WriteFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.device_observer_print(@device, write_func, closure)).value)"}},{"id":"observer_stroke_elapsed:Float64-instance-method","html_id":"observer_stroke_elapsed:Float64-instance-method","name":"observer_stroke_elapsed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L80","def":{"name":"observer_stroke_elapsed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"LibCairo.device_observer_stroke_elapsed(@device)"}},{"id":"reference:Device-instance-method","html_id":"reference:Device-instance-method","name":"reference","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Device","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L17","def":{"name":"reference","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Device","visibility":"Public","body":"Device.new(LibCairo.device_reference(@device))"}},{"id":"reference_count:UInt32-instance-method","html_id":"reference_count:UInt32-instance-method","name":"reference_count","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L48","def":{"name":"reference_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"LibCairo.device_get_reference_count(@device)"}},{"id":"release-instance-method","html_id":"release-instance-method","name":"release","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L33","def":{"name":"release","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.device_release(@device)\nself\n"}},{"id":"set_user_data(key:UserDataKey,user_data:Pointer(Void),destroy:LibCairo::DestroyFuncT):Status-instance-method","html_id":"set_user_data(key:UserDataKey,user_data:Pointer(Void),destroy:LibCairo::DestroyFuncT):Status-instance-method","name":"set_user_data","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"},{"name":"user_data","doc":null,"default_value":"","external_name":"user_data","restriction":"::Pointer(Void)"},{"name":"destroy","doc":null,"default_value":"","external_name":"destroy","restriction":"LibCairo::DestroyFuncT"}],"args_string":"(key : UserDataKey, user_data : Pointer(Void), destroy : LibCairo::DestroyFuncT) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L56","def":{"name":"set_user_data","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"},{"name":"user_data","doc":null,"default_value":"","external_name":"user_data","restriction":"::Pointer(Void)"},{"name":"destroy","doc":null,"default_value":"","external_name":"destroy","restriction":"LibCairo::DestroyFuncT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.device_set_user_data(@device, key.to_unsafe, user_data, destroy)).value)"}},{"id":"status:Status-instance-method","html_id":"status:Status-instance-method","name":"status","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L25","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.device_status(@device)).value)"}},{"id":"to_unsafe:LibCairo::PDeviceT-instance-method","html_id":"to_unsafe:LibCairo::PDeviceT-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PDeviceT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L88","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PDeviceT","visibility":"Public","body":"@device"}},{"id":"type:DeviceType-instance-method","html_id":"type:DeviceType-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : DeviceType","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L21","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"DeviceType","visibility":"Public","body":"DeviceType.new((LibCairo.device_get_type(@device)).value)"}},{"id":"user_data(key:UserDataKey):Pointer(Void)-instance-method","html_id":"user_data(key:UserDataKey):Pointer(Void)-instance-method","name":"user_data","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"}],"args_string":"(key : UserDataKey) : Pointer(Void)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device.cr#L52","def":{"name":"user_data","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Pointer(Void)","visibility":"Public","body":"LibCairo.device_get_user_data(@device, key.to_unsafe)"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/DeviceType","path":"Cairo/DeviceType.html","kind":"enum","full_name":"Cairo::DeviceType","name":"DeviceType","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/device_type.cr","line_number":2,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device_type.cr#L2"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"DRM","name":"DRM","value":"0","doc":null,"summary":null},{"id":"GL","name":"GL","value":"1","doc":null,"summary":null},{"id":"Script","name":"Script","value":"2","doc":null,"summary":null},{"id":"XCB","name":"XCB","value":"3","doc":null,"summary":null},{"id":"XLib","name":"XLib","value":"4","doc":null,"summary":null},{"id":"XML","name":"XML","value":"5","doc":null,"summary":null},{"id":"COGL","name":"COGL","value":"6","doc":null,"summary":null},{"id":"Win32","name":"Win32","value":"7","doc":null,"summary":null},{"id":"Invalid","name":"Invalid","value":"-1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"cogl?-instance-method","html_id":"cogl?-instance-method","name":"cogl?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device_type.cr#L9","def":{"name":"cogl?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == COGL"}},{"id":"drm?-instance-method","html_id":"drm?-instance-method","name":"drm?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device_type.cr#L3","def":{"name":"drm?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DRM"}},{"id":"gl?-instance-method","html_id":"gl?-instance-method","name":"gl?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device_type.cr#L4","def":{"name":"gl?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == GL"}},{"id":"invalid?-instance-method","html_id":"invalid?-instance-method","name":"invalid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device_type.cr#L12","def":{"name":"invalid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Invalid"}},{"id":"script?-instance-method","html_id":"script?-instance-method","name":"script?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device_type.cr#L5","def":{"name":"script?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Script"}},{"id":"win32?-instance-method","html_id":"win32?-instance-method","name":"win32?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device_type.cr#L10","def":{"name":"win32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Win32"}},{"id":"x_lib?-instance-method","html_id":"x_lib?-instance-method","name":"x_lib?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device_type.cr#L7","def":{"name":"x_lib?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == XLib"}},{"id":"xcb?-instance-method","html_id":"xcb?-instance-method","name":"xcb?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device_type.cr#L6","def":{"name":"xcb?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == XCB"}},{"id":"xml?-instance-method","html_id":"xml?-instance-method","name":"xml?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/device_type.cr#L8","def":{"name":"xml?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == XML"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Extend","path":"Cairo/Extend.html","kind":"enum","full_name":"Cairo::Extend","name":"Extend","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/extend.cr","line_number":10,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extend.cr#L10"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"None","name":"None","value":"0","doc":"Pixels outside of the source pattern are fully.","summary":"<p>Pixels outside of the source pattern are fully.</p>"},{"id":"Repeat","name":"Repeat","value":"1","doc":"The pattern is tiled by repeating.","summary":"<p>The pattern is tiled by repeating.</p>"},{"id":"Reflect","name":"Reflect","value":"2","doc":"The pattern is tiled by reflecting at the edges.","summary":"<p>The pattern is tiled by reflecting at the edges.</p>"},{"id":"Pad","name":"Pad","value":"3","doc":"Pixels outside of the pattern copy the closest pixel from the source.","summary":"<p>Pixels outside of the pattern copy the closest pixel from the source.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"`Extend` is used to describe how pattern color/alpha will be determined for areas \"outside\"\nthe pattern's natural area, (for example, outside the surface bounds or outside the gradient geometry).\n\nMesh patterns are not affected by the extend mode.\n\nThe default extend mode is `Extend::None` for surface patterns and `Extend::Pad` for gradient patterns.\n\nNew entries may be added in future versions.","summary":"<p><code><a href=\"../Cairo/Extend.html\">Extend</a></code> is used to describe how pattern color/alpha will be determined for areas \"outside\" the pattern's natural area, (for example, outside the surface bounds or outside the gradient geometry).</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"none?-instance-method","html_id":"none?-instance-method","name":"none?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extend.cr#L12","def":{"name":"none?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == None"}},{"id":"pad?-instance-method","html_id":"pad?-instance-method","name":"pad?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extend.cr#L21","def":{"name":"pad?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Pad"}},{"id":"reflect?-instance-method","html_id":"reflect?-instance-method","name":"reflect?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extend.cr#L18","def":{"name":"reflect?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Reflect"}},{"id":"repeat?-instance-method","html_id":"repeat?-instance-method","name":"repeat?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extend.cr#L15","def":{"name":"repeat?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Repeat"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Extents","path":"Cairo/Extents.html","kind":"struct","full_name":"Cairo::Extents","name":"Extents","abstract":false,"superclass":{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/extents.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extents.cr#L4"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(x1:Float64,y1:Float64,x2:Float64,y2:Float64)-class-method","html_id":"new(x1:Float64,y1:Float64,x2:Float64,y2:Float64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Float64"},{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Float64"},{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Float64"},{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Float64"}],"args_string":"(x1 : Float64, y1 : Float64, x2 : Float64, y2 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extents.cr#L13","def":{"name":"new","args":[{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Float64"},{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Float64"},{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Float64"},{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(x1, y1, x2, y2)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(p1:Point,p2:Point)-class-method","html_id":"new(p1:Point,p2:Point)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"p1","doc":null,"default_value":"","external_name":"p1","restriction":"Point"},{"name":"p2","doc":null,"default_value":"","external_name":"p2","restriction":"Point"}],"args_string":"(p1 : Point, p2 : Point)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extents.cr#L16","def":{"name":"new","args":[{"name":"p1","doc":null,"default_value":"","external_name":"p1","restriction":"Point"},{"name":"p2","doc":null,"default_value":"","external_name":"p2","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(p1, p2)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extents.cr#L10","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"p1:Point-instance-method","html_id":"p1:Point-instance-method","name":"p1","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Point","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extents.cr#L23","def":{"name":"p1","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point","visibility":"Public","body":"Point.new(@x1, @y1)"}},{"id":"p1=(p:Point)-instance-method","html_id":"p1=(p:Point)-instance-method","name":"p1=","doc":null,"summary":null,"abstract":false,"args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"args_string":"(p : Point)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extents.cr#L27","def":{"name":"p1=","args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x1 = p.x\n@y1 = p.y\n"}},{"id":"p2:Point-instance-method","html_id":"p2:Point-instance-method","name":"p2","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Point","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extents.cr#L32","def":{"name":"p2","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point","visibility":"Public","body":"Point.new(@x2, @y2)"}},{"id":"p2=(p:Point)-instance-method","html_id":"p2=(p:Point)-instance-method","name":"p2=","doc":null,"summary":null,"abstract":false,"args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"args_string":"(p : Point)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extents.cr#L36","def":{"name":"p2=","args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x2 = p.x\n@y2 = p.y\n"}},{"id":"x1:Float64-instance-method","html_id":"x1:Float64-instance-method","name":"x1","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extents.cr#L5","def":{"name":"x1","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@x1"}},{"id":"x1=(x1:Float64)-instance-method","html_id":"x1=(x1:Float64)-instance-method","name":"x1=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Float64"}],"args_string":"(x1 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extents.cr#L5","def":{"name":"x1=","args":[{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x1 = x1"}},{"id":"x2:Float64-instance-method","html_id":"x2:Float64-instance-method","name":"x2","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extents.cr#L7","def":{"name":"x2","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@x2"}},{"id":"x2=(x2:Float64)-instance-method","html_id":"x2=(x2:Float64)-instance-method","name":"x2=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Float64"}],"args_string":"(x2 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extents.cr#L7","def":{"name":"x2=","args":[{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x2 = x2"}},{"id":"y1:Float64-instance-method","html_id":"y1:Float64-instance-method","name":"y1","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extents.cr#L6","def":{"name":"y1","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@y1"}},{"id":"y1=(y1:Float64)-instance-method","html_id":"y1=(y1:Float64)-instance-method","name":"y1=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Float64"}],"args_string":"(y1 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extents.cr#L6","def":{"name":"y1=","args":[{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y1 = y1"}},{"id":"y2:Float64-instance-method","html_id":"y2:Float64-instance-method","name":"y2","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extents.cr#L8","def":{"name":"y2","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@y2"}},{"id":"y2=(y2:Float64)-instance-method","html_id":"y2=(y2:Float64)-instance-method","name":"y2=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Float64"}],"args_string":"(y2 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/extents.cr#L8","def":{"name":"y2=","args":[{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y2 = y2"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/FillRule","path":"Cairo/FillRule.html","kind":"enum","full_name":"Cairo::FillRule","name":"FillRule","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/fill_rule.cr","line_number":11,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/fill_rule.cr#L11"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Winding","name":"Winding","value":"0","doc":"If the path crosses the ray from left-to-right, counts +1. If the path crosses the ray from right to left, counts -1.\n(Left and right are determined from the perspective of looking along the ray from the starting point.)\nIf the total count is non-zero, the point will be filled.","summary":"<p>If the path crosses the ray from left-to-right, counts +1.</p>"},{"id":"EvenOdd","name":"EvenOdd","value":"1","doc":"Counts the total number of intersections, without regard to the orientation of the contour.\nIf the total number of intersections is odd, the point will be filled.","summary":"<p>Counts the total number of intersections, without regard to the orientation of the contour.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"`FillRule` is used to select how paths are filled. For both fill rules,\nwhether or not a point is included in the fill is determined by taking a ray from that point to infinity\nand looking at intersections with the path. The ray can be in any direction,\nas long as it doesn't pass through the end point of a segment or have a tricky intersection such as intersecting tangent to the path.\n(NOTE that filling is not actually implemented in this way. This is just a description of the rule that is applied.)\n\nThe default fill rule is `FillRule::Winding`.\n\nNew entries may be added in future versions.","summary":"<p><code><a href=\"../Cairo/FillRule.html\">FillRule</a></code> is used to select how paths are filled.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"even_odd?-instance-method","html_id":"even_odd?-instance-method","name":"even_odd?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/fill_rule.cr#L19","def":{"name":"even_odd?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == EvenOdd"}},{"id":"winding?-instance-method","html_id":"winding?-instance-method","name":"winding?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/fill_rule.cr#L15","def":{"name":"winding?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Winding"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Filter","path":"Cairo/Filter.html","kind":"enum","full_name":"Cairo::Filter","name":"Filter","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/filter.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/filter.cr#L4"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Fast","name":"Fast","value":"0","doc":"A high-performance filter, with quality similar to `Filter::Nearest`.","summary":"<p>A high-performance filter, with quality similar to <code><a href=\"../Cairo/Filter.html#Nearest\">Filter::Nearest</a></code>.</p>"},{"id":"Good","name":"Good","value":"1","doc":"A reasonable-performance filter, with quality similar to `Filter::Bilinear`.","summary":"<p>A reasonable-performance filter, with quality similar to <code><a href=\"../Cairo/Filter.html#Bilinear\">Filter::Bilinear</a></code>.</p>"},{"id":"Best","name":"Best","value":"2","doc":"The highest-quality available, performance may not be suitable for interactive use.","summary":"<p>The highest-quality available, performance may not be suitable for interactive use.</p>"},{"id":"Nearest","name":"Nearest","value":"3","doc":"Nearest-neighbor filtering.","summary":"<p>Nearest-neighbor filtering.</p>"},{"id":"Bilinear","name":"Bilinear","value":"4","doc":"Linear interpolation in two dimensions.","summary":"<p>Linear interpolation in two dimensions.</p>"},{"id":"Gaussian","name":"Gaussian","value":"5","doc":"This filter value is currently unimplemented, and should not be used in current code.","summary":"<p>This filter value is currently unimplemented, and should not be used in current code.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"`Filter` is used to indicate what filtering should be applied when reading pixel values from patterns.\nSee `Pattern#filter=` for indicating the desired filter to be used with a particular pattern.","summary":"<p><code><a href=\"../Cairo/Filter.html\">Filter</a></code> is used to indicate what filtering should be applied when reading pixel values from patterns.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"best?-instance-method","html_id":"best?-instance-method","name":"best?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/filter.cr#L12","def":{"name":"best?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Best"}},{"id":"bilinear?-instance-method","html_id":"bilinear?-instance-method","name":"bilinear?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/filter.cr#L18","def":{"name":"bilinear?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Bilinear"}},{"id":"fast?-instance-method","html_id":"fast?-instance-method","name":"fast?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/filter.cr#L6","def":{"name":"fast?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Fast"}},{"id":"gaussian?-instance-method","html_id":"gaussian?-instance-method","name":"gaussian?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/filter.cr#L21","def":{"name":"gaussian?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Gaussian"}},{"id":"good?-instance-method","html_id":"good?-instance-method","name":"good?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/filter.cr#L9","def":{"name":"good?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Good"}},{"id":"nearest?-instance-method","html_id":"nearest?-instance-method","name":"nearest?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/filter.cr#L15","def":{"name":"nearest?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Nearest"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/FontExtents","path":"Cairo/FontExtents.html","kind":"class","full_name":"Cairo::FontExtents","name":"FontExtents","abstract":false,"superclass":{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/font_extents.cr","line_number":15,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_extents.cr#L15"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"The `FontExtents` structure stores metric information for a font.\nValues are given in the current user-space coordinate system.\n\nBecause font metrics are in user-space coordinates, they are mostly,\nbut not entirely, independent of the current transformation matrix.\nIf you call `context.scale(2.0, 2.0)`, text will be drawn twice as big,\nbut the reported text extents will not be doubled. They will change slightly due\nto hinting (so you can't assume that metrics are independent of the transformation matrix),\nbut otherwise will remain unchanged.","summary":"<p>The <code><a href=\"../Cairo/FontExtents.html\">FontExtents</a></code> structure stores metric information for a font.</p>","class_methods":[],"constructors":[{"id":"new(ascent:Float64,descent:Float64,height:Float64,max_x_advance:Float64,max_y_advance:Float64)-class-method","html_id":"new(ascent:Float64,descent:Float64,height:Float64,max_x_advance:Float64,max_y_advance:Float64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ascent","doc":null,"default_value":"","external_name":"ascent","restriction":"Float64"},{"name":"descent","doc":null,"default_value":"","external_name":"descent","restriction":"Float64"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"},{"name":"max_x_advance","doc":null,"default_value":"","external_name":"max_x_advance","restriction":"Float64"},{"name":"max_y_advance","doc":null,"default_value":"","external_name":"max_y_advance","restriction":"Float64"}],"args_string":"(ascent : Float64, descent : Float64, height : Float64, max_x_advance : Float64, max_y_advance : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_extents.cr#L20","def":{"name":"new","args":[{"name":"ascent","doc":null,"default_value":"","external_name":"ascent","restriction":"Float64"},{"name":"descent","doc":null,"default_value":"","external_name":"descent","restriction":"Float64"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"},{"name":"max_x_advance","doc":null,"default_value":"","external_name":"max_x_advance","restriction":"Float64"},{"name":"max_y_advance","doc":null,"default_value":"","external_name":"max_y_advance","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ascent, descent, height, max_x_advance, max_y_advance)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(font_extents:LibCairo::FontExtentsT)-class-method","html_id":"new(font_extents:LibCairo::FontExtentsT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"font_extents","doc":null,"default_value":"","external_name":"font_extents","restriction":"LibCairo::FontExtentsT"}],"args_string":"(font_extents : LibCairo::FontExtentsT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_extents.cr#L30","def":{"name":"new","args":[{"name":"font_extents","doc":null,"default_value":"","external_name":"font_extents","restriction":"LibCairo::FontExtentsT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(font_extents)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_extents.cr#L16","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"ascent:Float64-instance-method","html_id":"ascent:Float64-instance-method","name":"ascent","doc":"The distance that the font extends above the baseline.\n\nNOTE that this is not always exactly equal to the maximum of the extents of all the glyphs in the font,\nbut rather is picked to express the font designer's intent as to how the font should align with elements above it.","summary":"<p>The distance that the font extends above the baseline.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_extents.cr#L38","def":{"name":"ascent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@font_extents.ascent"}},{"id":"ascent=(ascent:Float64)-instance-method","html_id":"ascent=(ascent:Float64)-instance-method","name":"ascent=","doc":null,"summary":null,"abstract":false,"args":[{"name":"ascent","doc":null,"default_value":"","external_name":"ascent","restriction":"Float64"}],"args_string":"(ascent : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_extents.cr#L43","def":{"name":"ascent=","args":[{"name":"ascent","doc":null,"default_value":"","external_name":"ascent","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@font_extents.ascent = ascent"}},{"id":"descent:Float64-instance-method","html_id":"descent:Float64-instance-method","name":"descent","doc":"The distance that the font extends below the baseline.\n\nThis value is positive for typical fonts that include portions below the baseline.\nNOTE that this is not always exactly equal to the maximum of the extents of all the glyphs in the font,\nbut rather is picked to express the font designer's intent as to how the font should align with elements below it.","summary":"<p>The distance that the font extends below the baseline.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_extents.cr#L53","def":{"name":"descent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@font_extents.descent"}},{"id":"descent=(descent:Float64)-instance-method","html_id":"descent=(descent:Float64)-instance-method","name":"descent=","doc":null,"summary":null,"abstract":false,"args":[{"name":"descent","doc":null,"default_value":"","external_name":"descent","restriction":"Float64"}],"args_string":"(descent : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_extents.cr#L58","def":{"name":"descent=","args":[{"name":"descent","doc":null,"default_value":"","external_name":"descent","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@font_extents.descent = descent"}},{"id":"height:Float64-instance-method","html_id":"height:Float64-instance-method","name":"height","doc":"The recommended vertical distance between baselines when setting consecutive lines of text with the font.\n\nThis is greater than *ascent+descent* by a quantity known as the line spacing or external leading.\nWhen space is at a premium, most fonts can be set with only a distance of *ascent+descent* between lines.","summary":"<p>The recommended vertical distance between baselines when setting consecutive lines of text with the font.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_extents.cr#L67","def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@font_extents.height"}},{"id":"height=(height:Float64)-instance-method","html_id":"height=(height:Float64)-instance-method","name":"height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"}],"args_string":"(height : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_extents.cr#L72","def":{"name":"height=","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@font_extents.height = height"}},{"id":"max_x_advance:Float64-instance-method","html_id":"max_x_advance:Float64-instance-method","name":"max_x_advance","doc":"The maximum distance in the X direction that the origin is advanced for any glyph in the font.","summary":"<p>The maximum distance in the X direction that the origin is advanced for any glyph in the font.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_extents.cr#L78","def":{"name":"max_x_advance","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@font_extents.max_x_advance"}},{"id":"max_x_advance=(max_x_advance:Float64)-instance-method","html_id":"max_x_advance=(max_x_advance:Float64)-instance-method","name":"max_x_advance=","doc":null,"summary":null,"abstract":false,"args":[{"name":"max_x_advance","doc":null,"default_value":"","external_name":"max_x_advance","restriction":"Float64"}],"args_string":"(max_x_advance : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_extents.cr#L83","def":{"name":"max_x_advance=","args":[{"name":"max_x_advance","doc":null,"default_value":"","external_name":"max_x_advance","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@font_extents.max_x_advance = max_x_advance"}},{"id":"max_y_advance:Float64-instance-method","html_id":"max_y_advance:Float64-instance-method","name":"max_y_advance","doc":"The maximum distance in the Y direction that the origin is advanced for any glyph in the font.\n\nThis will be zero for normal fonts used for horizontal writing. (The scripts of East Asia are sometimes written vertically.)","summary":"<p>The maximum distance in the Y direction that the origin is advanced for any glyph in the font.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_extents.cr#L91","def":{"name":"max_y_advance","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@font_extents.max_y_advance"}},{"id":"max_y_advance=(max_y_advance:Float64)-instance-method","html_id":"max_y_advance=(max_y_advance:Float64)-instance-method","name":"max_y_advance=","doc":null,"summary":null,"abstract":false,"args":[{"name":"max_y_advance","doc":null,"default_value":"","external_name":"max_y_advance","restriction":"Float64"}],"args_string":"(max_y_advance : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_extents.cr#L96","def":{"name":"max_y_advance=","args":[{"name":"max_y_advance","doc":null,"default_value":"","external_name":"max_y_advance","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@font_extents.max_y_advance = max_y_advance"}},{"id":"to_cairo_font_extents:LibCairo::FontExtentsT-instance-method","html_id":"to_cairo_font_extents:LibCairo::FontExtentsT-instance-method","name":"to_cairo_font_extents","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::FontExtentsT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_extents.cr#L100","def":{"name":"to_cairo_font_extents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::FontExtentsT","visibility":"Public","body":"@font_extents"}},{"id":"to_unsafe:LibCairo::PFontExtentsT-instance-method","html_id":"to_unsafe:LibCairo::PFontExtentsT-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PFontExtentsT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_extents.cr#L104","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PFontExtentsT","visibility":"Public","body":"pointerof(@font_extents)"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/FontFace","path":"Cairo/FontFace.html","kind":"class","full_name":"Cairo::FontFace","name":"FontFace","abstract":false,"superclass":{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/font_face.cr","line_number":16,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L16"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"`FontFace` represents a particular font at a particular weight, slant,\nand other characteristic but no size, transformation, or size.\n\nA `FontFace` specifies all aspects of a font other than the size or font matrix\n(a font matrix is used to distort a font by shearing it or scaling it unequally in the two directions).\nA font face can be set on a `Context` by using `Context#font_face=`;\nthe size and font matrix are set with `Context#font_size=` and `Context#font_matrix=`.\n\nThere are various types of font faces, depending on the font backend they use.\nThe type of a font face can be queried using `FontFace#type`.\n\nMemory management of `FontFace` is done with `FontFace#reference` and `FontFace#finalize`.","summary":"<p><code><a href=\"../Cairo/FontFace.html\">FontFace</a></code> represents a particular font at a particular weight, slant, and other characteristic but no size, transformation, or size.</p>","class_methods":[],"constructors":[{"id":"new(family:String,slant:FontSlant,weight:FontWeight)-class-method","html_id":"new(family:String,slant:FontSlant,weight:FontWeight)-class-method","name":"new","doc":"Creates a font face from a triplet of *family*, *slant*, and *weight*.\nThese font faces are used in implementation of the the `Context` \"toy\" font API.\n\nIf family is the zero-length string \"\", the platform-specific default family is assumed.\nThe default family then can be queried using `FontFace#family`.\n\nThe `Context#select_font_face` function uses this to create font faces.\nSee that function for limitations and other details of toy font faces.\n\n###Parameters\n- **family** a font family name, encoded in UTF-8\n- **slant** the slant for the font\n- **weight** the weight for the font\n\n###Returns\nA newly created `FontFace`. Free with `FontFace#finalize` when you are done using it.","summary":"<p>Creates a font face from a triplet of <em>family</em>, <em>slant</em>, and <em>weight</em>.</p>","abstract":false,"args":[{"name":"family","doc":null,"default_value":"","external_name":"family","restriction":"String"},{"name":"slant","doc":null,"default_value":"","external_name":"slant","restriction":"FontSlant"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"FontWeight"}],"args_string":"(family : String, slant : FontSlant, weight : FontWeight)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L117","def":{"name":"new","args":[{"name":"family","doc":null,"default_value":"","external_name":"family","restriction":"String"},{"name":"slant","doc":null,"default_value":"","external_name":"slant","restriction":"FontSlant"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"FontWeight"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(family, slant, weight)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(font_face:LibCairo::PFontFaceT)-class-method","html_id":"new(font_face:LibCairo::PFontFaceT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"font_face","doc":null,"default_value":"","external_name":"font_face","restriction":"LibCairo::PFontFaceT"}],"args_string":"(font_face : LibCairo::PFontFaceT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L21","def":{"name":"new","args":[{"name":"font_face","doc":null,"default_value":"","external_name":"font_face","restriction":"LibCairo::PFontFaceT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(font_face)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L17","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"create_scaled_font(font_matrix:Matrix,ctm:Matrix,options:FontOptions):ScaledFont-instance-method","html_id":"create_scaled_font(font_matrix:Matrix,ctm:Matrix,options:FontOptions):ScaledFont-instance-method","name":"create_scaled_font","doc":null,"summary":null,"abstract":false,"args":[{"name":"font_matrix","doc":null,"default_value":"","external_name":"font_matrix","restriction":"Matrix"},{"name":"ctm","doc":null,"default_value":"","external_name":"ctm","restriction":"Matrix"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"FontOptions"}],"args_string":"(font_matrix : Matrix, ctm : Matrix, options : FontOptions) : ScaledFont","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L97","def":{"name":"create_scaled_font","args":[{"name":"font_matrix","doc":null,"default_value":"","external_name":"font_matrix","restriction":"Matrix"},{"name":"ctm","doc":null,"default_value":"","external_name":"ctm","restriction":"Matrix"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"FontOptions"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ScaledFont","visibility":"Public","body":"ScaledFont.new(LibCairo.scaled_font_create(@font_face, font_matrix.to_unsafe, ctm.to_unsafe, options.to_unsafe))"}},{"id":"family:String-instance-method","html_id":"family:String-instance-method","name":"family","doc":"Gets the familly name of a toy font.\n\n###Returns\nThe family name. This string is owned by the font face and remains valid as long as the font face is alive (referenced).","summary":"<p>Gets the familly name of a toy font.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L127","def":{"name":"family","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.new(LibCairo.toy_font_face_get_family(@font_face))"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Decreases the reference count on `FontFace` by one.\nIf the result is zero, then `FontFace` and all associated resources are freed.\nSee `FontFace#reference`.","summary":"<p>Decreases the reference count on <code><a href=\"../Cairo/FontFace.html\">FontFace</a></code> by one.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L29","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.font_face_destroy(@font_face)"}},{"id":"init_func:LibCairo::UserScaledFontInitFuncT-instance-method","html_id":"init_func:LibCairo::UserScaledFontInitFuncT-instance-method","name":"init_func","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::UserScaledFontInitFuncT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L147","def":{"name":"init_func","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::UserScaledFontInitFuncT","visibility":"Public","body":"LibCairo.user_font_face_get_init_func(@font_face)"}},{"id":"init_func=(init_func:LibCairo::UserScaledFontInitFuncT)-instance-method","html_id":"init_func=(init_func:LibCairo::UserScaledFontInitFuncT)-instance-method","name":"init_func=","doc":null,"summary":null,"abstract":false,"args":[{"name":"init_func","doc":null,"default_value":"","external_name":"init_func","restriction":"LibCairo::UserScaledFontInitFuncT"}],"args_string":"(init_func : LibCairo::UserScaledFontInitFuncT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L151","def":{"name":"init_func=","args":[{"name":"init_func","doc":null,"default_value":"","external_name":"init_func","restriction":"LibCairo::UserScaledFontInitFuncT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.user_font_face_set_init_func(@font_face, init_func)\nself\n"}},{"id":"reference:FontFace-instance-method","html_id":"reference:FontFace-instance-method","name":"reference","doc":"Increases the reference count on `FontFace` by one.\nThis prevents `FontFace` from being destroyed until a matching call\nto `Context#finalize` is made.\n\nUse `Context#reference_count` to get the number of references to a `FontFace`.\n\n###Returns\nThe referenced `FontFace`.","summary":"<p>Increases the reference count on <code><a href=\"../Cairo/FontFace.html\">FontFace</a></code> by one.</p>","abstract":false,"args":[],"args_string":" : FontFace","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L41","def":{"name":"reference","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FontFace","visibility":"Public","body":"FontFace.new(LibCairo.font_face_reference(@font_face))"}},{"id":"reference_count:UInt32-instance-method","html_id":"reference_count:UInt32-instance-method","name":"reference_count","doc":"Returns the current reference count of `FontFace` .\n\n###Returns\nTthe current reference count of `FontFace`. If the object is a nil object, 0 will be returned.","summary":"<p>Returns the current reference count of <code><a href=\"../Cairo/FontFace.html\">FontFace</a></code> .</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L49","def":{"name":"reference_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"LibCairo.font_face_get_reference_count(@font_face)"}},{"id":"render_glyph_func:LibCairo::UserScaledFontRenderGlyphFuncT-instance-method","html_id":"render_glyph_func:LibCairo::UserScaledFontRenderGlyphFuncT-instance-method","name":"render_glyph_func","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::UserScaledFontRenderGlyphFuncT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L156","def":{"name":"render_glyph_func","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::UserScaledFontRenderGlyphFuncT","visibility":"Public","body":"LibCairo.user_font_face_get_render_glyph_func(@font_face)"}},{"id":"render_glyph_func=(render_glyph_func:LibCairo::UserScaledFontRenderGlyphFuncT)-instance-method","html_id":"render_glyph_func=(render_glyph_func:LibCairo::UserScaledFontRenderGlyphFuncT)-instance-method","name":"render_glyph_func=","doc":null,"summary":null,"abstract":false,"args":[{"name":"render_glyph_func","doc":null,"default_value":"","external_name":"render_glyph_func","restriction":"LibCairo::UserScaledFontRenderGlyphFuncT"}],"args_string":"(render_glyph_func : LibCairo::UserScaledFontRenderGlyphFuncT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L160","def":{"name":"render_glyph_func=","args":[{"name":"render_glyph_func","doc":null,"default_value":"","external_name":"render_glyph_func","restriction":"LibCairo::UserScaledFontRenderGlyphFuncT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.user_font_face_set_render_glyph_func(@font_face, render_glyph_func)\nself\n"}},{"id":"set_user_data(key:UserDataKey,user_data:Pointer(Void),destroy:LibCairo::DestroyFuncT):Status-instance-method","html_id":"set_user_data(key:UserDataKey,user_data:Pointer(Void),destroy:LibCairo::DestroyFuncT):Status-instance-method","name":"set_user_data","doc":"Attach user data to `FontFace`. To remove user data from a font face,\ncall this function with the key that was used to set it and `Nil` for data.\n\n###Parameters\n- **key** the address of a `UserDataKey` to attach the user data to\n- **user_data** the user data to attach to the font face\n- **destroy** a `LibCairo::DestroyFuncT` which will be called when the font\nface is destroyed or when new user data is attached using the same key\n\n###Returns\n`Status::Success` or `Status::NoMemory` if a slot could not be allocated for the user data.","summary":"<p>Attach user data to <code><a href=\"../Cairo/FontFace.html\">FontFace</a></code>.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"},{"name":"user_data","doc":null,"default_value":"","external_name":"user_data","restriction":"::Pointer(Void)"},{"name":"destroy","doc":null,"default_value":"","external_name":"destroy","restriction":"LibCairo::DestroyFuncT"}],"args_string":"(key : UserDataKey, user_data : Pointer(Void), destroy : LibCairo::DestroyFuncT) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L93","def":{"name":"set_user_data","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"},{"name":"user_data","doc":null,"default_value":"","external_name":"user_data","restriction":"::Pointer(Void)"},{"name":"destroy","doc":null,"default_value":"","external_name":"destroy","restriction":"LibCairo::DestroyFuncT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.font_face_set_user_data(@font_face, key.to_unsafe, user_data, destroy)).value)"}},{"id":"slant:FontSlant-instance-method","html_id":"slant:FontSlant-instance-method","name":"slant","doc":"Gets the slant a toy font.\n\n###Returns\nThe slant value.","summary":"<p>Gets the slant a toy font.</p>","abstract":false,"args":[],"args_string":" : FontSlant","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L135","def":{"name":"slant","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FontSlant","visibility":"Public","body":"FontSlant.new((LibCairo.toy_font_face_get_slant(@font_face)).value)"}},{"id":"status:Status-instance-method","html_id":"status:Status-instance-method","name":"status","doc":"Checks whether an error has previously occurred for this font face.\n\n###Returns\n`Status::Success` or another error such as `Status::NoMemory`.","summary":"<p>Checks whether an error has previously occurred for this font face.</p>","abstract":false,"args":[],"args_string":" : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L57","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.font_face_status(@font_face)).value)"}},{"id":"text_to_glyphs_func:LibCairo::UserScaledFontTextToGlyphFuncT-instance-method","html_id":"text_to_glyphs_func:LibCairo::UserScaledFontTextToGlyphFuncT-instance-method","name":"text_to_glyphs_func","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::UserScaledFontTextToGlyphFuncT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L165","def":{"name":"text_to_glyphs_func","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::UserScaledFontTextToGlyphFuncT","visibility":"Public","body":"LibCairo.user_font_face_get_text_to_glyphs_func(@font_face)"}},{"id":"text_to_glyphs_func=(text_to_glyphs_func:LibCairo::UserScaledFontTextToGlyphFuncT)-instance-method","html_id":"text_to_glyphs_func=(text_to_glyphs_func:LibCairo::UserScaledFontTextToGlyphFuncT)-instance-method","name":"text_to_glyphs_func=","doc":null,"summary":null,"abstract":false,"args":[{"name":"text_to_glyphs_func","doc":null,"default_value":"","external_name":"text_to_glyphs_func","restriction":"LibCairo::UserScaledFontTextToGlyphFuncT"}],"args_string":"(text_to_glyphs_func : LibCairo::UserScaledFontTextToGlyphFuncT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L169","def":{"name":"text_to_glyphs_func=","args":[{"name":"text_to_glyphs_func","doc":null,"default_value":"","external_name":"text_to_glyphs_func","restriction":"LibCairo::UserScaledFontTextToGlyphFuncT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.user_font_face_set_text_to_glyphs_func(@font_face, text_to_glyphs_func)\nself\n"}},{"id":"to_unsafe:LibCairo::PFontFaceT-instance-method","html_id":"to_unsafe:LibCairo::PFontFaceT-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PFontFaceT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L183","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PFontFaceT","visibility":"Public","body":"@font_face"}},{"id":"type:FontType-instance-method","html_id":"type:FontType-instance-method","name":"type","doc":"This function returns the type of the backend used to create a font face.\nSee `FontType` for available types.\n\n###Returns\nThe type of `FontFace`.","summary":"<p>This function returns the type of the backend used to create a font face.</p>","abstract":false,"args":[],"args_string":" : FontType","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L66","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FontType","visibility":"Public","body":"FontType.new((LibCairo.font_face_get_type(@font_face)).value)"}},{"id":"unicode_to_glyph_func=(unicode_to_glyph_func:LibCairo::UserScaledFontUnicodeToGlyphFuncT)-instance-method","html_id":"unicode_to_glyph_func=(unicode_to_glyph_func:LibCairo::UserScaledFontUnicodeToGlyphFuncT)-instance-method","name":"unicode_to_glyph_func=","doc":null,"summary":null,"abstract":false,"args":[{"name":"unicode_to_glyph_func","doc":null,"default_value":"","external_name":"unicode_to_glyph_func","restriction":"LibCairo::UserScaledFontUnicodeToGlyphFuncT"}],"args_string":"(unicode_to_glyph_func : LibCairo::UserScaledFontUnicodeToGlyphFuncT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L178","def":{"name":"unicode_to_glyph_func=","args":[{"name":"unicode_to_glyph_func","doc":null,"default_value":"","external_name":"unicode_to_glyph_func","restriction":"LibCairo::UserScaledFontUnicodeToGlyphFuncT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.user_font_face_set_unicode_to_glyph_func(@font_face, unicode_to_glyph_func)\nself\n"}},{"id":"user_data(key:UserDataKey):Pointer(Void)-instance-method","html_id":"user_data(key:UserDataKey):Pointer(Void)-instance-method","name":"user_data","doc":"Return user data previously attached to `FontFace` using the specified key.\nIf no user data has been attached with the given key this function returns `Nil`.\n\n###Parameters\n- **key** the address of the `UserDataKey` the user data was attached to\n\n###Returns\nThe user data previously attached or `Nil`.","summary":"<p>Return user data previously attached to <code><a href=\"../Cairo/FontFace.html\">FontFace</a></code> using the specified key.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"}],"args_string":"(key : UserDataKey) : Pointer(Void)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L78","def":{"name":"user_data","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Pointer(Void)","visibility":"Public","body":"LibCairo.font_face_get_user_data(@font_face, key.to_unsafe)"}},{"id":"user_font_face_get_unicode_to_glyph_func:LibCairo::UserScaledFontUnicodeToGlyphFuncT-instance-method","html_id":"user_font_face_get_unicode_to_glyph_func:LibCairo::UserScaledFontUnicodeToGlyphFuncT-instance-method","name":"user_font_face_get_unicode_to_glyph_func","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::UserScaledFontUnicodeToGlyphFuncT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L174","def":{"name":"user_font_face_get_unicode_to_glyph_func","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::UserScaledFontUnicodeToGlyphFuncT","visibility":"Public","body":"LibCairo.user_font_face_get_unicode_to_glyph_func(@font_face)"}},{"id":"weight:FontWeight-instance-method","html_id":"weight:FontWeight-instance-method","name":"weight","doc":"Gets the weight a toy font.\n\n###Returns\nThe weight value.","summary":"<p>Gets the weight a toy font.</p>","abstract":false,"args":[],"args_string":" : FontWeight","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_face.cr#L143","def":{"name":"weight","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FontWeight","visibility":"Public","body":"FontWeight.new((LibCairo.toy_font_face_get_weight(@font_face)).value)"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/FontOptions","path":"Cairo/FontOptions.html","kind":"class","full_name":"Cairo::FontOptions","name":"FontOptions","abstract":false,"superclass":{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/font_options.cr","line_number":9,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L9"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"The font options specify how fonts should be rendered.\nMost of the time the font options implied by a surface are just right and do not need any changes,\nbut for pixel-based targets tweaking font options may result in superior output on a particular display.","summary":"<p>The font options specify how fonts should be rendered.</p>","class_methods":[],"constructors":[{"id":"new(font_options:LibCairo::PFontOptionsT)-class-method","html_id":"new(font_options:LibCairo::PFontOptionsT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"font_options","doc":null,"default_value":"","external_name":"font_options","restriction":"LibCairo::PFontOptionsT"}],"args_string":"(font_options : LibCairo::PFontOptionsT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L21","def":{"name":"new","args":[{"name":"font_options","doc":null,"default_value":"","external_name":"font_options","restriction":"LibCairo::PFontOptionsT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(font_options)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Allocates a new font options object with all options initialized to default values.\n\n###Returns\nA newly allocated `FontOptions`. Free with `FontOptions#finalize`.\nThis function always returns a valid pointer; if memory cannot be allocated,\nthen a special error object is returned where all operations on the object do nothing.\nYou can check for this with `FontOptions#status`.","summary":"<p>Allocates a new font options object with all options initialized to default values.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L17","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"antialias:Antialias-instance-method","html_id":"antialias:Antialias-instance-method","name":"antialias","doc":"Gets the antialiasing mode for the font options object.\n\n###Returns\nThe antialiasing mode.","summary":"<p>Gets the antialiasing mode for the font options object.</p>","abstract":false,"args":[],"args_string":" : Antialias","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L82","def":{"name":"antialias","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Antialias","visibility":"Public","body":"Antialias.new((LibCairo.font_options_get_antialias(@font_options)).value)"}},{"id":"antialias=(antialias:Antialias)-instance-method","html_id":"antialias=(antialias:Antialias)-instance-method","name":"antialias=","doc":"Sets the antialiasing mode for the font options object.\nThis specifies the type of antialiasing to do when rendering text.\n\n###Parameters\n- **antialias** the new antialiasing mode","summary":"<p>Sets the antialiasing mode for the font options object.</p>","abstract":false,"args":[{"name":"antialias","doc":null,"default_value":"","external_name":"antialias","restriction":"Antialias"}],"args_string":"(antialias : Antialias)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L91","def":{"name":"antialias=","args":[{"name":"antialias","doc":null,"default_value":"","external_name":"antialias","restriction":"Antialias"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.font_options_set_antialias(@font_options, LibCairo::AntialiasT.new(antialias.value))\nself\n"}},{"id":"dup:FontOptions-instance-method","html_id":"dup:FontOptions-instance-method","name":"dup","doc":"Allocates a new font options object copying the option values from original.\n\n###Returns\nA newly allocated `FontOptions`. Free with `FontOptions#finalize`.\nThis function always returns a valid pointer; if memory cannot be allocated,\nthen a special error object is returned where all operations on the object do nothing.\nYou can check for this with `FontOptions#status`.","summary":"<p>Allocates a new font options object copying the option values from original.</p>","abstract":false,"args":[],"args_string":" : FontOptions","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L36","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FontOptions","visibility":"Public","body":"FontOptions.new(LibCairo.font_options_copy(@font_options))"}},{"id":"equals(other:FontOptions):Bool-instance-method","html_id":"equals(other:FontOptions):Bool-instance-method","name":"equals","doc":"Compares two font options objects for equality.\n\n###Parameters\n- **other** another `FontOptinos`\n\n###Returns\n`true` if all fields of the two font options objects match. Note that this function will return `false` if either object is in error.","summary":"<p>Compares two font options objects for equality.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"FontOptions"}],"args_string":"(other : FontOptions) : Bool","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L65","def":{"name":"equals","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"FontOptions"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(LibCairo.font_options_equal(@font_options, other.to_unsafe)) == 1"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destroys a `FontOptions` object created with `FontOptions#initialize` or `FontOptions#dup`.","summary":"<p>Destroys a <code><a href=\"../Cairo/FontOptions.html\">FontOptions</a></code> object created with <code>FontOptions#initialize</code> or <code><a href=\"../Cairo/FontOptions.html#dup:FontOptions-instance-method\">FontOptions#dup</a></code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L25","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.font_options_destroy(@font_options)"}},{"id":"hash:UInt64-instance-method","html_id":"hash:UInt64-instance-method","name":"hash","doc":"Compute a hash for the font options object;\nthis value will be useful when storing an object containing a `FontOptions` in a hash table.\n\n###Returns\nThe hash value for the font options object. The return value can be cast to a 32-bit type if a 32-bit hash value is needed.","summary":"<p>Compute a hash for the font options object; this value will be useful when storing an object containing a <code><a href=\"../Cairo/FontOptions.html\">FontOptions</a></code> in a hash table.</p>","abstract":false,"args":[],"args_string":" : UInt64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L74","def":{"name":"hash","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"LibCairo.font_options_hash(@font_options)"}},{"id":"hint_metrics:HintMetrics-instance-method","html_id":"hint_metrics:HintMetrics-instance-method","name":"hint_metrics","doc":"Gets the metrics hinting mode for the font options object.\nSee the documentation for `HintMetrics` for full details.\n\n###Returns\nThe metrics hinting mode for the font options object.","summary":"<p>Gets the metrics hinting mode for the font options object.</p>","abstract":false,"args":[],"args_string":" : HintMetrics","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L143","def":{"name":"hint_metrics","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HintMetrics","visibility":"Public","body":"HintMetrics.new((LibCairo.font_options_get_hint_metrics(@font_options)).value)"}},{"id":"hint_metrics=(hint_metrics:HintMetrics)-instance-method","html_id":"hint_metrics=(hint_metrics:HintMetrics)-instance-method","name":"hint_metrics=","doc":"Sets the metrics hinting mode for the font options object.\nThis controls whether metrics are quantized to integer values in device units.\nSee the documentation for `HintMetrics` for full details.\n\n###Parameters\n- **hint_metrics** the new metrics hinting mode","summary":"<p>Sets the metrics hinting mode for the font options object.</p>","abstract":false,"args":[{"name":"hint_metrics","doc":null,"default_value":"","external_name":"hint_metrics","restriction":"HintMetrics"}],"args_string":"(hint_metrics : HintMetrics)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L153","def":{"name":"hint_metrics=","args":[{"name":"hint_metrics","doc":null,"default_value":"","external_name":"hint_metrics","restriction":"HintMetrics"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.font_options_set_hint_metrics(@font_options, LibCairo::HintMetricsT.new(hint_metrics.value))\nself\n"}},{"id":"hint_style:HintStyle-instance-method","html_id":"hint_style:HintStyle-instance-method","name":"hint_style","doc":"Gets the hint style for font outlines for the font options object.\nSee the documentation for `HintStyle` for full details.\n\n###Returns\nThe hint style for the font options object.","summary":"<p>Gets the hint style for font outlines for the font options object.</p>","abstract":false,"args":[],"args_string":" : HintStyle","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L122","def":{"name":"hint_style","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HintStyle","visibility":"Public","body":"HintStyle.new((LibCairo.font_options_get_hint_style(@font_options)).value)"}},{"id":"hint_style=(hint_style:HintStyle)-instance-method","html_id":"hint_style=(hint_style:HintStyle)-instance-method","name":"hint_style=","doc":"Sets the hint style for font outlines for the font options object.\nThis controls whether to fit font outlines to the pixel grid, and if so,\nwhether to optimize for fidelity or contrast.\nSee the documentation for `HintStyle` for full details.\n\n###Parameters\n- **hint_style** the new hint style","summary":"<p>Sets the hint style for font outlines for the font options object.</p>","abstract":false,"args":[{"name":"hint_style","doc":null,"default_value":"","external_name":"hint_style","restriction":"HintStyle"}],"args_string":"(hint_style : HintStyle)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L133","def":{"name":"hint_style=","args":[{"name":"hint_style","doc":null,"default_value":"","external_name":"hint_style","restriction":"HintStyle"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.font_options_set_hint_style(@font_options, LibCairo::HintStyleT.new(hint_style.value))\nself\n"}},{"id":"merge(other:FontOptions)-instance-method","html_id":"merge(other:FontOptions)-instance-method","name":"merge","doc":"Merges non-default options from other into options, replacing existing values.\nThis operation can be thought of as somewhat similar to compositing other onto options with the operation of `Operator::Over`.\n\n###Parameters\n- **other** another `FontOptions`","summary":"<p>Merges non-default options from other into options, replacing existing values.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"FontOptions"}],"args_string":"(other : FontOptions)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L53","def":{"name":"merge","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"FontOptions"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.font_options_merge(@font_options, other.to_unsafe)\nself\n"}},{"id":"status:Status-instance-method","html_id":"status:Status-instance-method","name":"status","doc":"Checks whether an error has previously occurred for this font options object.\n\n###Returns\n`Status::Success` or `Status::NoMemory`.","summary":"<p>Checks whether an error has previously occurred for this font options object.</p>","abstract":false,"args":[],"args_string":" : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L44","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new(LibCairo.font_options_status(@font_options))"}},{"id":"subpixel_order:SubpixelOrder-instance-method","html_id":"subpixel_order:SubpixelOrder-instance-method","name":"subpixel_order","doc":"Gets the subpixel order for the font options object.\nSee the documentation for `SubpixelOrder` for full details.\n\n###Returns\nThe subpixel order for the font options object.","summary":"<p>Gets the subpixel order for the font options object.</p>","abstract":false,"args":[],"args_string":" : SubpixelOrder","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L101","def":{"name":"subpixel_order","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SubpixelOrder","visibility":"Public","body":"SubpixelOrder.new((LibCairo.font_options_get_subpixel_order(@font_options)).value)"}},{"id":"subpixel_order=(subpixel_order:SubpixelOrder)-instance-method","html_id":"subpixel_order=(subpixel_order:SubpixelOrder)-instance-method","name":"subpixel_order=","doc":"Sets the subpixel order for the font options object.\nThe subpixel order specifies the order of color elements within each pixel on the display device\nwhen rendering with an antialiasing mode of `Antialias::Subpixel`.\nSee the documentation for `SubpixelOrder` for full details.\n\n###Parameters\n- **subpixel_order** the new subpixel order","summary":"<p>Sets the subpixel order for the font options object.</p>","abstract":false,"args":[{"name":"subpixel_order","doc":null,"default_value":"","external_name":"subpixel_order","restriction":"SubpixelOrder"}],"args_string":"(subpixel_order : SubpixelOrder)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L112","def":{"name":"subpixel_order=","args":[{"name":"subpixel_order","doc":null,"default_value":"","external_name":"subpixel_order","restriction":"SubpixelOrder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.font_options_set_subpixel_order(@font_options, LibCairo::SubpixelOrderT.new(subpixel_order.value))\nself\n"}},{"id":"to_unsafe:LibCairo::PFontOptionsT-instance-method","html_id":"to_unsafe:LibCairo::PFontOptionsT-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PFontOptionsT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L182","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PFontOptionsT","visibility":"Public","body":"@font_options"}},{"id":"variations:String-instance-method","html_id":"variations:String-instance-method","name":"variations","doc":"Gets the OpenType font variations for the font options object.\nSee `FontOptions#variations`= for details about the string format.\n\n###Returns\nThe font variations for the font options object.\nThe returned string belongs to the options and must not be modified.\nIt is valid until either the font options object is destroyed or the font variations in this object\nis modified with `FontOptions#variations=`.","summary":"<p>Gets the OpenType font variations for the font options object.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L166","def":{"name":"variations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.new(LibCairo.font_options_get_variations(@font_options))"}},{"id":"variations=(variation:String)-instance-method","html_id":"variations=(variation:String)-instance-method","name":"variations=","doc":"Sets the OpenType font variations for the font options object.\nFont variations are specified as a string with a format that is similar to the CSS font-variation-settings.\nThe string contains a comma-separated list of axis assignments,\nwhich each assignment consists of a 4-character axis name and a value, separated by whitespace and optional equals sign.\n\n###Parameters\n- **variations** the new font variations","summary":"<p>Sets the OpenType font variations for the font options object.</p>","abstract":false,"args":[{"name":"variation","doc":null,"default_value":"","external_name":"variation","restriction":"String"}],"args_string":"(variation : String)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_options.cr#L177","def":{"name":"variations=","args":[{"name":"variation","doc":null,"default_value":"","external_name":"variation","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.font_options_set_variations(@font_options, variations.to_unsafe)\nself\n"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/FontSlant","path":"Cairo/FontSlant.html","kind":"enum","full_name":"Cairo::FontSlant","name":"FontSlant","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/font_slant.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_slant.cr#L3"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Normal","name":"Normal","value":"0","doc":"Upright font style.","summary":"<p>Upright font style.</p>"},{"id":"Italic","name":"Italic","value":"1","doc":"Italic font style.","summary":"<p>Italic font style.</p>"},{"id":"Oblique","name":"Oblique","value":"2","doc":"Oblique font style.","summary":"<p>Oblique font style.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Specifies variants of a font face based on their slant.","summary":"<p>Specifies variants of a font face based on their slant.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"italic?-instance-method","html_id":"italic?-instance-method","name":"italic?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_slant.cr#L8","def":{"name":"italic?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Italic"}},{"id":"normal?-instance-method","html_id":"normal?-instance-method","name":"normal?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_slant.cr#L5","def":{"name":"normal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Normal"}},{"id":"oblique?-instance-method","html_id":"oblique?-instance-method","name":"oblique?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_slant.cr#L11","def":{"name":"oblique?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Oblique"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/FontType","path":"Cairo/FontType.html","kind":"enum","full_name":"Cairo::FontType","name":"FontType","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/font_type.cr","line_number":21,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_type.cr#L21"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Toy","name":"Toy","value":"0","doc":"The font was created using cairo's toy font api.","summary":"<p>The font was created using cairo's toy font api.</p>"},{"id":"Ft","name":"Ft","value":"1","doc":"The font is of type FreeType.","summary":"<p>The font is of type FreeType.</p>"},{"id":"Win32","name":"Win32","value":"2","doc":"The font is of type Win32.","summary":"<p>The font is of type Win32.</p>"},{"id":"Quartz","name":"Quartz","value":"3","doc":"The font is of type Quartz","summary":"<p>The font is of type Quartz</p>"},{"id":"User","name":"User","value":"4","doc":"The font was create using cairo's user font api.","summary":"<p>The font was create using cairo's user font api.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"`FontType is used to describe the type of a given font face or scaled font.\nThe font types are also known as \"font backends\" within cairo.\n\nThe type of a font face is determined by the function used to create it,\nwhich will generally be of the form `FontFace#initialize`.\nThe font face type can be queried with `FontFace#type`.\n\nThe various `FontFace` functions can be used with a font face of any type.\n\nThe type of a scaled font is determined by the type of the font face passed to\n`FontFace#create_scaled_font`. The scaled font type can be queried with `scaledFont#type`.\n\nThe various `ScaledFont` functions can be used with scaled fonts of any type,\nbut some font backends also provide type-specific functions that must only be\ncalled with a scaled font of the appropriate type.\n\nThe behavior of calling a type-specific function with a scaled font of the wrong type is undefined.\n\nNew entries may be added in future versions.","summary":"<p>`FontType is used to describe the type of a given font face or scaled font.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"ft?-instance-method","html_id":"ft?-instance-method","name":"ft?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_type.cr#L26","def":{"name":"ft?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Ft"}},{"id":"quartz?-instance-method","html_id":"quartz?-instance-method","name":"quartz?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_type.cr#L32","def":{"name":"quartz?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Quartz"}},{"id":"toy?-instance-method","html_id":"toy?-instance-method","name":"toy?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_type.cr#L23","def":{"name":"toy?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Toy"}},{"id":"user?-instance-method","html_id":"user?-instance-method","name":"user?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_type.cr#L35","def":{"name":"user?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == User"}},{"id":"win32?-instance-method","html_id":"win32?-instance-method","name":"win32?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_type.cr#L29","def":{"name":"win32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Win32"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/FontWeight","path":"Cairo/FontWeight.html","kind":"enum","full_name":"Cairo::FontWeight","name":"FontWeight","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/font_weight.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_weight.cr#L3"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Normal","name":"Normal","value":"0","doc":"Normal font weight.","summary":"<p>Normal font weight.</p>"},{"id":"Bold","name":"Bold","value":"1","doc":"Bold font weight.","summary":"<p>Bold font weight.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Specifies variants of a font face based on their weight.","summary":"<p>Specifies variants of a font face based on their weight.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"bold?-instance-method","html_id":"bold?-instance-method","name":"bold?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_weight.cr#L8","def":{"name":"bold?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Bold"}},{"id":"normal?-instance-method","html_id":"normal?-instance-method","name":"normal?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/font_weight.cr#L5","def":{"name":"normal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Normal"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Format","path":"Cairo/Format.html","kind":"enum","full_name":"Cairo::Format","name":"Format","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/format.cr","line_number":6,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/format.cr#L6"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Invalid","name":"Invalid","value":"-1","doc":null,"summary":null},{"id":"ARGB32","name":"ARGB32","value":"0","doc":null,"summary":null},{"id":"RGB24","name":"RGB24","value":"1","doc":null,"summary":null},{"id":"A8","name":"A8","value":"2","doc":null,"summary":null},{"id":"A1","name":"A1","value":"3","doc":null,"summary":null},{"id":"RGB16_565","name":"RGB16_565","value":"4","doc":null,"summary":null},{"id":"RGB30","name":"RGB30","value":"5","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"a1?-instance-method","html_id":"a1?-instance-method","name":"a1?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/format.cr#L11","def":{"name":"a1?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == A1"}},{"id":"a8?-instance-method","html_id":"a8?-instance-method","name":"a8?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/format.cr#L10","def":{"name":"a8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == A8"}},{"id":"argb32?-instance-method","html_id":"argb32?-instance-method","name":"argb32?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/format.cr#L8","def":{"name":"argb32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ARGB32"}},{"id":"invalid?-instance-method","html_id":"invalid?-instance-method","name":"invalid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/format.cr#L7","def":{"name":"invalid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Invalid"}},{"id":"rgb16_565?-instance-method","html_id":"rgb16_565?-instance-method","name":"rgb16_565?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/format.cr#L12","def":{"name":"rgb16_565?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RGB16_565"}},{"id":"rgb24?-instance-method","html_id":"rgb24?-instance-method","name":"rgb24?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/format.cr#L9","def":{"name":"rgb24?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RGB24"}},{"id":"rgb30?-instance-method","html_id":"rgb30?-instance-method","name":"rgb30?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/format.cr#L13","def":{"name":"rgb30?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RGB30"}},{"id":"stride_for_width(width:Int32):Int32-instance-method","html_id":"stride_for_width(width:Int32):Int32-instance-method","name":"stride_for_width","doc":null,"summary":null,"abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"args_string":"(width : Int32) : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/format.cr#L15","def":{"name":"stride_for_width","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"LibCairo.format_stride_for_width(LibCairo::FormatT.new(self.value), width)"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Glyph","path":"Cairo/Glyph.html","kind":"struct","full_name":"Cairo::Glyph","name":"Glyph","abstract":false,"superclass":{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/glyph.cr","line_number":7,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph.cr#L7"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Wrapper for LibCairo::GlyphT.","summary":"<p>Wrapper for LibCairo::GlyphT.</p>","class_methods":[],"constructors":[{"id":"new(index:UInt64,x:Float64,y:Float64)-class-method","html_id":"new(index:UInt64,x:Float64,y:Float64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"UInt64"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"args_string":"(index : UInt64, x : Float64, y : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph.cr#L15","def":{"name":"new","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"UInt64"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(index, x, y)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(glyph:LibCairo::GlyphT)-class-method","html_id":"new(glyph:LibCairo::GlyphT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"glyph","doc":null,"default_value":"","external_name":"glyph","restriction":"LibCairo::GlyphT"}],"args_string":"(glyph : LibCairo::GlyphT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph.cr#L22","def":{"name":"new","args":[{"name":"glyph","doc":null,"default_value":"","external_name":"glyph","restriction":"LibCairo::GlyphT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(glyph)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(glyph:LibCairo::PGlyphT)-class-method","html_id":"new(glyph:LibCairo::PGlyphT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"glyph","doc":null,"default_value":"","external_name":"glyph","restriction":"LibCairo::PGlyphT"}],"args_string":"(glyph : LibCairo::PGlyphT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph.cr#L25","def":{"name":"new","args":[{"name":"glyph","doc":null,"default_value":"","external_name":"glyph","restriction":"LibCairo::PGlyphT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(glyph)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph.cr#L8","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"index:UInt64-instance-method","html_id":"index:UInt64-instance-method","name":"index","doc":"Glyph index in the font. The exact interpretation of the glyph index depends on the font technology being used.","summary":"<p>Glyph index in the font.</p>","abstract":false,"args":[],"args_string":" : UInt64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph.cr#L31","def":{"name":"index","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@glyph.index"}},{"id":"index=(index:UInt64)-instance-method","html_id":"index=(index:UInt64)-instance-method","name":"index=","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"UInt64"}],"args_string":"(index : UInt64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph.cr#L35","def":{"name":"index=","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@glyph.index = index"}},{"id":"to_cairo_glyph:LibCairo::GlyphT-instance-method","html_id":"to_cairo_glyph:LibCairo::GlyphT-instance-method","name":"to_cairo_glyph","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::GlyphT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph.cr#L57","def":{"name":"to_cairo_glyph","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::GlyphT","visibility":"Public","body":"@glyph"}},{"id":"to_unsafe:LibCairo::PGlyphT-instance-method","html_id":"to_unsafe:LibCairo::PGlyphT-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PGlyphT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph.cr#L61","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PGlyphT","visibility":"Public","body":"pointerof(@glyph)"}},{"id":"x:Float64-instance-method","html_id":"x:Float64-instance-method","name":"x","doc":"The offset in the X direction between the origin used for drawing or measuring the string and the origin of this glyph.","summary":"<p>The offset in the X direction between the origin used for drawing or measuring the string and the origin of this glyph.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph.cr#L40","def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@glyph.x"}},{"id":"x=(x:Float64)-instance-method","html_id":"x=(x:Float64)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"}],"args_string":"(x : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph.cr#L44","def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@glyph.x = x"}},{"id":"y:Float64-instance-method","html_id":"y:Float64-instance-method","name":"y","doc":"The offset in the Y direction between the origin used for drawing or measuring the string and the origin of this glyph.","summary":"<p>The offset in the Y direction between the origin used for drawing or measuring the string and the origin of this glyph.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph.cr#L49","def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@glyph.y"}},{"id":"y=(y:Float64)-instance-method","html_id":"y=(y:Float64)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"args_string":"(y : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph.cr#L53","def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@glyph.y = y"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/GlyphArray","path":"Cairo/GlyphArray.html","kind":"class","full_name":"Cairo::GlyphArray","name":"GlyphArray","abstract":false,"superclass":{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"cairo/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"cairo/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"cairo/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/glyph_array.cr","line_number":7,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph_array.cr#L7"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"cairo/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(glyphs:LibCairo::PGlyphT,num_glyphs:Int32)-class-method","html_id":"new(glyphs:LibCairo::PGlyphT,num_glyphs:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"glyphs","doc":null,"default_value":"","external_name":"glyphs","restriction":"LibCairo::PGlyphT"},{"name":"num_glyphs","doc":null,"default_value":"","external_name":"num_glyphs","restriction":"Int32"}],"args_string":"(glyphs : LibCairo::PGlyphT, num_glyphs : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph_array.cr#L16","def":{"name":"new","args":[{"name":"glyphs","doc":null,"default_value":"","external_name":"glyphs","restriction":"LibCairo::PGlyphT"},{"name":"num_glyphs","doc":null,"default_value":"","external_name":"num_glyphs","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(glyphs, num_glyphs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(num_glyphs:Int)-class-method","html_id":"new(num_glyphs:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"num_glyphs","doc":null,"default_value":"","external_name":"num_glyphs","restriction":"Int"}],"args_string":"(num_glyphs : Int)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph_array.cr#L10","def":{"name":"new","args":[{"name":"num_glyphs","doc":null,"default_value":"","external_name":"num_glyphs","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(num_glyphs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[]=(index:Int,glyph:Glyph)-instance-method","html_id":"[]=(index:Int,glyph:Glyph)-instance-method","name":"[]=","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"glyph","doc":null,"default_value":"","external_name":"glyph","restriction":"Glyph"}],"args_string":"(index : Int, glyph : Glyph)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph_array.cr#L39","def":{"name":"[]=","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"glyph","doc":null,"default_value":"","external_name":"glyph","restriction":"Glyph"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_index_out_of_bounds(index)\n(@glyphs + index).value = glyph.to_unsafe.value\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph_array.cr#L24","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.glyph_free(@glyphs)\n@num_glyphs = 0\n"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":"Returns the number of elements in this container.","summary":"<p>Returns the number of elements in this container.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph_array.cr#L30","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@num_glyphs"}},{"id":"to_unsafe:LibCairo::PGlyphT-instance-method","html_id":"to_unsafe:LibCairo::PGlyphT-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PGlyphT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph_array.cr#L44","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PGlyphT","visibility":"Public","body":"@glyphs"}},{"id":"unsafe_fetch(index:Int)-instance-method","html_id":"unsafe_fetch(index:Int)-instance-method","name":"unsafe_fetch","doc":"Returns the element at the given *index*, without doing any bounds check.\n\n`Indexable` makes sure to invoke this method with *index* in `0...size`,\nso converting negative indices to positive ones is not needed here.\n\nClients never invoke this method directly. Instead, they access\nelements with `#[](index)` and `#[]?(index)`.\n\nThis method should only be directly invoked if you are absolutely\nsure the index is in bounds, to avoid a bounds check for a small boost\nof performance.","summary":"<p>Returns the element at the given <em>index</em>, without doing any bounds check.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/glyph_array.cr#L35","def":{"name":"unsafe_fetch","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@glyphs + index).value"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/HintMetrics","path":"Cairo/HintMetrics.html","kind":"enum","full_name":"Cairo::HintMetrics","name":"HintMetrics","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/hint_metrics.cr","line_number":6,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/hint_metrics.cr#L6"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Default","name":"Default","value":"0","doc":"Hint metrics in the default manner for the font backend and target device.","summary":"<p>Hint metrics in the default manner for the font backend and target device.</p>"},{"id":"Off","name":"Off","value":"1","doc":"Do not hint font metrics.","summary":"<p>Do not hint font metrics.</p>"},{"id":"On","name":"On","value":"2","doc":"Hint font metrics.","summary":"<p>Hint font metrics.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Specifies whether to hint font metrics; hinting font metrics means quantizing\nthem so that they are integer values in device space. Doing this improves the\nconsistency of letter and line spacing,\nhowever it also means that text will be laid out differently at different zoom factors.","summary":"<p>Specifies whether to hint font metrics; hinting font metrics means quantizing them so that they are integer values in device space.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"default?-instance-method","html_id":"default?-instance-method","name":"default?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/hint_metrics.cr#L8","def":{"name":"default?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Default"}},{"id":"off?-instance-method","html_id":"off?-instance-method","name":"off?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/hint_metrics.cr#L11","def":{"name":"off?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Off"}},{"id":"on?-instance-method","html_id":"on?-instance-method","name":"on?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/hint_metrics.cr#L14","def":{"name":"on?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == On"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/HintStyle","path":"Cairo/HintStyle.html","kind":"enum","full_name":"Cairo::HintStyle","name":"HintStyle","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/hint_style.cr","line_number":8,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/hint_style.cr#L8"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Default","name":"Default","value":"0","doc":"Use the default hint style for font backend and target device.","summary":"<p>Use the default hint style for font backend and target device.</p>"},{"id":"None","name":"None","value":"1","doc":"Do not hint outlines.","summary":"<p>Do not hint outlines.</p>"},{"id":"Slight","name":"Slight","value":"2","doc":"Hint outlines slightly to improve contrast while retaining good fidelity to the original shapes.","summary":"<p>Hint outlines slightly to improve contrast while retaining good fidelity to the original shapes.</p>"},{"id":"Medium","name":"Medium","value":"3","doc":"Hint outlines with medium strength giving a compromise between fidelity to the original shapes and contrast.","summary":"<p>Hint outlines with medium strength giving a compromise between fidelity to the original shapes and contrast.</p>"},{"id":"Full","name":"Full","value":"4","doc":"Hint outlines to maximize contrast.","summary":"<p>Hint outlines to maximize contrast.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Specifies the type of hinting to do on font outlines.\nHinting is the process of fitting outlines to the pixel grid in order to improve the appearance of the result.\nSince hinting outlines involves distorting them, it also reduces the faithfulness to the original outline shapes.\nNot all of the outline hinting styles are supported by all font backends.\n\nNew entries may be added in future versions.","summary":"<p>Specifies the type of hinting to do on font outlines.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"default?-instance-method","html_id":"default?-instance-method","name":"default?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/hint_style.cr#L10","def":{"name":"default?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Default"}},{"id":"full?-instance-method","html_id":"full?-instance-method","name":"full?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/hint_style.cr#L22","def":{"name":"full?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Full"}},{"id":"medium?-instance-method","html_id":"medium?-instance-method","name":"medium?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/hint_style.cr#L19","def":{"name":"medium?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Medium"}},{"id":"none?-instance-method","html_id":"none?-instance-method","name":"none?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/hint_style.cr#L13","def":{"name":"none?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == None"}},{"id":"slight?-instance-method","html_id":"slight?-instance-method","name":"slight?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/hint_style.cr#L16","def":{"name":"slight?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Slight"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/LineCap","path":"Cairo/LineCap.html","kind":"enum","full_name":"Cairo::LineCap","name":"LineCap","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/line_cap.cr","line_number":5,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/line_cap.cr#L5"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Butt","name":"Butt","value":"0","doc":"Start(stop) the line exactly at the start(end) point.","summary":"<p>Start(stop) the line exactly at the start(end) point.</p>"},{"id":"Round","name":"Round","value":"1","doc":"Use a round ending, the center of the circle is the end.","summary":"<p>Use a round ending, the center of the circle is the end.</p>"},{"id":"Square","name":"Square","value":"2","doc":"Use squared ending, the center of the square is the end.","summary":"<p>Use squared ending, the center of the square is the end.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Specifies how to render the endpoints of the path when stroking.\n\nThe default line cap style is `LineCap::Butt`.","summary":"<p>Specifies how to render the endpoints of the path when stroking.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"butt?-instance-method","html_id":"butt?-instance-method","name":"butt?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/line_cap.cr#L7","def":{"name":"butt?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Butt"}},{"id":"round?-instance-method","html_id":"round?-instance-method","name":"round?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/line_cap.cr#L10","def":{"name":"round?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Round"}},{"id":"square?-instance-method","html_id":"square?-instance-method","name":"square?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/line_cap.cr#L13","def":{"name":"square?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Square"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/LineJoin","path":"Cairo/LineJoin.html","kind":"enum","full_name":"Cairo::LineJoin","name":"LineJoin","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/line_join.cr","line_number":5,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/line_join.cr#L5"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Miter","name":"Miter","value":"0","doc":"Use a sharp (angled) corner, see `Context#miter_limit=(limit)`.","summary":"<p>Use a sharp (angled) corner, see <code><a href=\"../Cairo/Context.html#miter_limit=(limit:Float64)-instance-method\">Context#miter_limit=(limit)</a></code>.</p>"},{"id":"Round","name":"Round","value":"1","doc":"Use a rounded join, the center of the circle is the joint point.","summary":"<p>Use a rounded join, the center of the circle is the joint point.</p>"},{"id":"Bevel","name":"Bevel","value":"2","doc":"Use a cut-off join, the join is cut off at half the line width from the joint point.","summary":"<p>Use a cut-off join, the join is cut off at half the line width from the joint point.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Specifies how to render the junction of two lines when stroking.\n\nThe default line join style is `LineJoin::Miter`.","summary":"<p>Specifies how to render the junction of two lines when stroking.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"bevel?-instance-method","html_id":"bevel?-instance-method","name":"bevel?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/line_join.cr#L13","def":{"name":"bevel?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Bevel"}},{"id":"miter?-instance-method","html_id":"miter?-instance-method","name":"miter?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/line_join.cr#L7","def":{"name":"miter?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Miter"}},{"id":"round?-instance-method","html_id":"round?-instance-method","name":"round?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/line_join.cr#L10","def":{"name":"round?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Round"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Matrix","path":"Cairo/Matrix.html","kind":"struct","full_name":"Cairo::Matrix","name":"Matrix","abstract":false,"superclass":{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/matrix.cr","line_number":7,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L7"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Wrapper for LibCairo::MatrixT","summary":"<p>Wrapper for LibCairo::MatrixT</p>","class_methods":[],"constructors":[{"id":"new(xx:Float64,yx:Float64,xy:Float64,yy:Float64,x0:Float64,y0:Float64)-class-method","html_id":"new(xx:Float64,yx:Float64,xy:Float64,yy:Float64,x0:Float64,y0:Float64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"xx","doc":null,"default_value":"","external_name":"xx","restriction":"Float64"},{"name":"yx","doc":null,"default_value":"","external_name":"yx","restriction":"Float64"},{"name":"xy","doc":null,"default_value":"","external_name":"xy","restriction":"Float64"},{"name":"yy","doc":null,"default_value":"","external_name":"yy","restriction":"Float64"},{"name":"x0","doc":null,"default_value":"","external_name":"x0","restriction":"Float64"},{"name":"y0","doc":null,"default_value":"","external_name":"y0","restriction":"Float64"}],"args_string":"(xx : Float64, yx : Float64, xy : Float64, yy : Float64, x0 : Float64, y0 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L15","def":{"name":"new","args":[{"name":"xx","doc":null,"default_value":"","external_name":"xx","restriction":"Float64"},{"name":"yx","doc":null,"default_value":"","external_name":"yx","restriction":"Float64"},{"name":"xy","doc":null,"default_value":"","external_name":"xy","restriction":"Float64"},{"name":"yy","doc":null,"default_value":"","external_name":"yy","restriction":"Float64"},{"name":"x0","doc":null,"default_value":"","external_name":"x0","restriction":"Float64"},{"name":"y0","doc":null,"default_value":"","external_name":"y0","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(xx, yx, xy, yy, x0, y0)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(m:LibCairo::MatrixT)-class-method","html_id":"new(m:LibCairo::MatrixT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"LibCairo::MatrixT"}],"args_string":"(m : LibCairo::MatrixT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L12","def":{"name":"new","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"LibCairo::MatrixT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(m)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L8","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"init(xx:Float64,yx:Float64,xy:Float64,yy:Float64,x0:Float64,y0:Float64)-instance-method","html_id":"init(xx:Float64,yx:Float64,xy:Float64,yy:Float64,x0:Float64,y0:Float64)-instance-method","name":"init","doc":null,"summary":null,"abstract":false,"args":[{"name":"xx","doc":null,"default_value":"","external_name":"xx","restriction":"Float64"},{"name":"yx","doc":null,"default_value":"","external_name":"yx","restriction":"Float64"},{"name":"xy","doc":null,"default_value":"","external_name":"xy","restriction":"Float64"},{"name":"yy","doc":null,"default_value":"","external_name":"yy","restriction":"Float64"},{"name":"x0","doc":null,"default_value":"","external_name":"x0","restriction":"Float64"},{"name":"y0","doc":null,"default_value":"","external_name":"y0","restriction":"Float64"}],"args_string":"(xx : Float64, yx : Float64, xy : Float64, yy : Float64, x0 : Float64, y0 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L75","def":{"name":"init","args":[{"name":"xx","doc":null,"default_value":"","external_name":"xx","restriction":"Float64"},{"name":"yx","doc":null,"default_value":"","external_name":"yx","restriction":"Float64"},{"name":"xy","doc":null,"default_value":"","external_name":"xy","restriction":"Float64"},{"name":"yy","doc":null,"default_value":"","external_name":"yy","restriction":"Float64"},{"name":"x0","doc":null,"default_value":"","external_name":"x0","restriction":"Float64"},{"name":"y0","doc":null,"default_value":"","external_name":"y0","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.matrix_init(to_unsafe, xx, yx, xy, yy, x0, y0)\nself\n"}},{"id":"init_identity-instance-method","html_id":"init_identity-instance-method","name":"init_identity","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L80","def":{"name":"init_identity","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.matrix_init_identity(to_unsafe)\nself\n"}},{"id":"init_rotate(radians:Float64)-instance-method","html_id":"init_rotate(radians:Float64)-instance-method","name":"init_rotate","doc":null,"summary":null,"abstract":false,"args":[{"name":"radians","doc":null,"default_value":"","external_name":"radians","restriction":"Float64"}],"args_string":"(radians : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L95","def":{"name":"init_rotate","args":[{"name":"radians","doc":null,"default_value":"","external_name":"radians","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.matrix_init_rotate(to_unsafe, radians)\nself\n"}},{"id":"init_scale(sx:Float64,sy:Float64)-instance-method","html_id":"init_scale(sx:Float64,sy:Float64)-instance-method","name":"init_scale","doc":null,"summary":null,"abstract":false,"args":[{"name":"sx","doc":null,"default_value":"","external_name":"sx","restriction":"Float64"},{"name":"sy","doc":null,"default_value":"","external_name":"sy","restriction":"Float64"}],"args_string":"(sx : Float64, sy : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L90","def":{"name":"init_scale","args":[{"name":"sx","doc":null,"default_value":"","external_name":"sx","restriction":"Float64"},{"name":"sy","doc":null,"default_value":"","external_name":"sy","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.matrix_init_scale(to_unsafe, sx, sy)\nself\n"}},{"id":"init_translate(tx:Float64,ty:Float64)-instance-method","html_id":"init_translate(tx:Float64,ty:Float64)-instance-method","name":"init_translate","doc":null,"summary":null,"abstract":false,"args":[{"name":"tx","doc":null,"default_value":"","external_name":"tx","restriction":"Float64"},{"name":"ty","doc":null,"default_value":"","external_name":"ty","restriction":"Float64"}],"args_string":"(tx : Float64, ty : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L85","def":{"name":"init_translate","args":[{"name":"tx","doc":null,"default_value":"","external_name":"tx","restriction":"Float64"},{"name":"ty","doc":null,"default_value":"","external_name":"ty","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.matrix_init_translate(to_unsafe, tx, ty)\nself\n"}},{"id":"invert:Status-instance-method","html_id":"invert:Status-instance-method","name":"invert","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L115","def":{"name":"invert","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.matrix_invert(to_unsafe)).value)"}},{"id":"multiply(a:Matrix,b:Matrix)-instance-method","html_id":"multiply(a:Matrix,b:Matrix)-instance-method","name":"multiply","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Matrix"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Matrix"}],"args_string":"(a : Matrix, b : Matrix)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L119","def":{"name":"multiply","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Matrix"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Matrix"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.matrix_multiply(to_unsafe, a.to_unsafe, b.to_unsafe)\nself\n"}},{"id":"rotate(radians:Float64)-instance-method","html_id":"rotate(radians:Float64)-instance-method","name":"rotate","doc":null,"summary":null,"abstract":false,"args":[{"name":"radians","doc":null,"default_value":"","external_name":"radians","restriction":"Float64"}],"args_string":"(radians : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L110","def":{"name":"rotate","args":[{"name":"radians","doc":null,"default_value":"","external_name":"radians","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.matrix_rotate(to_unsafe, radians)\nself\n"}},{"id":"scale(sx:Float64,sy:Float64)-instance-method","html_id":"scale(sx:Float64,sy:Float64)-instance-method","name":"scale","doc":null,"summary":null,"abstract":false,"args":[{"name":"sx","doc":null,"default_value":"","external_name":"sx","restriction":"Float64"},{"name":"sy","doc":null,"default_value":"","external_name":"sy","restriction":"Float64"}],"args_string":"(sx : Float64, sy : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L105","def":{"name":"scale","args":[{"name":"sx","doc":null,"default_value":"","external_name":"sx","restriction":"Float64"},{"name":"sy","doc":null,"default_value":"","external_name":"sy","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.matrix_scale(to_unsafe, sx, sy)\nself\n"}},{"id":"to_cairo_matrix:LibCairo::MatrixT-instance-method","html_id":"to_cairo_matrix:LibCairo::MatrixT-instance-method","name":"to_cairo_matrix","doc":"Returns the underlieing structure.","summary":"<p>Returns the underlieing structure.</p>","abstract":false,"args":[],"args_string":" : LibCairo::MatrixT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L141","def":{"name":"to_cairo_matrix","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::MatrixT","visibility":"Public","body":"@m"}},{"id":"to_unsafe:LibCairo::PMatrixT-instance-method","html_id":"to_unsafe:LibCairo::PMatrixT-instance-method","name":"to_unsafe","doc":"Returns the pointer of the underlieing structure.","summary":"<p>Returns the pointer of the underlieing structure.</p>","abstract":false,"args":[],"args_string":" : LibCairo::PMatrixT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L146","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PMatrixT","visibility":"Public","body":"pointerof(@m)"}},{"id":"transform_distance(d:Point):Point-instance-method","html_id":"transform_distance(d:Point):Point-instance-method","name":"transform_distance","doc":null,"summary":null,"abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Point"}],"args_string":"(d : Point) : Point","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L124","def":{"name":"transform_distance","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point","visibility":"Public","body":"dx = d.x\ndy = d.y\nLibCairo.matrix_transform_distance(to_unsafe, pointerof(dx), pointerof(dy))\nPoint.new(dx, dy)\n"}},{"id":"transform_point(p:Point):Point-instance-method","html_id":"transform_point(p:Point):Point-instance-method","name":"transform_point","doc":null,"summary":null,"abstract":false,"args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"args_string":"(p : Point) : Point","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L132","def":{"name":"transform_point","args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point","visibility":"Public","body":"x = p.x\ny = p.y\nLibCairo.matrix_transform_point(to_unsafe, pointerof(x), pointerof(y))\nPoint.new(x, y)\n"}},{"id":"translate(tx:Float64,ty:Float64)-instance-method","html_id":"translate(tx:Float64,ty:Float64)-instance-method","name":"translate","doc":null,"summary":null,"abstract":false,"args":[{"name":"tx","doc":null,"default_value":"","external_name":"tx","restriction":"Float64"},{"name":"ty","doc":null,"default_value":"","external_name":"ty","restriction":"Float64"}],"args_string":"(tx : Float64, ty : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L100","def":{"name":"translate","args":[{"name":"tx","doc":null,"default_value":"","external_name":"tx","restriction":"Float64"},{"name":"ty","doc":null,"default_value":"","external_name":"ty","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.matrix_translate(to_unsafe, tx, ty)\nself\n"}},{"id":"x0:Float64-instance-method","html_id":"x0:Float64-instance-method","name":"x0","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L59","def":{"name":"x0","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@m.x0"}},{"id":"x0=(x0:Float64)-instance-method","html_id":"x0=(x0:Float64)-instance-method","name":"x0=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x0","doc":null,"default_value":"","external_name":"x0","restriction":"Float64"}],"args_string":"(x0 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L63","def":{"name":"x0=","args":[{"name":"x0","doc":null,"default_value":"","external_name":"x0","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@m.x0 = x0"}},{"id":"xx:Float64-instance-method","html_id":"xx:Float64-instance-method","name":"xx","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L27","def":{"name":"xx","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@m.xx"}},{"id":"xx=(xx:Float64)-instance-method","html_id":"xx=(xx:Float64)-instance-method","name":"xx=","doc":null,"summary":null,"abstract":false,"args":[{"name":"xx","doc":null,"default_value":"","external_name":"xx","restriction":"Float64"}],"args_string":"(xx : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L31","def":{"name":"xx=","args":[{"name":"xx","doc":null,"default_value":"","external_name":"xx","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@m.xx = xx"}},{"id":"xy:Float64-instance-method","html_id":"xy:Float64-instance-method","name":"xy","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L43","def":{"name":"xy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@m.xy"}},{"id":"xy=(xy:Float64)-instance-method","html_id":"xy=(xy:Float64)-instance-method","name":"xy=","doc":null,"summary":null,"abstract":false,"args":[{"name":"xy","doc":null,"default_value":"","external_name":"xy","restriction":"Float64"}],"args_string":"(xy : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L47","def":{"name":"xy=","args":[{"name":"xy","doc":null,"default_value":"","external_name":"xy","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@m.xy = xy"}},{"id":"y0:Float64-instance-method","html_id":"y0:Float64-instance-method","name":"y0","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L67","def":{"name":"y0","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@m.y0"}},{"id":"y0=(y0:Float64)-instance-method","html_id":"y0=(y0:Float64)-instance-method","name":"y0=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y0","doc":null,"default_value":"","external_name":"y0","restriction":"Float64"}],"args_string":"(y0 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L71","def":{"name":"y0=","args":[{"name":"y0","doc":null,"default_value":"","external_name":"y0","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@m.y0 = y0"}},{"id":"yx:Float64-instance-method","html_id":"yx:Float64-instance-method","name":"yx","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L35","def":{"name":"yx","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@m.yx"}},{"id":"yx=(yx:Float64)-instance-method","html_id":"yx=(yx:Float64)-instance-method","name":"yx=","doc":null,"summary":null,"abstract":false,"args":[{"name":"yx","doc":null,"default_value":"","external_name":"yx","restriction":"Float64"}],"args_string":"(yx : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L39","def":{"name":"yx=","args":[{"name":"yx","doc":null,"default_value":"","external_name":"yx","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@m.yx = yx"}},{"id":"yy:Float64-instance-method","html_id":"yy:Float64-instance-method","name":"yy","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L51","def":{"name":"yy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@m.yy"}},{"id":"yy=(yy:Float64)-instance-method","html_id":"yy=(yy:Float64)-instance-method","name":"yy=","doc":null,"summary":null,"abstract":false,"args":[{"name":"yy","doc":null,"default_value":"","external_name":"yy","restriction":"Float64"}],"args_string":"(yy : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/matrix.cr#L55","def":{"name":"yy=","args":[{"name":"yy","doc":null,"default_value":"","external_name":"yy","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@m.yy = yy"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Operator","path":"Cairo/Operator.html","kind":"enum","full_name":"Cairo::Operator","name":"Operator","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/operator.cr","line_number":13,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L13"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Clear","name":"Clear","value":"0","doc":"Clear destination layer (bounded).","summary":"<p>Clear destination layer (bounded).</p>"},{"id":"Source","name":"Source","value":"1","doc":"Replace destination layer (bounded).","summary":"<p>Replace destination layer (bounded).</p>"},{"id":"Over","name":"Over","value":"2","doc":"Draw source layer on top of destination layer.","summary":"<p>Draw source layer on top of destination layer.</p>"},{"id":"In","name":"In","value":"3","doc":"Draw source where there was destination content (unbounded).","summary":"<p>Draw source where there was destination content (unbounded).</p>"},{"id":"Out","name":"Out","value":"4","doc":"Draw source where there was no destination content (unbounded).","summary":"<p>Draw source where there was no destination content (unbounded).</p>"},{"id":"Atop","name":"Atop","value":"5","doc":"Draw source on top of destination content and only there.","summary":"<p>Draw source on top of destination content and only there.</p>"},{"id":"Dest","name":"Dest","value":"6","doc":"Ignore the source.","summary":"<p>Ignore the source.</p>"},{"id":"DestOver","name":"DestOver","value":"7","doc":"Draw destination on top of source.","summary":"<p>Draw destination on top of source.</p>"},{"id":"DestIn","name":"DestIn","value":"8","doc":"Leave destination only where there was source content (unbounded).","summary":"<p>Leave destination only where there was source content (unbounded).</p>"},{"id":"DestOut","name":"DestOut","value":"9","doc":"Leave destination only where there was no source content.","summary":"<p>Leave destination only where there was no source content.</p>"},{"id":"DestAtop","name":"DestAtop","value":"10","doc":"Leave destination on top of source content and only there (unbounded).","summary":"<p>Leave destination on top of source content and only there (unbounded).</p>"},{"id":"Xor","name":"Xor","value":"11","doc":"Source and destination are shown where there is only one of them.","summary":"<p>Source and destination are shown where there is only one of them.</p>"},{"id":"Add","name":"Add","value":"12","doc":"Source and destination layers are accumulated.","summary":"<p>Source and destination layers are accumulated.</p>"},{"id":"Saturate","name":"Saturate","value":"13","doc":"Like over, but assuming source and dest are disjoint geometries.","summary":"<p>Like over, but assuming source and dest are disjoint geometries.</p>"},{"id":"Multiply","name":"Multiply","value":"14","doc":"Source and destination layers are multiplied. This causes the result to be at least as dark as the darker inputs.","summary":"<p>Source and destination layers are multiplied.</p>"},{"id":"Screen","name":"Screen","value":"15","doc":"Source and destination are complemented and multiplied. This causes the result to be at least as light as the lighter inputs.","summary":"<p>Source and destination are complemented and multiplied.</p>"},{"id":"Overlay","name":"Overlay","value":"16","doc":"Multiplies or screens, depending on the lightness of the destination color.","summary":"<p>Multiplies or screens, depending on the lightness of the destination color.</p>"},{"id":"Darken","name":"Darken","value":"17","doc":"Replaces the destination with the source if it is darker, otherwise keeps the source.","summary":"<p>Replaces the destination with the source if it is darker, otherwise keeps the source.</p>"},{"id":"Lighten","name":"Lighten","value":"18","doc":"Replaces the destination with the source if it is lighter, otherwise keeps the source.","summary":"<p>Replaces the destination with the source if it is lighter, otherwise keeps the source.</p>"},{"id":"ColorDodge","name":"ColorDodge","value":"19","doc":"Brightens the destination color to reflect the source color.","summary":"<p>Brightens the destination color to reflect the source color.</p>"},{"id":"ColorBurn","name":"ColorBurn","value":"20","doc":"Darkens the destination color to reflect the source color.","summary":"<p>Darkens the destination color to reflect the source color.</p>"},{"id":"HardLight","name":"HardLight","value":"21","doc":"Multiplies or screens, dependent on source color.","summary":"<p>Multiplies or screens, dependent on source color.</p>"},{"id":"SoftLight","name":"SoftLight","value":"22","doc":"Darkens or lightens, dependent on source color.","summary":"<p>Darkens or lightens, dependent on source color.</p>"},{"id":"Difference","name":"Difference","value":"23","doc":"Takes the difference of the source and destination color.","summary":"<p>Takes the difference of the source and destination color.</p>"},{"id":"Exclusion","name":"Exclusion","value":"24","doc":"Produces an effect similar to difference, but with lower contrast.","summary":"<p>Produces an effect similar to difference, but with lower contrast.</p>"},{"id":"HslHue","name":"HslHue","value":"25","doc":"Creates a color with the hue of the source and the saturation and luminosity of the target.","summary":"<p>Creates a color with the hue of the source and the saturation and luminosity of the target.</p>"},{"id":"HslSaturation","name":"HslSaturation","value":"26","doc":"Creates a color with the saturation of the source and the hue and luminosity of the target.\nPainting with this mode onto a gray area produces no change.","summary":"<p>Creates a color with the saturation of the source and the hue and luminosity of the target.</p>"},{"id":"HslColor","name":"HslColor","value":"27","doc":"Creates a color with the hue and saturation of the source and the luminosity of the target.\nThis preserves the gray levels of the target and is useful for coloring monochrome images or tinting color images.","summary":"<p>Creates a color with the hue and saturation of the source and the luminosity of the target.</p>"},{"id":"HslLuminosity","name":"HslLuminosity","value":"28","doc":"Creates a color with the luminosity of the source and the hue and saturation of the target.\nThis produces an inverse effect to `Operator::HslColor`.","summary":"<p>Creates a color with the luminosity of the source and the hue and saturation of the target.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"`Operator` is used to set the compositing operator for all cairo drawing operations.\n\nThe default operator is `Operator::Over`.\n\nThe operators marked as unbounded modify their destination even outside of the mask layer\n(that is, their effect is not bound by the mask layer). However, their effect can still be limited by way of clipping.\n\nTo keep things simple, the operator descriptions here document the behavior for when both source and destination are either fully transparent\nor fully opaque. The actual implementation works for translucent layers too.\nFor a more detailed explanation of the effects of each operator, including the mathematical definitions,\nsee [https://cairographics.org/operators/](https://cairographics.org/operators/).","summary":"<p><code><a href=\"../Cairo/Operator.html\">Operator</a></code> is used to set the compositing operator for all cairo drawing operations.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"add?-instance-method","html_id":"add?-instance-method","name":"add?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L51","def":{"name":"add?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Add"}},{"id":"atop?-instance-method","html_id":"atop?-instance-method","name":"atop?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L30","def":{"name":"atop?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Atop"}},{"id":"clear?-instance-method","html_id":"clear?-instance-method","name":"clear?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L15","def":{"name":"clear?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Clear"}},{"id":"color_burn?-instance-method","html_id":"color_burn?-instance-method","name":"color_burn?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L75","def":{"name":"color_burn?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ColorBurn"}},{"id":"color_dodge?-instance-method","html_id":"color_dodge?-instance-method","name":"color_dodge?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L72","def":{"name":"color_dodge?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ColorDodge"}},{"id":"darken?-instance-method","html_id":"darken?-instance-method","name":"darken?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L66","def":{"name":"darken?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Darken"}},{"id":"dest?-instance-method","html_id":"dest?-instance-method","name":"dest?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L33","def":{"name":"dest?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Dest"}},{"id":"dest_atop?-instance-method","html_id":"dest_atop?-instance-method","name":"dest_atop?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L45","def":{"name":"dest_atop?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DestAtop"}},{"id":"dest_in?-instance-method","html_id":"dest_in?-instance-method","name":"dest_in?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L39","def":{"name":"dest_in?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DestIn"}},{"id":"dest_out?-instance-method","html_id":"dest_out?-instance-method","name":"dest_out?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L42","def":{"name":"dest_out?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DestOut"}},{"id":"dest_over?-instance-method","html_id":"dest_over?-instance-method","name":"dest_over?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L36","def":{"name":"dest_over?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DestOver"}},{"id":"difference?-instance-method","html_id":"difference?-instance-method","name":"difference?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L84","def":{"name":"difference?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Difference"}},{"id":"exclusion?-instance-method","html_id":"exclusion?-instance-method","name":"exclusion?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L87","def":{"name":"exclusion?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Exclusion"}},{"id":"hard_light?-instance-method","html_id":"hard_light?-instance-method","name":"hard_light?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L78","def":{"name":"hard_light?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == HardLight"}},{"id":"hsl_color?-instance-method","html_id":"hsl_color?-instance-method","name":"hsl_color?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L98","def":{"name":"hsl_color?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == HslColor"}},{"id":"hsl_hue?-instance-method","html_id":"hsl_hue?-instance-method","name":"hsl_hue?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L90","def":{"name":"hsl_hue?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == HslHue"}},{"id":"hsl_luminosity?-instance-method","html_id":"hsl_luminosity?-instance-method","name":"hsl_luminosity?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L102","def":{"name":"hsl_luminosity?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == HslLuminosity"}},{"id":"hsl_saturation?-instance-method","html_id":"hsl_saturation?-instance-method","name":"hsl_saturation?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L94","def":{"name":"hsl_saturation?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == HslSaturation"}},{"id":"in?-instance-method","html_id":"in?-instance-method","name":"in?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L24","def":{"name":"in?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == In"}},{"id":"lighten?-instance-method","html_id":"lighten?-instance-method","name":"lighten?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L69","def":{"name":"lighten?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Lighten"}},{"id":"multiply?-instance-method","html_id":"multiply?-instance-method","name":"multiply?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L57","def":{"name":"multiply?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Multiply"}},{"id":"out?-instance-method","html_id":"out?-instance-method","name":"out?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L27","def":{"name":"out?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Out"}},{"id":"over?-instance-method","html_id":"over?-instance-method","name":"over?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L21","def":{"name":"over?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Over"}},{"id":"overlay?-instance-method","html_id":"overlay?-instance-method","name":"overlay?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L63","def":{"name":"overlay?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Overlay"}},{"id":"saturate?-instance-method","html_id":"saturate?-instance-method","name":"saturate?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L54","def":{"name":"saturate?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Saturate"}},{"id":"screen?-instance-method","html_id":"screen?-instance-method","name":"screen?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L60","def":{"name":"screen?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Screen"}},{"id":"soft_light?-instance-method","html_id":"soft_light?-instance-method","name":"soft_light?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L81","def":{"name":"soft_light?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SoftLight"}},{"id":"source?-instance-method","html_id":"source?-instance-method","name":"source?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L18","def":{"name":"source?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Source"}},{"id":"xor?-instance-method","html_id":"xor?-instance-method","name":"xor?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/operator.cr#L48","def":{"name":"xor?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Xor"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Path","path":"Cairo/Path.html","kind":"class","full_name":"Cairo::Path","name":"Path","abstract":false,"superclass":{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/path.cr","line_number":14,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path.cr#L14"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Paths are the most basic drawing tools and are primarily used to implicitly generate simple masks.\n\nPath is a data structure for holding a path. This data structure serves as the return value for\n`Context#copy_pathÀô and `Context#copy_path_flat` as well the input value for `Context#append`.\n\nSee `PathDataType` for hints on how to iterate over the actual data within the path.\n\nThe num_data function gives the number of elements in the data array.\nThis number is larger than the number of independent path portions (defined in `PathDataType`),\nsince the data includes both headers and coordinates for each portion.","summary":"<p>Paths are the most basic drawing tools and are primarily used to implicitly generate simple masks.</p>","class_methods":[],"constructors":[{"id":"new(path:LibCairo::PPathT)-class-method","html_id":"new(path:LibCairo::PPathT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"LibCairo::PPathT"}],"args_string":"(path : LibCairo::PPathT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path.cr#L15","def":{"name":"new","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"LibCairo::PPathT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](index:Int):PathData-instance-method","html_id":"[](index:Int):PathData-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : PathData","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path.cr#L38","def":{"name":"[]","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PathData","visibility":"Public","body":"PathData.new(@path.value.data[index])"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Immediately releases all memory associated with path.\nAfter a call to `Path#finalize` the path pointer is no longer valid and should not be used further.\n\nNOTE: should only be called `Path` returned by a `Context` function.\nAny path that is created manually (ie. outside of `Context`) should be destroyed manually as well.","summary":"<p>Immediately releases all memory associated with path.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path.cr#L25","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.path_destroy(@path)"}},{"id":"num_data:Int32-instance-method","html_id":"num_data:Int32-instance-method","name":"num_data","doc":"Returns the number of elements in the path.","summary":"<p>Returns the number of elements in the path.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path.cr#L43","def":{"name":"num_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@path.value.num_data"}},{"id":"status:Status-instance-method","html_id":"status:Status-instance-method","name":"status","doc":"Returns the current error status.","summary":"<p>Returns the current error status.</p>","abstract":false,"args":[],"args_string":" : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path.cr#L30","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new(@path.value.status.value)"}},{"id":"status=(status:Status)-instance-method","html_id":"status=(status:Status)-instance-method","name":"status=","doc":null,"summary":null,"abstract":false,"args":[{"name":"status","doc":null,"default_value":"","external_name":"status","restriction":"Status"}],"args_string":"(status : Status)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path.cr#L34","def":{"name":"status=","args":[{"name":"status","doc":null,"default_value":"","external_name":"status","restriction":"Status"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@path.value.status = LibCairo::StatusT.new(status.value)"}},{"id":"to_cairo_path:LibCairo::PathT-instance-method","html_id":"to_cairo_path:LibCairo::PathT-instance-method","name":"to_cairo_path","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PathT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path.cr#L47","def":{"name":"to_cairo_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PathT","visibility":"Public","body":"@path.value"}},{"id":"to_unsafe:LibCairo::PPathT-instance-method","html_id":"to_unsafe:LibCairo::PPathT-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PPathT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path.cr#L51","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PPathT","visibility":"Public","body":"@path"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/PathData","path":"Cairo/PathData.html","kind":"struct","full_name":"Cairo::PathData","name":"PathData","abstract":false,"superclass":{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/path_data.cr","line_number":50,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data.cr#L50"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Wrapper for LibCairo::PathDataT\n\n`PathData` is used to represent the path data inside a `Path`.\n\nThe data structure is designed to try to balance the demands of efficiency and ease-of-use.\nA path is represented as an array of `PathData`, which is a union of headers and points.\n\nEach portion of the path is represented by one or more elements in the array, (one header followed by 0 or more points).\nThe length value of the header is the number of array elements for the current portion including the header,\n(ie. length == 1 + # of points), and where the number of points for each element type is as follows:\n- `PathDataType::MoveTo`:     1 point\n- `PathDataType::LineTo`:     1 point\n- `PathDataType::CurveTo`:    3 points\n- `PathDataType::ClosePath`:  0 points\n\nThe semantics and ordering of the coordinate values are consistent with `Context#move_to`,\n`Context#line_to`, `Context#curve_to`, and `Context#close_path`.\n\nHere is sample code for iterating through a `Path`:\n```\ni = 0\npath = ctx.copy_path\nwhile i < path.num_data\n  data = path[i]\n  case data.header.type\n  when PathDataType::MoveTo\n      data1 = path[i + 1]\n      printf(\"MoveTo(%5.2f, %5.2f)\\n\", data1.point.x, data1.point.y)\n  when PathDataType::LineTo\n      data1 = path[i + 1]\n      printf(\"LineTo(%5.2f, %5.2f)\\n\", data1.point.x, data1.point.y)\n  when PathDataType::CurveTo\n      data1 = path[i + 1]\n      data2 = path[i + 2]\n      data3 = path[i + 3]\n      printf(\"CurveTo(%5.2f, %5.2f)\\n\", data1.point.x, data1.point.y)\n      printf(\"       (%5.2f, %5.2f)\\n\", data2.point.x, data2.point.y)\n      printf(\"       (%5.2f, %5.2f)\\n\", data3.point.x, data3.point.y)\n  when PathDataType::ClosePath\n      puts \"ClosePath\"\n  end\n  i += data.header.length\nend\n```","summary":"<p>Wrapper for LibCairo::PathDataT</p>","class_methods":[],"constructors":[{"id":"new(point:Point)-class-method","html_id":"new(point:Point)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Point"}],"args_string":"(point : Point)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data.cr#L56","def":{"name":"new","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(point)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(data:LibCairo::PathDataT)-class-method","html_id":"new(data:LibCairo::PathDataT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"LibCairo::PathDataT"}],"args_string":"(data : LibCairo::PathDataT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data.cr#L61","def":{"name":"new","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"LibCairo::PathDataT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(data)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(header:PathDataHeader)-class-method","html_id":"new(header:PathDataHeader)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"header","doc":null,"default_value":"","external_name":"header","restriction":"PathDataHeader"}],"args_string":"(header : PathDataHeader)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data.cr#L51","def":{"name":"new","args":[{"name":"header","doc":null,"default_value":"","external_name":"header","restriction":"PathDataHeader"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(header)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"header:PathDataHeader-instance-method","html_id":"header:PathDataHeader-instance-method","name":"header","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : PathDataHeader","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data.cr#L64","def":{"name":"header","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PathDataHeader","visibility":"Public","body":"PathDataHeader.new(@data.header)"}},{"id":"header=(header:PathDataHeader)-instance-method","html_id":"header=(header:PathDataHeader)-instance-method","name":"header=","doc":null,"summary":null,"abstract":false,"args":[{"name":"header","doc":null,"default_value":"","external_name":"header","restriction":"PathDataHeader"}],"args_string":"(header : PathDataHeader)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data.cr#L68","def":{"name":"header=","args":[{"name":"header","doc":null,"default_value":"","external_name":"header","restriction":"PathDataHeader"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data.header = header.to_cairo_path_data_header"}},{"id":"point:Point-instance-method","html_id":"point:Point-instance-method","name":"point","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Point","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data.cr#L72","def":{"name":"point","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point","visibility":"Public","body":"Point.new(@data.point)"}},{"id":"point=(point:Point)-instance-method","html_id":"point=(point:Point)-instance-method","name":"point=","doc":null,"summary":null,"abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Point"}],"args_string":"(point : Point)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data.cr#L76","def":{"name":"point=","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data.point = point.to_path_data_point"}},{"id":"to_cairo_path_data:LibCairo::PathDataT-instance-method","html_id":"to_cairo_path_data:LibCairo::PathDataT-instance-method","name":"to_cairo_path_data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PathDataT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data.cr#L80","def":{"name":"to_cairo_path_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PathDataT","visibility":"Public","body":"@data"}},{"id":"to_unsafe:LibCairo::PPathDataT-instance-method","html_id":"to_unsafe:LibCairo::PPathDataT-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PPathDataT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data.cr#L84","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PPathDataT","visibility":"Public","body":"pointerof(@data)"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/PathDataHeader","path":"Cairo/PathDataHeader.html","kind":"struct","full_name":"Cairo::PathDataHeader","name":"PathDataHeader","abstract":false,"superclass":{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/path_data_header.cr","line_number":7,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data_header.cr#L7"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Wrapper for LibCairo::PathDataHeaderT","summary":"<p>Wrapper for LibCairo::PathDataHeaderT</p>","class_methods":[],"constructors":[{"id":"new(type:PathDataType,length:Int32)-class-method","html_id":"new(type:PathDataType,length:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"PathDataType"},{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int32"}],"args_string":"(type : PathDataType, length : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data_header.cr#L12","def":{"name":"new","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"PathDataType"},{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(type, length)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(header:LibCairo::PathDataHeaderT)-class-method","html_id":"new(header:LibCairo::PathDataHeaderT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"header","doc":null,"default_value":"","external_name":"header","restriction":"LibCairo::PathDataHeaderT"}],"args_string":"(header : LibCairo::PathDataHeaderT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data_header.cr#L18","def":{"name":"new","args":[{"name":"header","doc":null,"default_value":"","external_name":"header","restriction":"LibCairo::PathDataHeaderT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(header)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data_header.cr#L8","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"length:Int32-instance-method","html_id":"length:Int32-instance-method","name":"length","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data_header.cr#L29","def":{"name":"length","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@header.length"}},{"id":"length=(length:Int32)-instance-method","html_id":"length=(length:Int32)-instance-method","name":"length=","doc":null,"summary":null,"abstract":false,"args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int32"}],"args_string":"(length : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data_header.cr#L33","def":{"name":"length=","args":[{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@header.length = length"}},{"id":"to_cairo_path_data_header:LibCairo::PathDataHeaderT-instance-method","html_id":"to_cairo_path_data_header:LibCairo::PathDataHeaderT-instance-method","name":"to_cairo_path_data_header","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PathDataHeaderT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data_header.cr#L37","def":{"name":"to_cairo_path_data_header","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PathDataHeaderT","visibility":"Public","body":"@header"}},{"id":"to_unsafe:LibCairo::PPathDataHeaderT-instance-method","html_id":"to_unsafe:LibCairo::PPathDataHeaderT-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PPathDataHeaderT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data_header.cr#L41","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PPathDataHeaderT","visibility":"Public","body":"pointerof(@header)"}},{"id":"type:PathDataType-instance-method","html_id":"type:PathDataType-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : PathDataType","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data_header.cr#L21","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PathDataType","visibility":"Public","body":"PathDataType.new(@header.type.value)"}},{"id":"type=(type:PathDataType)-instance-method","html_id":"type=(type:PathDataType)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"PathDataType"}],"args_string":"(type : PathDataType)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data_header.cr#L25","def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"PathDataType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@header.type = LibCairo::PathDataType.new(type.value)"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/PathDataType","path":"Cairo/PathDataType.html","kind":"enum","full_name":"Cairo::PathDataType","name":"PathDataType","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/path_data_type.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data_type.cr#L4"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"MoveTo","name":"MoveTo","value":"0","doc":"A move-to operation.","summary":"<p>A move-to operation.</p>"},{"id":"LineTo","name":"LineTo","value":"1","doc":"A line-to operation.","summary":"<p>A line-to operation.</p>"},{"id":"CurveTo","name":"CurveTo","value":"2","doc":"A curve-to operation.","summary":"<p>A curve-to operation.</p>"},{"id":"ClosePath","name":"ClosePath","value":"3","doc":"A close-path operation.","summary":"<p>A close-path operation.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Used to describe the type of one portion of a path when represented as a `Path`.\nSee `PathData` for details.","summary":"<p>Used to describe the type of one portion of a path when represented as a <code><a href=\"../Cairo/Path.html\">Path</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"close_path?-instance-method","html_id":"close_path?-instance-method","name":"close_path?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data_type.cr#L15","def":{"name":"close_path?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ClosePath"}},{"id":"curve_to?-instance-method","html_id":"curve_to?-instance-method","name":"curve_to?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data_type.cr#L12","def":{"name":"curve_to?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == CurveTo"}},{"id":"line_to?-instance-method","html_id":"line_to?-instance-method","name":"line_to?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data_type.cr#L9","def":{"name":"line_to?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LineTo"}},{"id":"move_to?-instance-method","html_id":"move_to?-instance-method","name":"move_to?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/path_data_type.cr#L6","def":{"name":"move_to?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MoveTo"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Pattern","path":"Cairo/Pattern.html","kind":"class","full_name":"Cairo::Pattern","name":"Pattern","abstract":false,"superclass":{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/pattern.cr","line_number":8,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L8"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"`Pattern` is the paint with which cairo draws. The primary use of patterns is as the source for all cairo drawing operations,\nalthough they can also be used as masks, that is, as the brush too.","summary":"<p><code><a href=\"../Cairo/Pattern.html\">Pattern</a></code> is the paint with which cairo draws.</p>","class_methods":[],"constructors":[{"id":"create_for_surface(surface:Surface):Pattern-class-method","html_id":"create_for_surface(surface:Surface):Pattern-class-method","name":"create_for_surface","doc":"Create a new `Pattern` for the given surface.\n\n###Parameters\n- **surface** the surface\n\n###Returns\nThe newly created `Pattern` if successful, or an error pattern in case of no memory.\nThe caller owns the returned object and should call `Pattern#finalize` when finished with it.\n\nThis function will always return a valid `Pattern`, but if an error occurred the pattern status will be set to an error.\nTo inspect the status of a pattern use `Pattern#status`.","summary":"<p>Create a new <code><a href=\"../Cairo/Pattern.html\">Pattern</a></code> for the given surface.</p>","abstract":false,"args":[{"name":"surface","doc":null,"default_value":"","external_name":"surface","restriction":"Surface"}],"args_string":"(surface : Surface) : Pattern","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L81","def":{"name":"create_for_surface","args":[{"name":"surface","doc":null,"default_value":"","external_name":"surface","restriction":"Surface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Pattern","visibility":"Public","body":"Pattern.new(LibCairo.pattern_create_for_surface(surface.to_unsafe))"}},{"id":"create_linear(x0:Float64,y0:Float64,x1:Float64,y1:Float64):Pattern-class-method","html_id":"create_linear(x0:Float64,y0:Float64,x1:Float64,y1:Float64):Pattern-class-method","name":"create_linear","doc":"Create a new linear gradient `Pattern` along the line defined by *(x0, y0)* and *(x1, y1)*.\nBefore using the gradient pattern, a number of color stops should be defined\nusing `Pattern#add_color_stop`.\n\nNOTE: The coordinates here are in pattern space. For a new pattern, pattern space is identical to user space,\nbut the relationship between the spaces can be changed with `Pattern#matrix=`.\n\n###Parameters\n- **x0** x coordinate of the start point\n- **y0** y coordinate of the start point\n- **x1** x coordinate of the end point\n- **y1** y coordinate of the end point\n\n###Returns\nThe newly created `Pattern` if successful, or an error pattern in case of no memory.\nThe caller owns the returned object and should call `Pattern#finalize` when finished with it.\n\nThis function will always return a valid pointer, but if an error occurred the pattern status will be set to an error.\nTo inspect the status of a pattern use `Pattern#status`.","summary":"<p>Create a new linear gradient <code><a href=\"../Cairo/Pattern.html\">Pattern</a></code> along the line defined by <em>(x0, y0)</em> and <em>(x1, y1)</em>.</p>","abstract":false,"args":[{"name":"x0","doc":null,"default_value":"","external_name":"x0","restriction":"Float64"},{"name":"y0","doc":null,"default_value":"","external_name":"y0","restriction":"Float64"},{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Float64"},{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Float64"}],"args_string":"(x0 : Float64, y0 : Float64, x1 : Float64, y1 : Float64) : Pattern","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L104","def":{"name":"create_linear","args":[{"name":"x0","doc":null,"default_value":"","external_name":"x0","restriction":"Float64"},{"name":"y0","doc":null,"default_value":"","external_name":"y0","restriction":"Float64"},{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Float64"},{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Pattern","visibility":"Public","body":"Pattern.new(LibCairo.pattern_create_linear(x0, y0, x1, y1))"}},{"id":"create_mesh:Pattern-class-method","html_id":"create_mesh:Pattern-class-method","name":"create_mesh","doc":"Create a new mesh pattern.\n\nMesh patterns are tensor-product patch meshes (type 7 shadings in PDF).\nMesh patterns may also be used to create other types of shadings that are special cases of\ntensor-product patch meshes such as Coons patch meshes (type 6 shading in PDF) and\nGouraud-shaded triangle meshes (type 4 and 5 shadings in PDF).\n\nMesh patterns consist of one or more tensor-product patches, which should be defined before using the mesh pattern.\nUsing a mesh pattern with a partially defined patch as source or mask will put the context in an error status with\na status of `Status::InvalidMeshConstruction`.\n\nA tensor-product patch is defined by 4 B√©zier curves (side 0, 1, 2, 3) and by 4 additional control points (P0, P1, P2, P3)\nthat provide further control over the patch and complete the definition of the tensor-product patch.\nThe corner C0 is the first point of the patch.\n\nDegenerate sides are permitted so straight lines may be used. A zero length line on one side may be used to create 3 sided patches.\n```text\n    C1       Side 1      C2\n       +---------------+\n       |               |\n       |  P1       P2  |\n       |               |\nSide 0 |               | Side 2\n       |               |\n       |               |\n       |  P0       P3  |\n       |               |\n       +---------------+\n    C0       Side 3      C3\n```\nEach patch is constructed by first calling `Pattern#begin_patch`, then `Pattern#move_to` to specify the first point in the patch (C0).\nThen the sides are specified with calls to `Pattern#curve_to` and `Pattern#line_to`.\n\nThe four additional control points (P0, P1, P2, P3) in a patch can be specified with `Pattern#set_control_point`.\n\nAt each corner of the patch (C0, C1, C2, C3) a color may be specified with `Pattern#set_corner_color_rgb` or `Pattern#set_corner_color_rgba`.\nAny corner whose color is not explicitly specified defaults to transparent black.\n\nA Coons patch is a special case of the tensor-product patch where the control points are implicitly defined by the sides of the patch.\nThe default value for any control point not specified is the implicit value for a Coons patch,\ni.e. if no control points are specified the patch is a Coons patch.\n\nA triangle is a special case of the tensor-product patch where the control points are implicitly defined by the sides of the patch,\nall the sides are lines and one of them has length 0, i.e. if the patch is specified using just 3 lines, it is a triangle.\nIf the corners connected by the 0-length side have the same color, the patch is a Gouraud-shaded triangle.\n\nPatches may be oriented differently to the above diagram. For example the first point could be at the top left.\nThe diagram only shows the relationship between the sides, corners and control points. Regardless of where the first point is located,\nwhen specifying colors, corner 0 will always be the first point, corner 1 the point between side 0 and side 1 etc.\n\nCalling `Pattern#end_patch` completes the current patch. If less than 4 sides have been defined,\nthe first missing side is defined as a line from the current point to the first point of the patch (C0)\nand the other sides are degenerate lines from C0 to C0. The corners between the added sides will all be coincident\nwith C0 of the patch and their color will be set to be the same as the color of C0.\n\nAdditional patches may be added with additional calls to `Pattern#begin_patch`/`Pattern#end_patch`.\n```\npattern = Pattern.create_mesh\n\n# Add a Coons patch\npattern\n  .begin_patch\n  .move_to(0, 0)\n  .curve_to(30, -30,  60,  30, 100, 0)\n  .curve_to(60,  30, 130,  60, 100, 100)\n  .curve_to(60,  70,  30, 130,   0, 100)\n  .curve_to(30,  70, -30,  30,   0, 0)\n  .set_corner_color(0, 1, 0, 0)\n  .set_corner_color(1, 0, 1, 0)\n  .set_corner_color(2, 0, 0, 1)\n  .set_corner_color(3, 1, 1, 0)\n  .end_patch\n\n# Add a Gouraud-shaded triangle\npattern\n  .begin_patch\n  .move_to(100, 100)\n  .line_to(130, 130)\n  .line_to(130,  70)\n  .set_corner_color(0, 1, 0, 0)\n  .set_corner_color(1, 0, 1, 0)\n  .set_corner_color(2, 0, 0, 1)\n  .end_patch\n```\n\nWhen two patches overlap, the last one that has been added is drawn over the first one.\n\nWhen a patch folds over itself, points are sorted depending on their parameter coordinates inside the patch.\nThe *v* coordinate ranges from 0 to 1 when moving from side 3 to side 1; the *u* coordinate ranges from 0 to 1 when going from side 0 to side 1.\n\nPoints with higher *v* coordinate hide points with lower *v* coordinate. When two points have the same *v* coordinate,\nthe one with higher *u* coordinate is above. This means that points nearer to side 1 are above points nearer to side 3;\nwhen this is not sufficient to decide which point is above (for example when both points belong to side 1 or side 3)\npoints nearer to side 2 are above points nearer to side 0.\n\nFor a complete definition of tensor-product patches, see the PDF specification (ISO32000), which describes the parametrization in detail.\n\nNOTE: The coordinates are always in pattern space. For a new pattern, pattern space is identical to user space,\nbut the relationship between the spaces can be changed with `Pattern#matrix=`.\n\n###Returns\nThe newly created `Pattern` if successful, or an error pattern in case of no memory.\nThe caller owns the returned object and should call `Pattern#finalize` when finished with it.\n\nThis function will always return a valid pointer, but if an error occurred the pattern status will be set to an error.\nTo inspect the status of a pattern use `Pattern#status`.","summary":"<p>Create a new mesh pattern.</p>","abstract":false,"args":[],"args_string":" : Pattern","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L239","def":{"name":"create_mesh","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Pattern","visibility":"Public","body":"Pattern.new(LibCairo.pattern_create_mesh)"}},{"id":"create_radial(cx0:Float64,cy0:Float64,radius0:Float64,cx1:Float64,cy1:Float64,radius1:Float64):Pattern-class-method","html_id":"create_radial(cx0:Float64,cy0:Float64,radius0:Float64,cx1:Float64,cy1:Float64,radius1:Float64):Pattern-class-method","name":"create_radial","doc":"Creates a new radial gradient `Pattern` between the two circles defined by *(cx0, cy0, radius0)* and *(cx1, cy1, radius1)*.\nBefore using the gradient pattern, a number of color stops should be defined using `Pattern#add_color_stop`.\n\nNOTE: The coordinates here are in pattern space. For a new pattern, pattern space is identical to user space,\nbut the relationship between the spaces can be changed with `Pattern#matrix=`.\n\n###Parameters\n- **cx0** x coordinate for the center of the start circle\n- **cy0** y coordinate for the center of the start circle\n- **radius0** radius of the start circle\n- **cx1** x coordinate for the center of the end circle\n- **cy1** y coordinate for the center of the end circle\n- **radius1** radius of the end circle\n\n###Returns\n\nThe newly created `Pattern` if successful, or an error pattern in case of no memory.\nThe caller owns the returned object and should call `Pattern#finalize` when finished with it.\n\nThis function will always return a valid pointer, but if an error occurred the pattern status will be set to an error.\nTo inspect the status of a pattern use `Pattern#status`.","summary":"<p>Creates a new radial gradient <code><a href=\"../Cairo/Pattern.html\">Pattern</a></code> between the two circles defined by <em>(cx0, cy0, radius0)</em> and <em>(cx1, cy1, radius1)</em>.</p>","abstract":false,"args":[{"name":"cx0","doc":null,"default_value":"","external_name":"cx0","restriction":"Float64"},{"name":"cy0","doc":null,"default_value":"","external_name":"cy0","restriction":"Float64"},{"name":"radius0","doc":null,"default_value":"","external_name":"radius0","restriction":"Float64"},{"name":"cx1","doc":null,"default_value":"","external_name":"cx1","restriction":"Float64"},{"name":"cy1","doc":null,"default_value":"","external_name":"cy1","restriction":"Float64"},{"name":"radius1","doc":null,"default_value":"","external_name":"radius1","restriction":"Float64"}],"args_string":"(cx0 : Float64, cy0 : Float64, radius0 : Float64, cx1 : Float64, cy1 : Float64, radius1 : Float64) : Pattern","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L129","def":{"name":"create_radial","args":[{"name":"cx0","doc":null,"default_value":"","external_name":"cx0","restriction":"Float64"},{"name":"cy0","doc":null,"default_value":"","external_name":"cy0","restriction":"Float64"},{"name":"radius0","doc":null,"default_value":"","external_name":"radius0","restriction":"Float64"},{"name":"cx1","doc":null,"default_value":"","external_name":"cx1","restriction":"Float64"},{"name":"cy1","doc":null,"default_value":"","external_name":"cy1","restriction":"Float64"},{"name":"radius1","doc":null,"default_value":"","external_name":"radius1","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Pattern","visibility":"Public","body":"Pattern.new(LibCairo.pattern_create_radial(cx0, cy0, radius0, cx1, cy1, radius1))"}},{"id":"create_raster_source(user_data:Pointer(Void),content:Content,width:Int32,height:Int32):Pattern-class-method","html_id":"create_raster_source(user_data:Pointer(Void),content:Content,width:Int32,height:Int32):Pattern-class-method","name":"create_raster_source","doc":"Creates a new user pattern for providing pixel data.\n\nUse the setter functions to associate callbacks with the returned pattern. The only mandatory callback is acquire.\n\n###Parameters\n- **user_data** the user data to be passed to all callbacks\n- **content** content type for the pixel data that will be returned.\nKnowing the content type ahead of time is used for analysing the operation and picking the appropriate rendering path.\n- **width** maximum size of the sample area\n- **height** maximum size of the sample area\n\n###Returns\nA newly created `Pattern`. Free with `Pattern#finalize` when you are done using it.","summary":"<p>Creates a new user pattern for providing pixel data.</p>","abstract":false,"args":[{"name":"user_data","doc":null,"default_value":"","external_name":"user_data","restriction":"::Pointer(Void)"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"Content"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(user_data : Pointer(Void), content : Content, width : Int32, height : Int32) : Pattern","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L33","def":{"name":"create_raster_source","args":[{"name":"user_data","doc":null,"default_value":"","external_name":"user_data","restriction":"::Pointer(Void)"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"Content"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Pattern","visibility":"Public","body":"Pattern.new(LibCairo.pattern_create_raster_source(user_data, LibCairo::ContentT.new(content.value), width, height))"}},{"id":"create_rgb(red:Float64,green:Float64,blue:Float64):Pattern-class-method","html_id":"create_rgb(red:Float64,green:Float64,blue:Float64):Pattern-class-method","name":"create_rgb","doc":"Creates a new `Pattern` corresponding to an opaque color. The color components are floating point numbers in the range *0* to *1*.\nIf the values passed in are outside that range, they will be clamped.\n\n###Parameters\n- **red** red component of the color\n- **green** green component of the color\n- **blue** blue component of the color\n\n###Returns\n\nThe newly created `Pattern` if successful, or an error pattern in case of no memory.\nThe caller owns the returned object and should call `Pattern#finalize` when finished with it.","summary":"<p>Creates a new <code><a href=\"../Cairo/Pattern.html\">Pattern</a></code> corresponding to an opaque color.</p>","abstract":false,"args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"}],"args_string":"(red : Float64, green : Float64, blue : Float64) : Pattern","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L50","def":{"name":"create_rgb","args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Pattern","visibility":"Public","body":"Pattern.new(LibCairo.pattern_create_rgb(red, green, blue))"}},{"id":"new(pattern:LibCairo::PPatternT)-class-method","html_id":"new(pattern:LibCairo::PPatternT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"LibCairo::PPatternT"}],"args_string":"(pattern : LibCairo::PPatternT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L9","def":{"name":"new","args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"LibCairo::PPatternT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(pattern)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"acquire:NamedTuple()-instance-method","html_id":"acquire:NamedTuple()-instance-method","name":"acquire","doc":"Queries the current acquire and release callbacks.\n\n###Returns\n- **acquire** the current acquire callback\n- **release** the current release callback","summary":"<p>Queries the current acquire and release callbacks.</p>","abstract":false,"args":[],"args_string":" : NamedTuple()","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L265","def":{"name":"acquire","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(acquire: LibCairo::RasterSourceAcquireFuncT, release: LibCairo::RasterSourceReleaseFuncT)","visibility":"Public","body":"LibCairo.raster_source_pattern_get_acquire(@pattern, out acquire, out release)\n{acquire: acquire, release: release}\n"}},{"id":"add_color_stop(offset:Float64,red:Float64,green:Float64,blue:Float64)-instance-method","html_id":"add_color_stop(offset:Float64,red:Float64,green:Float64,blue:Float64)-instance-method","name":"add_color_stop","doc":"Adds an opaque color stop to a gradient pattern. The offset specifies the location along the gradient's control vector.\nFor example, a linear gradient's control vector is from *(x0, y0)* to *(x1, y1)* while a radial gradient's control\nvector is from any point on the start circle to the corresponding point on the end circle.\n\nThe color is specified in the same way as in `Context#set_source_rgb`.\n\nIf two (or more) stops are specified with identical offset values, they will be sorted according to the order\nin which the stops are added, (stops added earlier will compare less than stops added later).\nThis can be useful for reliably making sharp color transitions instead of the typical blend.\n\nNOTE: If the pattern is not a gradient pattern, (eg. a linear or radial pattern),\nthen the pattern will be put into an error status with a status of `Status::PatternTypeMismatch`.\n\n###Parameters\n- **offset** an offset in the range [0.0 .. 1.0]\n- **red** red component of color\n- **green** green component of color\n- **blue** blue component of color","summary":"<p>Adds an opaque color stop to a gradient pattern.</p>","abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Float64"},{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"}],"args_string":"(offset : Float64, red : Float64, green : Float64, blue : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L413","def":{"name":"add_color_stop","args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Float64"},{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.pattern_add_color_stop_rgb(@pattern, offset, red, green, blue)\nself\n"}},{"id":"add_color_stop(offset:Float64,red:Float64,green:Float64,blue:Float64,alpha:Float64)-instance-method","html_id":"add_color_stop(offset:Float64,red:Float64,green:Float64,blue:Float64,alpha:Float64)-instance-method","name":"add_color_stop","doc":"Adds a translucent color stop to a gradient pattern. The offset specifies the location along the gradient's control vector.\nFor example, a linear gradient's control vector is from *(x0, y0)* to *(x1, y1)* while a radial gradient's\ncontrol vector is from any point on the start circle to the corresponding point on the end circle.\n\nThe color is specified in the same way as in `Context#set_source_rgba`.\n\nIf two (or more) stops are specified with identical offset values, they will be sorted according to the order in which the stops are added,\n(stops added earlier will compare less than stops added later). This can be useful for reliably making sharp color transitions\ninstead of the typical blend.\n\nNOTE: If the pattern is not a gradient pattern, (eg. a linear or radial pattern), then the pattern will be put into an\nerror status with a status of `Status::PatternTypeMismatch`.\n\n###Parameters\n- **offset** an offset in the range [0.0 .. 1.0]\n- **red** red component of color\n- **green** green component of color\n- **blue** blue component of color\n- **alpha** alpha component of color","summary":"<p>Adds a translucent color stop to a gradient pattern.</p>","abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Float64"},{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"},{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"args_string":"(offset : Float64, red : Float64, green : Float64, blue : Float64, alpha : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L437","def":{"name":"add_color_stop","args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Float64"},{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"},{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.pattern_add_color_stop_rgba(@pattern, offset, red, green, blue, alpha)\nself\n"}},{"id":"begin_patch-instance-method","html_id":"begin_patch-instance-method","name":"begin_patch","doc":"Begin a patch in a mesh pattern.\n\nAfter calling this function, the patch shape should be defined with `Pattern#move_to`, `Pattern#line_to` and `Pattern#curve_to`.\n\nAfter defining the patch, `Pattern#end_patch` must be called before using pattern as a source or mask.\n\nNOTE: If pattern is not a mesh pattern then pattern will be put into an error status with a status\nof `Status::PatternTypeMismatch`. If pattern already has a current patch, it will be put into an error status\nwith a status of `Status::InvalidMeshConstruction`.","summary":"<p>Begin a patch in a mesh pattern.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L451","def":{"name":"begin_patch","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.mesh_pattern_begin_patch(@pattern)\nself\n"}},{"id":"callback_data:Pointer(Void)-instance-method","html_id":"callback_data:Pointer(Void)-instance-method","name":"callback_data","doc":"Queries the current user data.\n\n###Returns\nThe current user-data passed to each callback.","summary":"<p>Queries the current user data.</p>","abstract":false,"args":[],"args_string":" : Pointer(Void)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L247","def":{"name":"callback_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Pointer(Void)","visibility":"Public","body":"LibCairo.raster_source_pattern_get_callback_data(@pattern)"}},{"id":"callback_data=(data:Pointer(Void))-instance-method","html_id":"callback_data=(data:Pointer(Void))-instance-method","name":"callback_data=","doc":"Updates the user data that is provided to all callbacks.\n\n###Parameters\n- **data** the user data to be passed to all callbacks","summary":"<p>Updates the user data that is provided to all callbacks.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"args_string":"(data : Pointer(Void))","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L255","def":{"name":"callback_data=","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.raster_source_pattern_set_callback_data(@pattern, data)\nself\n"}},{"id":"color_stop(index:Int32):ColorStop-instance-method","html_id":"color_stop(index:Int32):ColorStop-instance-method","name":"color_stop","doc":"Gets the color and offset information at the given index for a gradient pattern.\nValues of index range from *0* to *n-1* where *n* is the number returned by `Pattern#color_stop_count`.\n\n###Parameters\n- **index** index of the stop to return data for\n\n###Returns\n`ColorStop` object.\n\n###Raises\n- `StatusException` whith *status* of `Status::InvalidIndex` if index is not valid for the given pattern.\n   If the pattern is not a gradient pattern, *status* is `Status::PatternTypeMismatch`.","summary":"<p>Gets the color and offset information at the given index for a gradient pattern.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"args_string":"(index : Int32) : ColorStop","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L706","def":{"name":"color_stop","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ColorStop","visibility":"Public","body":"status = Status.new((LibCairo.pattern_get_color_stop_rgba(@pattern, index, out offset, out red, out green, out blue, out alpha)).value)\nif status.success?\nelse\n  raise(StatusException.new(status))\nend\nColorStop.new(offset, red, green, blue, alpha)\n"}},{"id":"color_stop_count:Int32-instance-method","html_id":"color_stop_count:Int32-instance-method","name":"color_stop_count","doc":"Gets the number of color stops specified in the given gradient pattern.\n\n###Returns\nThe number of color stops.\n\n###Raises\n- `StatusException` with *status* of `Status::PatternTypeMismatch` if pattern is not a gradient pattern.","summary":"<p>Gets the number of color stops specified in the given gradient pattern.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L720","def":{"name":"color_stop_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"status = Status.new((pattern_get_color_stop_count(@pattern, out count)).value)\nif status.success?\nelse\n  raise(StatusException.new(status))\nend\ncount\n"}},{"id":"control_point(pattern:PPatternT,patch_num:UInt32,point_num:UInt32,x:Pointer(Float64),y:Pointer(Float64)):StatusT-instance-method","html_id":"control_point(pattern:PPatternT,patch_num:UInt32,point_num:UInt32,x:Pointer(Float64),y:Pointer(Float64)):StatusT-instance-method","name":"control_point","doc":"Gets the control point *point_num* of patch patch_num for a mesh pattern.\n\n*patch_num* can range from *0* to *n-1* where *n* is the number returned by `Pattern#patch_count`.\n\nValid values for point_num are from *0* to *3* and identify the control points as explained in `Pattern#create_mesh`.\n\n###Parameters\n- **patch_num** the patch number to return data for\n- **point_num** the control point number to return data for\n\n###Returns\nThe control point.\n\n###Raises\n`StatusException` with *status* of `Status::InvalidIndex` if *patch_num* or *point_num* is not valid for pattern.\nIf pattern is not a mesh pattern, `Status::PatternTypeMismatch` is returned.","summary":"<p>Gets the control point <em>point_num</em> of patch patch_num for a mesh pattern.</p>","abstract":false,"args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"PPatternT"},{"name":"patch_num","doc":null,"default_value":"","external_name":"patch_num","restriction":"UInt32"},{"name":"point_num","doc":null,"default_value":"","external_name":"point_num","restriction":"UInt32"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"::Pointer(Float64)"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"::Pointer(Float64)"}],"args_string":"(pattern : PPatternT, patch_num : UInt32, point_num : UInt32, x : Pointer(Float64), y : Pointer(Float64)) : StatusT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L831","def":{"name":"control_point","args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"PPatternT"},{"name":"patch_num","doc":null,"default_value":"","external_name":"patch_num","restriction":"UInt32"},{"name":"point_num","doc":null,"default_value":"","external_name":"point_num","restriction":"UInt32"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"::Pointer(Float64)"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"::Pointer(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"StatusT","visibility":"Public","body":"status = Status.new((LibCairo.mesh_pattern_get_control_point(@pattern, patch_num, point_num, out x, out y)).value)\nif status.success?\nelse\n  raise(StatusException.new(status))\nend\nPoint.new(x, y)\n"}},{"id":"copy:LibCairo::RasterSourceCopyFuncT-instance-method","html_id":"copy:LibCairo::RasterSourceCopyFuncT-instance-method","name":"copy","doc":"Queries the current copy callback.\n\n###Returns\nThe current copy callback.","summary":"<p>Queries the current copy callback.</p>","abstract":false,"args":[],"args_string":" : LibCairo::RasterSourceCopyFuncT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L310","def":{"name":"copy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::RasterSourceCopyFuncT","visibility":"Public","body":"LibCairo.raster_source_pattern_get_copy(@pattern)"}},{"id":"copy=(copy:LibCairo::RasterSourceCopyFuncT)-instance-method","html_id":"copy=(copy:LibCairo::RasterSourceCopyFuncT)-instance-method","name":"copy=","doc":"Updates the copy callback which is used whenever a temporary copy of the pattern is taken.\n\n###Parameters\n- **copy** the copy callback","summary":"<p>Updates the copy callback which is used whenever a temporary copy of the pattern is taken.</p>","abstract":false,"args":[{"name":"copy","doc":null,"default_value":"","external_name":"copy","restriction":"LibCairo::RasterSourceCopyFuncT"}],"args_string":"(copy : LibCairo::RasterSourceCopyFuncT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L318","def":{"name":"copy=","args":[{"name":"copy","doc":null,"default_value":"","external_name":"copy","restriction":"LibCairo::RasterSourceCopyFuncT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.raster_source_pattern_set_copy(@pattern, copy)\nself\n"}},{"id":"corner_color(patch_num:UInt32,corner_num:UInt32):RGBA-instance-method","html_id":"corner_color(patch_num:UInt32,corner_num:UInt32):RGBA-instance-method","name":"corner_color","doc":"Gets the color information in corner *corner_num* of patch *patch_num* for a mesh pattern.\n\n*patch_num* can range from *0* to *n-1* where *n* is the number returned by `Pattern#patch_count`.\n\nValid values for *corner_num* are from *0* to *3* and identify the corners as explained in `Pattern#create_mesh`.\n\n###Parameters\n- **patch_num** the patch number to return data for\n- **corner_num** the corner number to return data for\n\n###Returns\nThe color structure.\n\n###Raises\n`StatusException` with *status* of `Status::InvalidIndex` if *patch_num* or *corner_num* is not valid for pattern.\nIf pattern is not a mesh pattern, `Status::PatternTypeMismatch` is returned.","summary":"<p>Gets the color information in corner <em>corner_num</em> of patch <em>patch_num</em> for a mesh pattern.</p>","abstract":false,"args":[{"name":"patch_num","doc":null,"default_value":"","external_name":"patch_num","restriction":"UInt32"},{"name":"corner_num","doc":null,"default_value":"","external_name":"corner_num","restriction":"UInt32"}],"args_string":"(patch_num : UInt32, corner_num : UInt32) : RGBA","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L808","def":{"name":"corner_color","args":[{"name":"patch_num","doc":null,"default_value":"","external_name":"patch_num","restriction":"UInt32"},{"name":"corner_num","doc":null,"default_value":"","external_name":"corner_num","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"RGBA","visibility":"Public","body":"status = Status.new((LibCairo.mesh_pattern_get_corner_color_rgba(@pattern, patch_num, corner_num, out red, out green, out blue, out alpha)).value)\nif status.success?\nelse\n  raise(StatusException.new(status))\nend\nRGBA.new(red, green, blue, alpha)\n"}},{"id":"create_rgba(red:Float64,green:Float64,blue:Float64,alpha:Float64):Pattern-instance-method","html_id":"create_rgba(red:Float64,green:Float64,blue:Float64,alpha:Float64):Pattern-instance-method","name":"create_rgba","doc":"Creates a new `Pattern` corresponding to a translucent color. The color components are floating point numbers in the range *0* to *1*-\nIf the values passed in are outside that range, they will be clamped.\n\n###Parameters\n- **red** red component of the color\n- **green** green component of the color\n- **blue** blue component of the color\n- **alpha** alpha component of the color\n\n###Returns\nThe newly created `Pattern` if successful, or an error pattern in case of no memory.\nThe caller owns the returned object and should call `Pattern#finalize` when finished with it.","summary":"<p>Creates a new <code><a href=\"../Cairo/Pattern.html\">Pattern</a></code> corresponding to a translucent color.</p>","abstract":false,"args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"},{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"args_string":"(red : Float64, green : Float64, blue : Float64, alpha : Float64) : Pattern","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L66","def":{"name":"create_rgba","args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"},{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Pattern","visibility":"Public","body":"Pattern.new(LibCairo.pattern_create_rgb(red, green, blue, alpha))"}},{"id":"curve_to(x1:Float64,y1:Float64,x2:Float64,y2:Float64,x3:Float64,y3:Float64)-instance-method","html_id":"curve_to(x1:Float64,y1:Float64,x2:Float64,y2:Float64,x3:Float64,y3:Float64)-instance-method","name":"curve_to","doc":"Adds a cubic B√©zier spline to the current patch from the current point to position *(x3, y3)* in pattern-space coordinates,\nusing *(x1, y1)* and *(x2, y2)* as the control points.\n\nIf the current patch has no current point before the call to `Pattern#curve_to`,\nthis function will behave as if preceded by a call to `Pattern#move_to`.\n\nAfter this call the current point will be *(x3, y3)*.\n\nNOTE: If pattern is not a mesh pattern then pattern will be put into an error status with a status\nof `Status::PatternTypeMismatch`. If pattern has no current patch or the current patch already has 4 sides,\npattern will be put into an error status with a status of `Status::InvalidMeshConstruction`.\n\n###Parameters\n- **x1** the X coordinate of the first control point\n- **y1** the Y coordinate of the first control point\n- **x2** the X coordinate of the second control point\n- **y2** the Y coordinate of the second control point\n- **x3** the X coordinate of the end of the curve\n- **y3** the Y coordinate of the end of the curve","summary":"<p>Adds a cubic B√©zier spline to the current patch from the current point to position <em>(x3, y3)</em> in pattern-space coordinates, using <em>(x1, y1)</em> and <em>(x2, y2)</em> as the control points.</p>","abstract":false,"args":[{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Float64"},{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Float64"},{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Float64"},{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Float64"},{"name":"x3","doc":null,"default_value":"","external_name":"x3","restriction":"Float64"},{"name":"y3","doc":null,"default_value":"","external_name":"y3","restriction":"Float64"}],"args_string":"(x1 : Float64, y1 : Float64, x2 : Float64, y2 : Float64, x3 : Float64, y3 : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L488","def":{"name":"curve_to","args":[{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Float64"},{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Float64"},{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Float64"},{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Float64"},{"name":"x3","doc":null,"default_value":"","external_name":"x3","restriction":"Float64"},{"name":"y3","doc":null,"default_value":"","external_name":"y3","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.mesh_pattern_curve_to(@pattern, x1, y1, x2, y2, x3, y3)\nself\n"}},{"id":"end_patch-instance-method","html_id":"end_patch-instance-method","name":"end_patch","doc":"Indicates the end of the current patch in a mesh pattern.\n\nIf the current patch has less than 4 sides, it is closed with a straight line from the current point to\nthe first point of the patch as if `Pattern#line_to` was used.\n\nNOTE: If pattern is not a mesh pattern then pattern will be put into an error status with a status\nof `Status::PatternTypeMismatch`. If pattern has no current patch or the current patch has no current point,\npattern will be put into an error status with a status of `Status::InvalidMeshConstruction`.","summary":"<p>Indicates the end of the current patch in a mesh pattern.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L464","def":{"name":"end_patch","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.mesh_pattern_end_patch(@pattern)\nself\n"}},{"id":"extend:Extend-instance-method","html_id":"extend:Extend-instance-method","name":"extend","doc":"Gets the current extend mode for a pattern. See `Extend` for details on the semantics of each extend strategy.\n\n###Returns\nThe current extend strategy used for drawing the pattern.","summary":"<p>Gets the current extend mode for a pattern.</p>","abstract":false,"args":[],"args_string":" : Extend","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L626","def":{"name":"extend","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Extend","visibility":"Public","body":"Extend.new((LibCairo.pattern_get_extend(@pattern)).value)"}},{"id":"extend=(ex:Extend)-instance-method","html_id":"extend=(ex:Extend)-instance-method","name":"extend=","doc":"Sets the mode to be used for drawing outside the area of a pattern.\nSee `Extend` for details on the semantics of each extend strategy.\n\nThe default extend mode is `Extend::None` for surface patterns and `Extend::Pad` for gradient patterns.\n\n###Parameters\n- **ex** a `Extend` describing how the area outside of the pattern will be drawn","summary":"<p>Sets the mode to be used for drawing outside the area of a pattern.</p>","abstract":false,"args":[{"name":"ex","doc":null,"default_value":"","external_name":"ex","restriction":"Extend"}],"args_string":"(ex : Extend)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L637","def":{"name":"extend=","args":[{"name":"ex","doc":null,"default_value":"","external_name":"ex","restriction":"Extend"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.pattern_set_extend(@pattern, LibCairo::ExtendT.new(ex.value))\nself\n"}},{"id":"filter:Filter-instance-method","html_id":"filter:Filter-instance-method","name":"filter","doc":"Gets the current filter for a pattern. See `Filter` for details on each filter.\n\n###Returns\nThe current filter used for resizing the pattern.","summary":"<p>Gets the current filter for a pattern.</p>","abstract":false,"args":[],"args_string":" : Filter","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L646","def":{"name":"filter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Filter","visibility":"Public","body":"Filter.new((LibCairo.pattern_get_filter(@pattern)).value)"}},{"id":"filter=(filter:Filter)-instance-method","html_id":"filter=(filter:Filter)-instance-method","name":"filter=","doc":"Sets the filter to be used for resizing when using this pattern. See `Filter` for details on each filter.\n\nNOTE that you might want to control filtering even when you do not have an explicit `Pattern` object,\n(for example when using `Context#set_source_surface`). In these cases, it is convenient to use `Context#get_source`\nto get access to the pattern that cairo creates implicitly. For example:\n```\ncontext.set_source_surface(image, x, y)\ncontext.source.filter = Filter::Nearest\n```\n\n###Parameters\n- **filter** a `Filter` describing the filter to use for resizing the pattern","summary":"<p>Sets the filter to be used for resizing when using this pattern.</p>","abstract":false,"args":[{"name":"filter","doc":null,"default_value":"","external_name":"filter","restriction":"Filter"}],"args_string":"(filter : Filter)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L662","def":{"name":"filter=","args":[{"name":"filter","doc":null,"default_value":"","external_name":"filter","restriction":"Filter"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.pattern_set_filter(@pattern, LibCairo::FilterT.new(filter.value))\nself\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Decreases the reference count on pattern by one. If the result is zero, then pattern and all associated resources are freed.\nSee `Pattern#reference`.","summary":"<p>Decreases the reference count on pattern by one.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L16","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.pattern_destroy(@pattern)"}},{"id":"finish:LibCairo::RasterSourceFinishFuncT-instance-method","html_id":"finish:LibCairo::RasterSourceFinishFuncT-instance-method","name":"finish","doc":"Queries the current finish callback.\n\n##Returns\nThe current finish callback.","summary":"<p>Queries the current finish callback.</p>","abstract":false,"args":[],"args_string":" : LibCairo::RasterSourceFinishFuncT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L327","def":{"name":"finish","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::RasterSourceFinishFuncT","visibility":"Public","body":"LibCairo.raster_source_pattern_get_finish(@pattern)"}},{"id":"finish=(finish:LibCairo::RasterSourceFinishFuncT)-instance-method","html_id":"finish=(finish:LibCairo::RasterSourceFinishFuncT)-instance-method","name":"finish=","doc":"Updates the finish callback which is used whenever a pattern (or a copy thereof) will no longer be used.\n\n###Parameters\n- **finish** the finish callback","summary":"<p>Updates the finish callback which is used whenever a pattern (or a copy thereof) will no longer be used.</p>","abstract":false,"args":[{"name":"finish","doc":null,"default_value":"","external_name":"finish","restriction":"LibCairo::RasterSourceFinishFuncT"}],"args_string":"(finish : LibCairo::RasterSourceFinishFuncT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L335","def":{"name":"finish=","args":[{"name":"finish","doc":null,"default_value":"","external_name":"finish","restriction":"LibCairo::RasterSourceFinishFuncT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.raster_source_pattern_set_finish(@pattern, finish)\nself\n"}},{"id":"line_to(x:Float64,y:Float64)-instance-method","html_id":"line_to(x:Float64,y:Float64)-instance-method","name":"line_to","doc":"Adds a line to the current patch from the current point to position *(x, y)* in pattern-space coordinates.\n\nIf there is no current point before the call to `Pattern#line_to` this function will behave as `Pattern#move_to`.\n\nAfter this call the current point will be *(x, y)*.\n\nNOTE: If pattern is not a mesh pattern then pattern will be put into an error status with a status\nof `Status::PatternTypeMismatch`. If pattern has no current patch or the current patch already has 4 sides,\npattern will be put into an error status with a status of `Status::InvalidMeshConstruction`.\n\n###Parameters\n- **x** the X coordinate of the end of the new line\n- **y** the Y coordinate of the end of the new line","summary":"<p>Adds a line to the current patch from the current point to position <em>(x, y)</em> in pattern-space coordinates.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"args_string":"(x : Float64, y : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L506","def":{"name":"line_to","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.mesh_pattern_line_to(@pattern, x, y)\nself\n"}},{"id":"linear_points:NamedTuple()-instance-method","html_id":"linear_points:NamedTuple()-instance-method","name":"linear_points","doc":"Gets the gradient endpoints for a linear gradient.\n\n###Returns\n- **x0** return value for the x coordinate of the first point\n- **y0** return value for the y coordinate of the first point\n- **x1** return value for the x coordinate of the second point\n- **y1** return value for the y coordinate of the second point\n\n###Raises\n- `StatusException` with *status* of `Status::PatternTypeMismatch` if pattern is not a linear gradient pattern.","summary":"<p>Gets the gradient endpoints for a linear gradient.</p>","abstract":false,"args":[],"args_string":" : NamedTuple()","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L736","def":{"name":"linear_points","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(x0: Float64, y0: Float64, x1: Float64, y1: Float64)","visibility":"Public","body":"status = Status.new((LibCairo.pattern_get_linear_points(@pattern, out x0, out y0, out x1, out y1)).value)\nif status.success?\nelse\n  raise(StatusException.new(status))\nend\n{x0: x0, y0: y0, x1: x1, y1: y1}\n"}},{"id":"matrix:Matrix-instance-method","html_id":"matrix:Matrix-instance-method","name":"matrix","doc":"Returns the pattern's transformation matrix.","summary":"<p>Returns the pattern's transformation matrix.</p>","abstract":false,"args":[],"args_string":" : Matrix","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L589","def":{"name":"matrix","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Matrix","visibility":"Public","body":"matrix = Matrix.new\nLibCairo.pattern_get_matrix(@pattern, matrix.to_unsafe)\nmatrix\n"}},{"id":"matrix=(matrix:Matrix)-instance-method","html_id":"matrix=(matrix:Matrix)-instance-method","name":"matrix=","doc":"Sets the pattern's transformation matrix to matrix.\nThis matrix is a transformation from user space to pattern space.\n\nWhen a pattern is first created it always has the identity matrix for its transformation matrix,\nwhich means that pattern space is initially identical to user space.\n\nImportant: Please NOTE that the direction of this transformation matrix is from user space to pattern space.\nThis means that if you imagine the flow from a pattern to user space (and on to device space),\nthen coordinates in that flow will be transformed by the inverse of the pattern matrix.\n\nFor example, if you want to make a pattern appear twice as large as it does by default the correct code to use is:\n```\nmatrix.init_scale(0.5, 0.5)\npattern.matrix = matrix\n```\n\nMeanwhile, using values of 2.0 rather than 0.5 in the code above would cause the pattern to appear at half of its default size.\n\nAlso, please note the discussion of the user-space locking semantics of `Context#source=`.\n\n###Parameters\n- **matrix** a `Matrix`","summary":"<p>Sets the pattern's transformation matrix to matrix.</p>","abstract":false,"args":[{"name":"matrix","doc":null,"default_value":"","external_name":"matrix","restriction":"Matrix"}],"args_string":"(matrix : Matrix)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L617","def":{"name":"matrix=","args":[{"name":"matrix","doc":null,"default_value":"","external_name":"matrix","restriction":"Matrix"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.pattern_set_matrix(@pattern, matrix.to_unsafe)\nself\n"}},{"id":"move_to(x:Float64,y:Float64)-instance-method","html_id":"move_to(x:Float64,y:Float64)-instance-method","name":"move_to","doc":"Define the first point of the current patch in a mesh pattern.\n\nAfter this call the current point will be *(x, y)*.\n\nNOTE: If pattern is not a mesh pattern then pattern will be put into an error status with a status\nof `Status::PatternTypeMismatch`. If pattern has no current patch or the current patch already has at least one side,\npattern will be put into an error status with a status of `Status::InvalidMeshConstruction`.\n\n###Parameters\n- **x** the X coordinate of the new position\n- **y** the Y coordinate of the new position","summary":"<p>Define the first point of the current patch in a mesh pattern.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"args_string":"(x : Float64, y : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L522","def":{"name":"move_to","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.mesh_pattern_move_to(@pattern, x, y)\nself\n"}},{"id":"patch_count:UInt32-instance-method","html_id":"patch_count:UInt32-instance-method","name":"patch_count","doc":"Gets the number of patches specified in the given mesh pattern.\n\nThe number only includes patches which have been finished by calling `Pattern#end_patch`.\nFor example it will be 0 during the definition of the first patch.\n\n###Returns\nThe number patches\n\n###Raises\n- `StatusException` with *status* of `Status::PatternTypeMismatch` if pattern is not a mesh pattern.","summary":"<p>Gets the number of patches specified in the given mesh pattern.</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L772","def":{"name":"patch_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"status = Status.new((LibCairo.mesh_pattern_get_patch_count(@pattern, out count)).value)\nif status.success?\nelse\n  raise(StatusException.new(status))\nend\ncount\n"}},{"id":"path(patch_num:UInt32):Path-instance-method","html_id":"path(patch_num:UInt32):Path-instance-method","name":"path","doc":"Gets path defining the patch *patch_num* for a mesh pattern.\n\n*patch_num* can range from 0 to n-1 where n is the number returned by `Pattern#patch_count`.\n\n###Parameters\n- **patch_num** the patch number to return data for\n\n###Returns\nThe path defining the patch, or a path with status `Status::InvalidIndex` if *patch_num* or *point_num* is not valid for pattern.\nIf pattern is not a mesh pattern, a path with status `Status::PatternTypeMismatch` is returned.","summary":"<p>Gets path defining the patch <em>patch_num</em> for a mesh pattern.</p>","abstract":false,"args":[{"name":"patch_num","doc":null,"default_value":"","external_name":"patch_num","restriction":"UInt32"}],"args_string":"(patch_num : UInt32) : Path","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L788","def":{"name":"path","args":[{"name":"patch_num","doc":null,"default_value":"","external_name":"patch_num","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Path","visibility":"Public","body":"Path.new(LibCairo.mesh_pattern_get_path(@pattern, patch_num))"}},{"id":"radial_circles:NamedTuple()-instance-method","html_id":"radial_circles:NamedTuple()-instance-method","name":"radial_circles","doc":"Gets the gradient endpoint circles for a radial gradient, each specified as a center coordinate and a radius.\n\n###Returns\n- **x0** return value for the x coordinate of the center of the first circle\n- **y0** return value for the y coordinate of the center of the first circle\n- **r0** return value for the radius of the first circle\n- **x1** return value for the x coordinate of the center of the second circle\n- **y1** return value for the y coordinate of the center of the second circle\n- **r1** return value for the radius of the second circle\n\n###Raises\n- `StatusException` with *status* of `Status::PatternTypeMismatch` if pattern is not a radial gradient pattern.","summary":"<p>Gets the gradient endpoint circles for a radial gradient, each specified as a center coordinate and a radius.</p>","abstract":false,"args":[],"args_string":" : NamedTuple()","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L755","def":{"name":"radial_circles","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(x0: Float64, y0: Float64, r0: Float64, x1: Float64, y1: Float64, r1: Float64)","visibility":"Public","body":"status = Status.new((LibCairo.pattern_get_radial_circles(@pattern, out x0, out y0, out r0, out x1, out y1, out r1)).value)\nif status.success?\nelse\n  raise(StatusException.new(status))\nend\n{x0: x0, y0: y0, r0: r0, x1: x1, y1: y1, r1: r1}\n"}},{"id":"reference:Pattern-instance-method","html_id":"reference:Pattern-instance-method","name":"reference","doc":"Increases the reference count on pattern by one.\nThis prevents pattern from being destroyed until a matching call to `Pattern#finalize` is made.\n\nUse `Pattern#reference_count` to get the number of references to a `Pattern`.\n\n###Returns\nThe referenced `Pattern`.","summary":"<p>Increases the reference count on pattern by one.</p>","abstract":false,"args":[],"args_string":" : Pattern","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L347","def":{"name":"reference","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Pattern","visibility":"Public","body":"Pattern.new(LibCairo.pattern_reference(@pattern))"}},{"id":"reference_count:UInt32-instance-method","html_id":"reference_count:UInt32-instance-method","name":"reference_count","doc":"Returns the current reference count of pattern .","summary":"<p>Returns the current reference count of pattern .</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L352","def":{"name":"reference_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"LibCairo.pattern_get_reference_count(@pattern)"}},{"id":"rgba:RGBA-instance-method","html_id":"rgba:RGBA-instance-method","name":"rgba","doc":"Gets the solid color for a solid color pattern.\n\n###Returns\n`RGBA` structure.\n\n###Raises\n`StatusException` with *status* of `Status::PatternTypeMismatch` if the pattern is not a solid color pattern.","summary":"<p>Gets the solid color for a solid color pattern.</p>","abstract":false,"args":[],"args_string":" : RGBA","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L674","def":{"name":"rgba","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"RGBA","visibility":"Public","body":"status = Status.new((LibCairo.pattern_get_rgba(@pattern, out red, out green, out blue, out alpha)).value)\nif status.success?\nelse\n  raise(StatusException.new(status))\nend\nRGBA.new(red, green, blue, alpha)\n"}},{"id":"set_acquire(acquire:LibCairo::RasterSourceAcquireFuncT,release:LibCairo::RasterSourceReleaseFuncT)-instance-method","html_id":"set_acquire(acquire:LibCairo::RasterSourceAcquireFuncT,release:LibCairo::RasterSourceReleaseFuncT)-instance-method","name":"set_acquire","doc":"Specifies the callbacks used to generate the image surface for a rendering operation (acquire)\nand the function used to cleanup that surface afterwards.\n\nThe acquire callback should create a surface (preferably an image surface created to match\nthe target using `Surface#create_similar_image`) that defines at least the region of interest\nspecified by extents. The surface is allowed to be the entire sample area, but if it does contain\na subsection of the sample area, the surface extents should be provided by setting the device offset\n(along with its width and height) using `Surface#set_device_offset`.\n\n###Parameters\n- **acquire** acquire callback\n- **release** release callback","summary":"<p>Specifies the callbacks used to generate the image surface for a rendering operation (acquire) and the function used to cleanup that surface afterwards.</p>","abstract":false,"args":[{"name":"acquire","doc":null,"default_value":"","external_name":"acquire","restriction":"LibCairo::RasterSourceAcquireFuncT"},{"name":"release","doc":null,"default_value":"","external_name":"release","restriction":"LibCairo::RasterSourceReleaseFuncT"}],"args_string":"(acquire : LibCairo::RasterSourceAcquireFuncT, release : LibCairo::RasterSourceReleaseFuncT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L282","def":{"name":"set_acquire","args":[{"name":"acquire","doc":null,"default_value":"","external_name":"acquire","restriction":"LibCairo::RasterSourceAcquireFuncT"},{"name":"release","doc":null,"default_value":"","external_name":"release","restriction":"LibCairo::RasterSourceReleaseFuncT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.raster_source_pattern_set_acquire(@pattern, acquire, release)\nself\n"}},{"id":"set_control_point(point_num:UInt32,x:Float64,y:Float64)-instance-method","html_id":"set_control_point(point_num:UInt32,x:Float64,y:Float64)-instance-method","name":"set_control_point","doc":"Set an internal control point of the current patch.\n\nValid values for *point_num* are from 0 to 3 and identify the control points as explained in `Pattern#create_mesh`.\n\nNOTE: If pattern is not a mesh pattern then pattern will be put into an error status with a status\nof `Status::PatternTypeMismatch`. If *point_num* is not valid, pattern will be put into an error status with a status\nof `Status::InvalidIndex`. If pattern has no current patch, pattern will be put into an error status with a status\nof `Status::InvalidMeshConstruction`.\n\n###Parameters\n- **point_num** the control point to set the position for\n- **x** the X coordinate of the control point\n- **y** the Y coordinate of the control point","summary":"<p>Set an internal control point of the current patch.</p>","abstract":false,"args":[{"name":"point_num","doc":null,"default_value":"","external_name":"point_num","restriction":"UInt32"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"args_string":"(point_num : UInt32, x : Float64, y : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L540","def":{"name":"set_control_point","args":[{"name":"point_num","doc":null,"default_value":"","external_name":"point_num","restriction":"UInt32"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.mesh_pattern_set_control_point(@pattern, point_num, x, y)\nself\n"}},{"id":"set_corner_color(corner_num:UInt32,red:Float64,green:Float64,blue:Float64)-instance-method","html_id":"set_corner_color(corner_num:UInt32,red:Float64,green:Float64,blue:Float64)-instance-method","name":"set_corner_color","doc":"Sets the color of a corner of the current patch in a mesh pattern.\n\nThe color is specified in the same way as in `Context#source=`.\n\nValid values for *corner_num* are from 0 to 3 and identify the corners as explained in `Pattern#create_mesh`.\n\nNOTE: If pattern is not a mesh pattern then pattern will be put into an error status with a status of\n`Status::PatternTypeMismatch`. If *corner_num* is not valid, pattern will be put into an error status with\na status of `Status::InvalidIndex`. If pattern has no current patch, pattern will be put into an error\nstatus with a status of `Status::InvalidMeshConstruction`.\n\n###Parameters\n- **corner_num** the corner to set the color for\n- **red** red component of color\n- **green** green component of color\n- **blue** blue component of color","summary":"<p>Sets the color of a corner of the current patch in a mesh pattern.</p>","abstract":false,"args":[{"name":"corner_num","doc":null,"default_value":"","external_name":"corner_num","restriction":"UInt32"},{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"}],"args_string":"(corner_num : UInt32, red : Float64, green : Float64, blue : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L561","def":{"name":"set_corner_color","args":[{"name":"corner_num","doc":null,"default_value":"","external_name":"corner_num","restriction":"UInt32"},{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.mesh_pattern_set_corner_color_rgb(@pattern, corner_num, red, green, blue)\nself\n"}},{"id":"set_corner_color_rgba(corner_num:UInt32,red:Float64,green:Float64,blue:Float64,alpha:Float64)-instance-method","html_id":"set_corner_color_rgba(corner_num:UInt32,red:Float64,green:Float64,blue:Float64,alpha:Float64)-instance-method","name":"set_corner_color_rgba","doc":"Sets the color of a corner of the current patch in a mesh pattern.\n\nThe color is specified in the same way as in `Context#source=`.\n\nValid values for *corner_num* are from 0 to 3 and identify the corners as explained in `Pattern#create_mesh`.\n\nNOTE: If pattern is not a mesh pattern then pattern will be put into an error status with a status of\n`Status::PatternTypeMismatch`. If *corner_num* is not valid, pattern will be put into an error status with\na status of `Status::InvalidIndex`. If pattern has no current patch, pattern will be put into an error status\nwith a status of `Status::InvalidMeshConstruction`.\n\n###Parameters\n- **corner_num** the corner to set the color for\n- **red** red component of color\n- **green** green component of color\n- **blue** blue component of color\n- **alpha** alpha component of color","summary":"<p>Sets the color of a corner of the current patch in a mesh pattern.</p>","abstract":false,"args":[{"name":"corner_num","doc":null,"default_value":"","external_name":"corner_num","restriction":"UInt32"},{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"},{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"args_string":"(corner_num : UInt32, red : Float64, green : Float64, blue : Float64, alpha : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L583","def":{"name":"set_corner_color_rgba","args":[{"name":"corner_num","doc":null,"default_value":"","external_name":"corner_num","restriction":"UInt32"},{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"},{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.mesh_pattern_set_corner_color_rgba(@pattern, corner_num, red, green, blue, alpha)\nself\n"}},{"id":"set_user_data(key:UserDataKey,user_data:Pointer(Void),destroy:LibCairo::DestroyFuncT):Status-instance-method","html_id":"set_user_data(key:UserDataKey,user_data:Pointer(Void),destroy:LibCairo::DestroyFuncT):Status-instance-method","name":"set_user_data","doc":"Attach user data to pattern. To remove user data from a surface, call this function with the key that was used to set it and Nil for data.\n\n###Parameters\n- **key** the address of a `UserDataKey` to attach the user data to\n- **user_data** the user data to attach to the `Pattern`\n- **destroy** a `LibCairo::DestroyFuncT` which will be called when the `Context` is destroyed\nor when new user data is attached using the same key.\n\n###Returns\n`Status::Success` or `Status::NoMemory` if a slot could not be allocated for the user data.","summary":"<p>Attach user data to pattern.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"},{"name":"user_data","doc":null,"default_value":"","external_name":"user_data","restriction":"::Pointer(Void)"},{"name":"destroy","doc":null,"default_value":"","external_name":"destroy","restriction":"LibCairo::DestroyFuncT"}],"args_string":"(key : UserDataKey, user_data : Pointer(Void), destroy : LibCairo::DestroyFuncT) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L386","def":{"name":"set_user_data","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"},{"name":"user_data","doc":null,"default_value":"","external_name":"user_data","restriction":"::Pointer(Void)"},{"name":"destroy","doc":null,"default_value":"","external_name":"destroy","restriction":"LibCairo::DestroyFuncT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.pattern_set_user_data(@pattern, key.to_unsafe, user_data, destroy)).value)"}},{"id":"snapshot:LibCairo::RasterSourceSnapshotFuncT-instance-method","html_id":"snapshot:LibCairo::RasterSourceSnapshotFuncT-instance-method","name":"snapshot","doc":"Queries the current snapshot callback.\n\n###Returns\nThe current snapshot callback.","summary":"<p>Queries the current snapshot callback.</p>","abstract":false,"args":[],"args_string":" : LibCairo::RasterSourceSnapshotFuncT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L291","def":{"name":"snapshot","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::RasterSourceSnapshotFuncT","visibility":"Public","body":"LibCairo.raster_source_pattern_get_snapshot(@pattern)"}},{"id":"snapshot=(snapshot:LibCairo::RasterSourceSnapshotFuncT)-instance-method","html_id":"snapshot=(snapshot:LibCairo::RasterSourceSnapshotFuncT)-instance-method","name":"snapshot=","doc":"Sets the callback that will be used whenever a snapshot is taken of the pattern,\nthat is whenever the current contents of the pattern should be preserved for later use.\nThis is typically invoked whilst printing.\n\n###Parameters\n- **snapshot** snapshot callback","summary":"<p>Sets the callback that will be used whenever a snapshot is taken of the pattern, that is whenever the current contents of the pattern should be preserved for later use.</p>","abstract":false,"args":[{"name":"snapshot","doc":null,"default_value":"","external_name":"snapshot","restriction":"LibCairo::RasterSourceSnapshotFuncT"}],"args_string":"(snapshot : LibCairo::RasterSourceSnapshotFuncT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L301","def":{"name":"snapshot=","args":[{"name":"snapshot","doc":null,"default_value":"","external_name":"snapshot","restriction":"LibCairo::RasterSourceSnapshotFuncT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.raster_source_pattern_set_snapshot(@pattern, snapshot)\nself\n"}},{"id":"status:Status-instance-method","html_id":"status:Status-instance-method","name":"status","doc":"Checks whether an error has previously occurred for this pattern.\n\n###Returns\n`Status::Success`, `Status::NoMemory`, `Status::InvalidMatrix`, `Status::PatternTypeMismatch`, or `Status::InvalidMeshConstruction`.","summary":"<p>Checks whether an error has previously occurred for this pattern.</p>","abstract":false,"args":[],"args_string":" : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L360","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.pattern_status(@pattern)).value)"}},{"id":"surface:Surface-instance-method","html_id":"surface:Surface-instance-method","name":"surface","doc":"Gets the surface of a surface pattern. The reference returned in surface is owned by the pattern;\nthe caller should call `Surface#reference` if the surface is to be retained.\n\n###Returns\n`Surface` object.\n\n###Raises\n`StatusException` with *status* of `Status::PatternTypeMismatch` if the pattern is not a surface pattern.","summary":"<p>Gets the surface of a surface pattern.</p>","abstract":false,"args":[],"args_string":" : Surface","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L688","def":{"name":"surface","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Surface","visibility":"Public","body":"status = Status.new((LibCairo.pattern_get_surface(@pattern, out surface)).value)\nif status.success?\nelse\n  raise(StatusException.new(status))\nend\nSurface.new(surface)\n"}},{"id":"to_unsafe:LibCairo::PPatternT-instance-method","html_id":"to_unsafe:LibCairo::PPatternT-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PPatternT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L843","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PPatternT","visibility":"Public","body":"@pattern"}},{"id":"type:PatternType-instance-method","html_id":"type:PatternType-instance-method","name":"type","doc":"Get the pattern's type. See `PatternType` for available types.","summary":"<p>Get the pattern's type.</p>","abstract":false,"args":[],"args_string":" : PatternType","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L391","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"PatternType","visibility":"Public","body":"PatternType.new(LibCairo.pattern_get_type(@pattern))"}},{"id":"user_data(key:UserDataKey):Pointer(Void)-instance-method","html_id":"user_data(key:UserDataKey):Pointer(Void)-instance-method","name":"user_data","doc":"Return user data previously attached to pattern using the specified key.\nIf no user data has been attached with the given key this function returns Nil.\n\n###Parameters\n- **key** the address of the `UserDataKey` the user data was attached to\n\n###Returns\nThe user data previously attached or Nil.","summary":"<p>Return user data previously attached to pattern using the specified key.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"}],"args_string":"(key : UserDataKey) : Pointer(Void)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern.cr#L372","def":{"name":"user_data","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Pointer(Void)","visibility":"Public","body":"LibCairo.pattern_get_user_data(@pattern, key.to_unsafe)"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/PatternType","path":"Cairo/PatternType.html","kind":"enum","full_name":"Cairo::PatternType","name":"PatternType","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/pattern_type.cr","line_number":15,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern_type.cr#L15"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Solid","name":"Solid","value":"0","doc":"The pattern is a solid (uniform) color. It may be opaque or translucent.","summary":"<p>The pattern is a solid (uniform) color.</p>"},{"id":"Surface","name":"Surface","value":"1","doc":"The pattern is a based on a surface (an image).","summary":"<p>The pattern is a based on a surface (an image).</p>"},{"id":"Linear","name":"Linear","value":"2","doc":"The pattern is a linear gradient.","summary":"<p>The pattern is a linear gradient.</p>"},{"id":"Radial","name":"Radial","value":"3","doc":"The pattern is a radial gradient.","summary":"<p>The pattern is a radial gradient.</p>"},{"id":"Mesh","name":"Mesh","value":"4","doc":"The pattern is a mesh.","summary":"<p>The pattern is a mesh.</p>"},{"id":"RasterSource","name":"RasterSource","value":"5","doc":"The pattern is a user pattern providing raster data.","summary":"<p>The pattern is a user pattern providing raster data.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"`PatternType` is used to describe the type of a given pattern.\n\nThe type of a pattern is determined by the function used to create it.\nThe `Pattern#create_rgb` and `Pattern#create_rgba` functions create `PatternType::Solid` patterns.\n\nThe pattern type can be queried with `Pattern#type`.\n\nMost `Pattern` functions can be called with a pattern of any type,\n(though trying to change the extend or filter for a solid pattern will have no effect).\nA notable exception is `Pattern#add_color_stop` which must only be called with gradient patterns\n(either `PatternType::Linear` or `PatternType::Radial`). Otherwise the pattern will be shutdown and put into an error state.\n\nNew entries may be added in future versions.","summary":"<p><code><a href=\"../Cairo/PatternType.html\">PatternType</a></code> is used to describe the type of a given pattern.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"linear?-instance-method","html_id":"linear?-instance-method","name":"linear?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern_type.cr#L23","def":{"name":"linear?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Linear"}},{"id":"mesh?-instance-method","html_id":"mesh?-instance-method","name":"mesh?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern_type.cr#L29","def":{"name":"mesh?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Mesh"}},{"id":"radial?-instance-method","html_id":"radial?-instance-method","name":"radial?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern_type.cr#L26","def":{"name":"radial?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Radial"}},{"id":"raster_source?-instance-method","html_id":"raster_source?-instance-method","name":"raster_source?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern_type.cr#L32","def":{"name":"raster_source?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RasterSource"}},{"id":"solid?-instance-method","html_id":"solid?-instance-method","name":"solid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern_type.cr#L17","def":{"name":"solid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Solid"}},{"id":"surface?-instance-method","html_id":"surface?-instance-method","name":"surface?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pattern_type.cr#L20","def":{"name":"surface?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Surface"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/PdfSurface","path":"Cairo/PdfSurface.html","kind":"class","full_name":"Cairo::PdfSurface","name":"PdfSurface","abstract":false,"superclass":{"html_id":"cairo/Cairo/Surface","kind":"class","full_name":"Cairo::Surface","name":"Surface"},"ancestors":[{"html_id":"cairo/Cairo/Surface","kind":"class","full_name":"Cairo::Surface","name":"Surface"},{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/pdf_surface.cr","line_number":6,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pdf_surface.cr#L6"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[{"id":"versions:Array(PdfVersion)-class-method","html_id":"versions:Array(PdfVersion)-class-method","name":"versions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(PdfVersion)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pdf_surface.cr#L6","def":{"name":"versions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(PdfVersion)","visibility":"Public","body":"LibCairo.pdf_get_versions(out version, out num_versions)\nif num_versions == 0\n  return [] of PdfVersion\nend\nArray(PdfVersion).new(num_versions) do |i|\n  PdfVersion.new(version[i].value)\nend\n"}}],"constructors":[{"id":"new(write_func:LibCairo::WriteFuncT,closure:Pointer(Void),width_in_points:Float64,height_in_points:Float64)-class-method","html_id":"new(write_func:LibCairo::WriteFuncT,closure:Pointer(Void),width_in_points:Float64,height_in_points:Float64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"write_func","doc":null,"default_value":"","external_name":"write_func","restriction":"LibCairo::WriteFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"},{"name":"width_in_points","doc":null,"default_value":"","external_name":"width_in_points","restriction":"Float64"},{"name":"height_in_points","doc":null,"default_value":"","external_name":"height_in_points","restriction":"Float64"}],"args_string":"(write_func : LibCairo::WriteFuncT, closure : Pointer(Void), width_in_points : Float64, height_in_points : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pdf_surface.cr#L6","def":{"name":"new","args":[{"name":"write_func","doc":null,"default_value":"","external_name":"write_func","restriction":"LibCairo::WriteFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"},{"name":"width_in_points","doc":null,"default_value":"","external_name":"width_in_points","restriction":"Float64"},{"name":"height_in_points","doc":null,"default_value":"","external_name":"height_in_points","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(write_func, closure, width_in_points, height_in_points)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(filename:String,width_in_points:Float64,height_in_points:Float64)-class-method","html_id":"new(filename:String,width_in_points:Float64,height_in_points:Float64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"width_in_points","doc":null,"default_value":"","external_name":"width_in_points","restriction":"Float64"},{"name":"height_in_points","doc":null,"default_value":"","external_name":"height_in_points","restriction":"Float64"}],"args_string":"(filename : String, width_in_points : Float64, height_in_points : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pdf_surface.cr#L6","def":{"name":"new","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"width_in_points","doc":null,"default_value":"","external_name":"width_in_points","restriction":"Float64"},{"name":"height_in_points","doc":null,"default_value":"","external_name":"height_in_points","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(filename, width_in_points, height_in_points)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"restrict_to_version(version:PdfVersion)-instance-method","html_id":"restrict_to_version(version:PdfVersion)-instance-method","name":"restrict_to_version","doc":null,"summary":null,"abstract":false,"args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"PdfVersion"}],"args_string":"(version : PdfVersion)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pdf_surface.cr#L6","def":{"name":"restrict_to_version","args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"PdfVersion"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.pdf_surface_restrict_to_version(to_unsafe, LibCairo::PdfVersionT.new(version.value))\nself\n"}},{"id":"set_size(width_in_points:Float64,height_in_points:Float64)-instance-method","html_id":"set_size(width_in_points:Float64,height_in_points:Float64)-instance-method","name":"set_size","doc":null,"summary":null,"abstract":false,"args":[{"name":"width_in_points","doc":null,"default_value":"","external_name":"width_in_points","restriction":"Float64"},{"name":"height_in_points","doc":null,"default_value":"","external_name":"height_in_points","restriction":"Float64"}],"args_string":"(width_in_points : Float64, height_in_points : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pdf_surface.cr#L6","def":{"name":"set_size","args":[{"name":"width_in_points","doc":null,"default_value":"","external_name":"width_in_points","restriction":"Float64"},{"name":"height_in_points","doc":null,"default_value":"","external_name":"height_in_points","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.pdf_surface_set_size(to_unsafe, width_in_points, height_in_points)\nself\n"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/PdfVersion","path":"Cairo/PdfVersion.html","kind":"enum","full_name":"Cairo::PdfVersion","name":"PdfVersion","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/pdf_version.cr","line_number":5,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pdf_version.cr#L5"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"V_1_4","name":"V_1_4","value":"0","doc":null,"summary":null},{"id":"V_1_5","name":"V_1_5","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pdf_version.cr#L5","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.new(LibCairo.pdf_version_to_string(LibCairo::PdfVersionT.new(self)))"}},{"id":"v_1_4?-instance-method","html_id":"v_1_4?-instance-method","name":"v_1_4?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pdf_version.cr#L5","def":{"name":"v_1_4?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == V_1_4"}},{"id":"v_1_5?-instance-method","html_id":"v_1_5?-instance-method","name":"v_1_5?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/pdf_version.cr#L5","def":{"name":"v_1_5?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == V_1_5"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Point","path":"Cairo/Point.html","kind":"struct","full_name":"Cairo::Point","name":"Point","abstract":false,"superclass":{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/point.cr","line_number":6,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/point.cr#L6"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(x:Float64,y:Float64)-class-method","html_id":"new(x:Float64,y:Float64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"args_string":"(x : Float64, y : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/point.cr#L13","def":{"name":"new","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(x, y)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(point:LibCairo::PathDataPointT)-class-method","html_id":"new(point:LibCairo::PathDataPointT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"LibCairo::PathDataPointT"}],"args_string":"(point : LibCairo::PathDataPointT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/point.cr#L16","def":{"name":"new","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"LibCairo::PathDataPointT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(point)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/point.cr#L10","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_path_data_point:LibCairo::PathDataPointT-instance-method","html_id":"to_path_data_point:LibCairo::PathDataPointT-instance-method","name":"to_path_data_point","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PathDataPointT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/point.cr#L21","def":{"name":"to_path_data_point","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PathDataPointT","visibility":"Public","body":"point = LibCairo::PathDataPointT.new\npoint.x = @x\npoint.y = @y\npoint\n"}},{"id":"x:Float64-instance-method","html_id":"x:Float64-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/point.cr#L7","def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@x"}},{"id":"x=(x:Float64)-instance-method","html_id":"x=(x:Float64)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"}],"args_string":"(x : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/point.cr#L7","def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x = x"}},{"id":"y:Float64-instance-method","html_id":"y:Float64-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/point.cr#L8","def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@y"}},{"id":"y=(y:Float64)-instance-method","html_id":"y=(y:Float64)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"args_string":"(y : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/point.cr#L8","def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y = y"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/PsLevel","path":"Cairo/PsLevel.html","kind":"enum","full_name":"Cairo::PsLevel","name":"PsLevel","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/ps_level.cr","line_number":5,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/ps_level.cr#L5"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Level2","name":"Level2","value":"0","doc":null,"summary":null},{"id":"Level3","name":"Level3","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"level2?-instance-method","html_id":"level2?-instance-method","name":"level2?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/ps_level.cr#L5","def":{"name":"level2?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Level2"}},{"id":"level3?-instance-method","html_id":"level3?-instance-method","name":"level3?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/ps_level.cr#L5","def":{"name":"level3?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Level3"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/ps_level.cr#L5","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.new(LibCairo.ps_level_to_string(LibCairo::PsLevelT.new(self)))"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/PsSurface","path":"Cairo/PsSurface.html","kind":"class","full_name":"Cairo::PsSurface","name":"PsSurface","abstract":false,"superclass":{"html_id":"cairo/Cairo/Surface","kind":"class","full_name":"Cairo::Surface","name":"Surface"},"ancestors":[{"html_id":"cairo/Cairo/Surface","kind":"class","full_name":"Cairo::Surface","name":"Surface"},{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/ps_surface.cr","line_number":5,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/ps_surface.cr#L5"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[{"id":"levels:Array(PsLevel)-class-method","html_id":"levels:Array(PsLevel)-class-method","name":"levels","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(PsLevel)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/ps_surface.cr#L5","def":{"name":"levels","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(PsLevel)","visibility":"Public","body":"LibCairo.ps_get_levels(out levels, out num_levels)\nif num_levels == 0\n  return [] of PsLevel\nend\nArray(PsLevel).new(num_levels) do |i|\n  PsLevel.new(levels[i].value)\nend\n"}}],"constructors":[{"id":"new(write_func:LibCairo::WriteFuncT,closure:Pointer(Void),width_in_points:Float64,height_in_points:Float64)-class-method","html_id":"new(write_func:LibCairo::WriteFuncT,closure:Pointer(Void),width_in_points:Float64,height_in_points:Float64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"write_func","doc":null,"default_value":"","external_name":"write_func","restriction":"LibCairo::WriteFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"},{"name":"width_in_points","doc":null,"default_value":"","external_name":"width_in_points","restriction":"Float64"},{"name":"height_in_points","doc":null,"default_value":"","external_name":"height_in_points","restriction":"Float64"}],"args_string":"(write_func : LibCairo::WriteFuncT, closure : Pointer(Void), width_in_points : Float64, height_in_points : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/ps_surface.cr#L5","def":{"name":"new","args":[{"name":"write_func","doc":null,"default_value":"","external_name":"write_func","restriction":"LibCairo::WriteFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"},{"name":"width_in_points","doc":null,"default_value":"","external_name":"width_in_points","restriction":"Float64"},{"name":"height_in_points","doc":null,"default_value":"","external_name":"height_in_points","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(write_func, closure, width_in_points, height_in_points)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(filename:String,width_in_points:Float64,height_in_points:Float64)-class-method","html_id":"new(filename:String,width_in_points:Float64,height_in_points:Float64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"width_in_points","doc":null,"default_value":"","external_name":"width_in_points","restriction":"Float64"},{"name":"height_in_points","doc":null,"default_value":"","external_name":"height_in_points","restriction":"Float64"}],"args_string":"(filename : String, width_in_points : Float64, height_in_points : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/ps_surface.cr#L5","def":{"name":"new","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"width_in_points","doc":null,"default_value":"","external_name":"width_in_points","restriction":"Float64"},{"name":"height_in_points","doc":null,"default_value":"","external_name":"height_in_points","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(filename, width_in_points, height_in_points)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dsc_begin_page_setup-instance-method","html_id":"dsc_begin_page_setup-instance-method","name":"dsc_begin_page_setup","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/ps_surface.cr#L5","def":{"name":"dsc_begin_page_setup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.ps_surface_dsc_begin_page_setup(to_unsafe)\nself\n"}},{"id":"dsc_begin_setup-instance-method","html_id":"dsc_begin_setup-instance-method","name":"dsc_begin_setup","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/ps_surface.cr#L5","def":{"name":"dsc_begin_setup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.ps_surface_dsc_begin_setup(to_unsafe)\nself\n"}},{"id":"dsc_comment(comment:String)-instance-method","html_id":"dsc_comment(comment:String)-instance-method","name":"dsc_comment","doc":null,"summary":null,"abstract":false,"args":[{"name":"comment","doc":null,"default_value":"","external_name":"comment","restriction":"String"}],"args_string":"(comment : String)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/ps_surface.cr#L5","def":{"name":"dsc_comment","args":[{"name":"comment","doc":null,"default_value":"","external_name":"comment","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.ps_surface_dsc_comment(to_unsafe, comment.to_unsafe)\nself\n"}},{"id":"eps:Bool-instance-method","html_id":"eps:Bool-instance-method","name":"eps","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/ps_surface.cr#L5","def":{"name":"eps","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(LibCairo.ps_surface_get_eps(to_unsafe)) == 1"}},{"id":"eps=(eps:Bool)-instance-method","html_id":"eps=(eps:Bool)-instance-method","name":"eps=","doc":null,"summary":null,"abstract":false,"args":[{"name":"eps","doc":null,"default_value":"","external_name":"eps","restriction":"Bool"}],"args_string":"(eps : Bool)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/ps_surface.cr#L5","def":{"name":"eps=","args":[{"name":"eps","doc":null,"default_value":"","external_name":"eps","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.ps_surface_set_eps(to_unsafe, eps ? 1 : 0)\nself\n"}},{"id":"ps_surface_restrict_to_level(level:PsLevel)-instance-method","html_id":"ps_surface_restrict_to_level(level:PsLevel)-instance-method","name":"ps_surface_restrict_to_level","doc":null,"summary":null,"abstract":false,"args":[{"name":"level","doc":null,"default_value":"","external_name":"level","restriction":"PsLevel"}],"args_string":"(level : PsLevel)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/ps_surface.cr#L5","def":{"name":"ps_surface_restrict_to_level","args":[{"name":"level","doc":null,"default_value":"","external_name":"level","restriction":"PsLevel"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.ps_surface_restrict_to_level(to_unsafe, LibCairo::PsLevelT.new(level.value))\nself\n"}},{"id":"set_size(width_in_points:Float64,height_in_points:Float64)-instance-method","html_id":"set_size(width_in_points:Float64,height_in_points:Float64)-instance-method","name":"set_size","doc":null,"summary":null,"abstract":false,"args":[{"name":"width_in_points","doc":null,"default_value":"","external_name":"width_in_points","restriction":"Float64"},{"name":"height_in_points","doc":null,"default_value":"","external_name":"height_in_points","restriction":"Float64"}],"args_string":"(width_in_points : Float64, height_in_points : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/ps_surface.cr#L5","def":{"name":"set_size","args":[{"name":"width_in_points","doc":null,"default_value":"","external_name":"width_in_points","restriction":"Float64"},{"name":"height_in_points","doc":null,"default_value":"","external_name":"height_in_points","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.ps_surface_set_size(to_unsafe, width_in_points, height_in_points)\nself\n"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Rectangle","path":"Cairo/Rectangle.html","kind":"struct","full_name":"Cairo::Rectangle","name":"Rectangle","abstract":false,"superclass":{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/rectangle.cr","line_number":9,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle.cr#L9"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"A data structure for holding a rectangle.\n\nWrapper for `LibCairo::RectangleT` structure.","summary":"<p>A data structure for holding a rectangle.</p>","class_methods":[],"constructors":[{"id":"new(x:Float64,y:Float64,width:Float64,height:Float64)-class-method","html_id":"new(x:Float64,y:Float64,width:Float64,height:Float64)-class-method","name":"new","doc":"Creates new rectangle using specified coordinates of top left corner (x, y), width and height.","summary":"<p>Creates new rectangle using specified coordinates of top left corner (x, y), width and height.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Float64"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"}],"args_string":"(x : Float64, y : Float64, width : Float64, height : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle.cr#L16","def":{"name":"new","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Float64"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(x, y, width, height)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(rect:LibCairo::RectangleT)-class-method","html_id":"new(rect:LibCairo::RectangleT)-class-method","name":"new","doc":"Creates new rectangle from `LibCairo::RectangleT`.","summary":"<p>Creates new rectangle from <code>LibCairo::RectangleT</code>.</p>","abstract":false,"args":[{"name":"rect","doc":null,"default_value":"","external_name":"rect","restriction":"LibCairo::RectangleT"}],"args_string":"(rect : LibCairo::RectangleT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle.cr#L25","def":{"name":"new","args":[{"name":"rect","doc":null,"default_value":"","external_name":"rect","restriction":"LibCairo::RectangleT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(rect)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Creates uninitialized rectangle.","summary":"<p>Creates uninitialized rectangle.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle.cr#L11","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"height:Float64-instance-method","html_id":"height:Float64-instance-method","name":"height","doc":"Height of the rectangle.","summary":"<p>Height of the rectangle.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle.cr#L59","def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@rect.height"}},{"id":"height=(height:Float64)-instance-method","html_id":"height=(height:Float64)-instance-method","name":"height=","doc":"Setter for height.","summary":"<p>Setter for height.</p>","abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"}],"args_string":"(height : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle.cr#L64","def":{"name":"height=","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rect.height = height"}},{"id":"to_cairo_rectange:LibCairo::RectangleT-instance-method","html_id":"to_cairo_rectange:LibCairo::RectangleT-instance-method","name":"to_cairo_rectange","doc":"Returns undelying `LibCairo::RectangleT` structure.","summary":"<p>Returns undelying <code>LibCairo::RectangleT</code> structure.</p>","abstract":false,"args":[],"args_string":" : LibCairo::RectangleT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle.cr#L69","def":{"name":"to_cairo_rectange","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::RectangleT","visibility":"Public","body":"@rect"}},{"id":"to_unsafe:LibCairo::PRectangleT-instance-method","html_id":"to_unsafe:LibCairo::PRectangleT-instance-method","name":"to_unsafe","doc":"Pointer of underlying `LibCairo::RectangleT` structure.","summary":"<p>Pointer of underlying <code>LibCairo::RectangleT</code> structure.</p>","abstract":false,"args":[],"args_string":" : LibCairo::PRectangleT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle.cr#L74","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PRectangleT","visibility":"Public","body":"pointerof(@rect)"}},{"id":"width:Float64-instance-method","html_id":"width:Float64-instance-method","name":"width","doc":"Width of the rectangle.","summary":"<p>Width of the rectangle.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle.cr#L49","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@rect.width"}},{"id":"width=(width:Float64)-instance-method","html_id":"width=(width:Float64)-instance-method","name":"width=","doc":"Setter for width.","summary":"<p>Setter for width.</p>","abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Float64"}],"args_string":"(width : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle.cr#L54","def":{"name":"width=","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rect.width = width"}},{"id":"x:Float64-instance-method","html_id":"x:Float64-instance-method","name":"x","doc":"X coordinate of the left side of the rectangle.","summary":"<p>X coordinate of the left side of the rectangle.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle.cr#L29","def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@rect.x"}},{"id":"x=(x:Float64)-instance-method","html_id":"x=(x:Float64)-instance-method","name":"x=","doc":"Setter for X coordinate.","summary":"<p>Setter for X coordinate.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"}],"args_string":"(x : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle.cr#L34","def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rect.x = x"}},{"id":"y:Float64-instance-method","html_id":"y:Float64-instance-method","name":"y","doc":"Y coordinate of the the top side of the rectangle.","summary":"<p>Y coordinate of the the top side of the rectangle.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle.cr#L39","def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@rect.y"}},{"id":"y=(y:Float64)-instance-method","html_id":"y=(y:Float64)-instance-method","name":"y=","doc":"Setter for Y coordinate.","summary":"<p>Setter for Y coordinate.</p>","abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"args_string":"(y : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle.cr#L44","def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rect.y = y"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/RectangleInt","path":"Cairo/RectangleInt.html","kind":"struct","full_name":"Cairo::RectangleInt","name":"RectangleInt","abstract":false,"superclass":{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/rectangle_int.cr","line_number":9,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_int.cr#L9"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"A data structure for holding a rectangle.\n\nWrapper for LibCairo::RectangleIntT","summary":"<p>A data structure for holding a rectangle.</p>","class_methods":[],"constructors":[{"id":"new(x:Int32,y:Int32,width:Int32,height:Int32)-class-method","html_id":"new(x:Int32,y:Int32,width:Int32,height:Int32)-class-method","name":"new","doc":"Creates new rectangle using specified coordinates of top left corner (x, y), width and height.","summary":"<p>Creates new rectangle using specified coordinates of top left corner (x, y), width and height.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(x : Int32, y : Int32, width : Int32, height : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_int.cr#L16","def":{"name":"new","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(x, y, width, height)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(rect:LibCairo::RectangleIntT)-class-method","html_id":"new(rect:LibCairo::RectangleIntT)-class-method","name":"new","doc":"Creates new rectangle from `LibCairo::RectangleT`.","summary":"<p>Creates new rectangle from <code>LibCairo::RectangleT</code>.</p>","abstract":false,"args":[{"name":"rect","doc":null,"default_value":"","external_name":"rect","restriction":"LibCairo::RectangleIntT"}],"args_string":"(rect : LibCairo::RectangleIntT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_int.cr#L25","def":{"name":"new","args":[{"name":"rect","doc":null,"default_value":"","external_name":"rect","restriction":"LibCairo::RectangleIntT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(rect)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Creates uninitialized rectangle.","summary":"<p>Creates uninitialized rectangle.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_int.cr#L11","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"height:Int32-instance-method","html_id":"height:Int32-instance-method","name":"height","doc":"Height of the rectangle.","summary":"<p>Height of the rectangle.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_int.cr#L59","def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@rect.height"}},{"id":"height=(height:Int32)-instance-method","html_id":"height=(height:Int32)-instance-method","name":"height=","doc":"Setter for height.","summary":"<p>Setter for height.</p>","abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(height : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_int.cr#L64","def":{"name":"height=","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rect.height = height"}},{"id":"to_cairo_rectangle:LibCairo::RectangleIntT-instance-method","html_id":"to_cairo_rectangle:LibCairo::RectangleIntT-instance-method","name":"to_cairo_rectangle","doc":"Returns undelying `LibCairo::RectangleIntT` structure.","summary":"<p>Returns undelying <code>LibCairo::RectangleIntT</code> structure.</p>","abstract":false,"args":[],"args_string":" : LibCairo::RectangleIntT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_int.cr#L69","def":{"name":"to_cairo_rectangle","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::RectangleIntT","visibility":"Public","body":"@rect"}},{"id":"to_unsafe:LibCairo::PRectangleIntT-instance-method","html_id":"to_unsafe:LibCairo::PRectangleIntT-instance-method","name":"to_unsafe","doc":"Pointer of underlying `LibCairo::RectangleIntT` structure.","summary":"<p>Pointer of underlying <code>LibCairo::RectangleIntT</code> structure.</p>","abstract":false,"args":[],"args_string":" : LibCairo::PRectangleIntT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_int.cr#L74","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PRectangleIntT","visibility":"Public","body":"pointerof(@rect)"}},{"id":"width:Int32-instance-method","html_id":"width:Int32-instance-method","name":"width","doc":"Width of the rectangle.","summary":"<p>Width of the rectangle.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_int.cr#L49","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@rect.width"}},{"id":"width=(width:Int32)-instance-method","html_id":"width=(width:Int32)-instance-method","name":"width=","doc":"Setter for width.","summary":"<p>Setter for width.</p>","abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"args_string":"(width : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_int.cr#L54","def":{"name":"width=","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rect.width = width"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":"X coordinate of the left side of the rectangle.","summary":"<p>X coordinate of the left side of the rectangle.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_int.cr#L29","def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@rect.x"}},{"id":"x=(x:Int32)-instance-method","html_id":"x=(x:Int32)-instance-method","name":"x=","doc":"Setter for X coordinate.","summary":"<p>Setter for X coordinate.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(x : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_int.cr#L34","def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rect.x = x"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":"Y coordinate of the the top side of the rectangle.","summary":"<p>Y coordinate of the the top side of the rectangle.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_int.cr#L39","def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@rect.y"}},{"id":"y=(y:Int32)-instance-method","html_id":"y=(y:Int32)-instance-method","name":"y=","doc":"Setter for Y coordinate.","summary":"<p>Setter for Y coordinate.</p>","abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(y : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_int.cr#L44","def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rect.y = y"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/RectangleList","path":"Cairo/RectangleList.html","kind":"class","full_name":"Cairo::RectangleList","name":"RectangleList","abstract":false,"superclass":{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"cairo/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"cairo/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"cairo/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/rectangle_list.cr","line_number":11,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_list.cr#L11"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"cairo/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"A data structure for holding a dynamically allocated array of rectangles.\n\nWraper for LibCairo::RectangleListT","summary":"<p>A data structure for holding a dynamically allocated array of rectangles.</p>","class_methods":[],"constructors":[{"id":"new(list:LibCairo::PRectangleListT)-class-method","html_id":"new(list:LibCairo::PRectangleListT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"list","doc":null,"default_value":"","external_name":"list","restriction":"LibCairo::PRectangleListT"}],"args_string":"(list : LibCairo::PRectangleListT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_list.cr#L14","def":{"name":"new","args":[{"name":"list","doc":null,"default_value":"","external_name":"list","restriction":"LibCairo::PRectangleListT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(list)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_list.cr#L19","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.rectangle_list_destroy(@list)"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":"Number of rectangles in this list","summary":"<p>Number of rectangles in this list</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_list.cr#L30","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@list.value.num_rectangles"}},{"id":"status:Status-instance-method","html_id":"status:Status-instance-method","name":"status","doc":"Error status of the rectangle list","summary":"<p>Error status of the rectangle list</p>","abstract":false,"args":[],"args_string":" : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_list.cr#L24","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new(@list.value.status.value)"}},{"id":"to_cairo_rectangle_list:LibCairo::RectangleListT-instance-method","html_id":"to_cairo_rectangle_list:LibCairo::RectangleListT-instance-method","name":"to_cairo_rectangle_list","doc":"Returns undelying `LibCairo::RectangleIntT` structure.","summary":"<p>Returns undelying <code>LibCairo::RectangleIntT</code> structure.</p>","abstract":false,"args":[],"args_string":" : LibCairo::RectangleListT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_list.cr#L41","def":{"name":"to_cairo_rectangle_list","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::RectangleListT","visibility":"Public","body":"@list.value"}},{"id":"to_unsafe:LibCairo::PRectangleListT-instance-method","html_id":"to_unsafe:LibCairo::PRectangleListT-instance-method","name":"to_unsafe","doc":"Pointer of list.","summary":"<p>Pointer of list.</p>","abstract":false,"args":[],"args_string":" : LibCairo::PRectangleListT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_list.cr#L46","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PRectangleListT","visibility":"Public","body":"@list"}},{"id":"unsafe_fetch(index:Int):Rectangle-instance-method","html_id":"unsafe_fetch(index:Int):Rectangle-instance-method","name":"unsafe_fetch","doc":"Returns rectangle at the given index.","summary":"<p>Returns rectangle at the given index.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Rectangle","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rectangle_list.cr#L36","def":{"name":"unsafe_fetch","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Rectangle","visibility":"Public","body":"Rectangle.new(@list.value.rectangles[index])"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Region","path":"Cairo/Region.html","kind":"class","full_name":"Cairo::Region","name":"Region","abstract":false,"superclass":{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/region.cr","line_number":13,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L13"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"A `Region` represents a set of integer-aligned rectangles.\n\nIt allows set-theoretical operations like `Region#union` and `Region#intersect` to be performed on them.\n\nMemory management of `Region` is done with `Region#reference` and `Region#finalize`.\n\nWrapper for LibCairo::PRegionT","summary":"<p>A <code><a href=\"../Cairo/Region.html\">Region</a></code> represents a set of integer-aligned rectangles.</p>","class_methods":[],"constructors":[{"id":"new(region:LibCairo::PRegionT)-class-method","html_id":"new(region:LibCairo::PRegionT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"LibCairo::PRegionT"}],"args_string":"(region : LibCairo::PRegionT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L14","def":{"name":"new","args":[{"name":"region","doc":null,"default_value":"","external_name":"region","restriction":"LibCairo::PRegionT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(region)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(rectangle:RectangleInt)-class-method","html_id":"new(rectangle:RectangleInt)-class-method","name":"new","doc":"Allocates a new region object containing rectangle.","summary":"<p>Allocates a new region object containing rectangle.</p>","abstract":false,"args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"RectangleInt"}],"args_string":"(rectangle : RectangleInt)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L25","def":{"name":"new","args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"RectangleInt"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(rectangle)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(rects:Array(RectangleInt))-class-method","html_id":"new(rects:Array(RectangleInt))-class-method","name":"new","doc":"Allocates a new region object containing the union of all given rects.\n\n###Parameters\n- **rects** an array of count rectangles","summary":"<p>Allocates a new region object containing the union of all given rects.</p>","abstract":false,"args":[{"name":"rects","doc":null,"default_value":"","external_name":"rects","restriction":"Array(RectangleInt)"}],"args_string":"(rects : Array(RectangleInt))","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L33","def":{"name":"new","args":[{"name":"rects","doc":null,"default_value":"","external_name":"rects","restriction":"Array(RectangleInt)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(rects)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Allocates a new empty region object.","summary":"<p>Allocates a new empty region object.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L20","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other:Region):Bool-instance-method","html_id":"==(other:Region):Bool-instance-method","name":"==","doc":"Compares whether region is equivalent to *other*.\n\n###Parameters\n- **other* a `Region` object\n\n###Returns\n`true` if both regions contained the same coverage, `false` if it is not or any region is in an error status.","summary":"<p>Compares whether region is equivalent to <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Region"}],"args_string":"(other : Region) : Bool","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L64","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Region"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(LibCairo.region_equal(@region, other.to_unsafe)) == 1"}},{"id":"contains?(p:Point):Bool-instance-method","html_id":"contains?(p:Point):Bool-instance-method","name":"contains?","doc":null,"summary":null,"abstract":false,"args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"args_string":"(p : Point) : Bool","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L138","def":{"name":"contains?","args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(LibCairo.region_contains_point(@region, p.x, p.y)) == 1"}},{"id":"contains?(rectangle:RectangleInt):RegionOverlap-instance-method","html_id":"contains?(rectangle:RectangleInt):RegionOverlap-instance-method","name":"contains?","doc":"Checks whether rectangle is inside, outside or partially contained in region.\n\n###Parameters\n- **rectangle** a `RectangleInt`\n\n###Returns\n- `RegionOverlap::In` if rectangle is entirely inside region\n- `RegionOverlap::Out` if rectangle is entirely outside region\n- `RegionOVerlap::Part` if rectangle is partially inside and partially outside region","summary":"<p>Checks whether rectangle is inside, outside or partially contained in region.</p>","abstract":false,"args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"RectangleInt"}],"args_string":"(rectangle : RectangleInt) : RegionOverlap","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L122","def":{"name":"contains?","args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"RectangleInt"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"RegionOverlap","visibility":"Public","body":"RegionOverlap.new((LibCairo.region_contains_rectangle(@region, rectangle.to_unsafe)).value)"}},{"id":"contains?(x:Int32,y:Int32):Bool-instance-method","html_id":"contains?(x:Int32,y:Int32):Bool-instance-method","name":"contains?","doc":"Checks whether *(x, y)* is contained in region.\n\n###Parameters\n- *x* the x coordinate of a point\n- *y* the y coordinate of a point\n\n###Returns\n`true` if *(x, y)* is contained in region, `false` if it is not.","summary":"<p>Checks whether <em>(x, y)</em> is contained in region.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(x : Int32, y : Int32) : Bool","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L134","def":{"name":"contains?","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(LibCairo.region_contains_point(@region, x, y)) == 1"}},{"id":"dup:Region-instance-method","html_id":"dup:Region-instance-method","name":"dup","doc":"Allocates a new region object copying the area from original.","summary":"<p>Allocates a new region object copying the area from original.</p>","abstract":false,"args":[],"args_string":" : Region","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L44","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Region","visibility":"Public","body":"Region.new(LibCairo.region_copy(@region))"}},{"id":"empty?:Bool-instance-method","html_id":"empty?:Bool-instance-method","name":"empty?","doc":"Checks whether region is empty.\n\n###Returns\n`true` if region is empty, `false` if it isn't.","summary":"<p>Checks whether region is empty.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L109","def":{"name":"empty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(LibCairo.region_is_empty(@region)) == 1"}},{"id":"extents:RectangleInt-instance-method","html_id":"extents:RectangleInt-instance-method","name":"extents","doc":"Gets the bounding rectangle of region as a `RectangleInt`.\n\n###Parameters\n- **extents** rectangle into which to store the extents","summary":"<p>Gets the bounding rectangle of region as a <code><a href=\"../Cairo/RectangleInt.html\">RectangleInt</a></code>.</p>","abstract":false,"args":[],"args_string":" : RectangleInt","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L80","def":{"name":"extents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"RectangleInt","visibility":"Public","body":"LibCairo.region_get_extents(@region, out extents)\nRectangleInt.new(extents)\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Destroys a `Region` object created with `Region#initialize`, `Region#dup`, or `Region#initialize(rectangle)`.","summary":"<p>Destroys a <code><a href=\"../Cairo/Region.html\">Region</a></code> object created with <code>Region#initialize</code>, <code><a href=\"../Cairo/Region.html#dup:Region-instance-method\">Region#dup</a></code>, or <code>Region#initialize(rectangle)</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L39","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.region_destroy(@region)"}},{"id":"intersect(other:Region)-instance-method","html_id":"intersect(other:Region)-instance-method","name":"intersect","doc":"Computes the intersection of `self` with other and places the result in `self`.\n\n###Parameters\n- **other** another `Region`\n\n##Raises\n`StatusException` with status of `Status::NoMemory`.","summary":"<p>Computes the intersection of <code>self</code> with other and places the result in <code>self</code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Region"}],"args_string":"(other : Region)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L190","def":{"name":"intersect","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Region"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"status = Status.new((LibCairo.region_intersect(@region, other.to_unsafe)).value)\nif status.success?\nelse\n  raise(new(StatusException.new(status)))\nend\nself\n"}},{"id":"intersect(rectangle:RectangleInt)-instance-method","html_id":"intersect(rectangle:RectangleInt)-instance-method","name":"intersect","doc":"Computes the intersection of `self` with rectangle and places the result in `self`.\n\n###Parameters\n- **rectangle** a `RectangleInt`\n\n###Raises\n`StatusException` with status of `Status::NoMemory`.","summary":"<p>Computes the intersection of <code>self</code> with rectangle and places the result in <code>self</code>.</p>","abstract":false,"args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"RectangleInt"}],"args_string":"(rectangle : RectangleInt)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L203","def":{"name":"intersect","args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"RectangleInt"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"status = Status.new((LibCairo.region_intersect_rectangle(@region, rectangle.to_unsafe)).value)\nif status.success?\nelse\n  raise(new(StatusException.new(status)))\nend\nself\n"}},{"id":"num_rectangles:Int32-instance-method","html_id":"num_rectangles:Int32-instance-method","name":"num_rectangles","doc":"Returns the number of rectangles contained in region.\n\n###Returns\nThe number of rectangles contained in region.","summary":"<p>Returns the number of rectangles contained in region.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L89","def":{"name":"num_rectangles","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"LibCairo.region_num_rectangles(@region)"}},{"id":"rectangle(nth:Int32):RectangleInt-instance-method","html_id":"rectangle(nth:Int32):RectangleInt-instance-method","name":"rectangle","doc":"Stores the nth rectangle from the region in rectangle.\n\n###Parameters\n- **nth** a number indicating which rectangle should be returned\n\n###Returns\nThe location for a `RectangleInt`.","summary":"<p>Stores the nth rectangle from the region in rectangle.</p>","abstract":false,"args":[{"name":"nth","doc":null,"default_value":"","external_name":"nth","restriction":"Int32"}],"args_string":"(nth : Int32) : RectangleInt","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L100","def":{"name":"rectangle","args":[{"name":"nth","doc":null,"default_value":"","external_name":"nth","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"RectangleInt","visibility":"Public","body":"LibCairo.region_get_rectangle(@region, nth, out rectangle)\nRectangleInt.new(rectangle)\n"}},{"id":"reference:Region-instance-method","html_id":"reference:Region-instance-method","name":"reference","doc":"Increases the reference count on region by one. This prevents region from being destroyed until a matching call\nto `Region#finalize` is made.\n\n###Returns\nThe referenced `Region`.","summary":"<p>Increases the reference count on region by one.</p>","abstract":false,"args":[],"args_string":" : Region","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L53","def":{"name":"reference","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Region","visibility":"Public","body":"Region.new(LibCairo.region_reference(@region))"}},{"id":"status:Status-instance-method","html_id":"status:Status-instance-method","name":"status","doc":"Checks whether an error has previous occurred for this region object.\n\n###Returns\n`Status::Success` or `Status::NoMemory`","summary":"<p>Checks whether an error has previous occurred for this region object.</p>","abstract":false,"args":[],"args_string":" : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L72","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.region_status(@region)).value)"}},{"id":"subtract(other:Region)-instance-method","html_id":"subtract(other:Region)-instance-method","name":"subtract","doc":"Subtracts other from `self` and places the result in `self`.\n\n###Parameters\n- **other** another `Region`\n\n###Raises\n`StatusException` with status of `Status::NoMemory`.","summary":"<p>Subtracts other from <code>self</code> and places the result in <code>self</code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Region"}],"args_string":"(other : Region)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L164","def":{"name":"subtract","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Region"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"status = Status.new((LibCairo.region_subtract(@region, other.to_unsafe)).value)\nif status.success?\nelse\n  raise(new(StatusException.new(status)))\nend\nself\n"}},{"id":"subtract(rectangle:RectangleInt)-instance-method","html_id":"subtract(rectangle:RectangleInt)-instance-method","name":"subtract","doc":"Subtracts rectangle from `self` and places the result in `self`.\n\n###Parameters\n- **rectangle** a `RectangleInt`\n\n###Raises\n`StatusException` with status of `Status::NoMemory`.","summary":"<p>Subtracts rectangle from <code>self</code> and places the result in <code>self</code>.</p>","abstract":false,"args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"RectangleInt"}],"args_string":"(rectangle : RectangleInt)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L177","def":{"name":"subtract","args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"RectangleInt"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"status = Status.new((LibCairo.region_subtract_rectangle(@region, rectangle.to_unsafe)).value)\nif status.success?\nelse\n  raise(new(StatusException.new(status)))\nend\nself\n"}},{"id":"to_unsafe:LibCairo::PRegionT-instance-method","html_id":"to_unsafe:LibCairo::PRegionT-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PRegionT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L263","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PRegionT","visibility":"Public","body":"@region"}},{"id":"translate(dx:Int32,dy:Int32)-instance-method","html_id":"translate(dx:Int32,dy:Int32)-instance-method","name":"translate","doc":"Translates region by *(dx, dy)*.\n\n###Parameters\n- **dx** Amount to translate in the x direction\n- **dy** Amount to translate in the y direction","summary":"<p>Translates region by <em>(dx, dy)</em>.</p>","abstract":false,"args":[{"name":"dx","doc":null,"default_value":"","external_name":"dx","restriction":"Int32"},{"name":"dy","doc":null,"default_value":"","external_name":"dy","restriction":"Int32"}],"args_string":"(dx : Int32, dy : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L147","def":{"name":"translate","args":[{"name":"dx","doc":null,"default_value":"","external_name":"dx","restriction":"Int32"},{"name":"dy","doc":null,"default_value":"","external_name":"dy","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.region_translate(@region, dx, dy)\nself\n"}},{"id":"translate(d:Point)-instance-method","html_id":"translate(d:Point)-instance-method","name":"translate","doc":null,"summary":null,"abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Point"}],"args_string":"(d : Point)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L152","def":{"name":"translate","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.region_translate(@region, d.x, d.y)\nself\n"}},{"id":"union(other:Region)-instance-method","html_id":"union(other:Region)-instance-method","name":"union","doc":"Computes the union of `self` with other and places the result in `self`.\n\n###Parameters\n- **other** another `Region`\n\n###Raises\n`StatusException` with status of `Status::NoMemory`.","summary":"<p>Computes the union of <code>self</code> with other and places the result in <code>self</code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Region"}],"args_string":"(other : Region)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L216","def":{"name":"union","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Region"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"status = Status.new((LibCairo.region_union(@region, other.to_unsafe)).value)\nif status.success?\nelse\n  raise(new(StatusException.new(status)))\nend\nself\n"}},{"id":"union(rectangle:RectangleInt)-instance-method","html_id":"union(rectangle:RectangleInt)-instance-method","name":"union","doc":"Computes the union of `self` with rectangle and places the result in `self`.\n\n###Parameters\n- **rectangle** a RectangleInt\n\n###Raises\n`StatusException` with status of `Status::NoMemory`.","summary":"<p>Computes the union of <code>self</code> with rectangle and places the result in <code>self</code>.</p>","abstract":false,"args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"RectangleInt"}],"args_string":"(rectangle : RectangleInt)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L229","def":{"name":"union","args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"RectangleInt"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"status = Status.new((LibCairo.region_union_rectangle(@region, rectangle.to_unsafe)).value)\nif status.success?\nelse\n  raise(new(StatusException.new(status)))\nend\nself\n"}},{"id":"xor(other:Region)-instance-method","html_id":"xor(other:Region)-instance-method","name":"xor","doc":"Computes the exclusive difference of `self` with other and places the result in `self`.\nThat is, `self` will be set to contain all areas that are either in `self` or in other , but not in both.\n\n###Parameters\n- **other** another `Region`\n\n###Raises\n`StatusException` with status of `Status::NoMemory`.","summary":"<p>Computes the exclusive difference of <code>self</code> with other and places the result in <code>self</code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Region"}],"args_string":"(other : Region)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L243","def":{"name":"xor","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Region"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"status = Status.new((LibCairo.region_xor(@region, other.to_unsafe)).value)\nif status.success?\nelse\n  raise(new(StatusException.new(status)))\nend\nself\n"}},{"id":"xor_rectangle(rectangle:RectangleInt)-instance-method","html_id":"xor_rectangle(rectangle:RectangleInt)-instance-method","name":"xor_rectangle","doc":"Computes the exclusive difference of `self` with rectangle and places the result in `self`.\nThat is, `self` will be set to contain all areas that are either in `self` or in rectangle, but not in both.\n\n###Parameters\n- **rectangle** a `RectangleInt`\n\n###Raises\n`StatusException` with status of `Status::NoMemory`.","summary":"<p>Computes the exclusive difference of <code>self</code> with rectangle and places the result in <code>self</code>.</p>","abstract":false,"args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"RectangleInt"}],"args_string":"(rectangle : RectangleInt)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region.cr#L257","def":{"name":"xor_rectangle","args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"RectangleInt"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"status = Status.new((LibCairo.region_xor_rectangle(@region, rectangle.to_unsafe)).value)\nif status.success?\nelse\n  raise(new(StatusException.new(status)))\nend\nself\n"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/RegionOverlap","path":"Cairo/RegionOverlap.html","kind":"enum","full_name":"Cairo::RegionOverlap","name":"RegionOverlap","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/region_overlap.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region_overlap.cr#L3"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"In","name":"In","value":"0","doc":"The contents are entirely inside the region.","summary":"<p>The contents are entirely inside the region.</p>"},{"id":"Out","name":"Out","value":"1","doc":"The contents are entirely outside the region.","summary":"<p>The contents are entirely outside the region.</p>"},{"id":"Part","name":"Part","value":"2","doc":"The contents are partially inside and partially outside the region.","summary":"<p>The contents are partially inside and partially outside the region.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Used as the return value for `Region#contains_rectangle`.","summary":"<p>Used as the return value for <code>Region#contains_rectangle</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"in?-instance-method","html_id":"in?-instance-method","name":"in?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region_overlap.cr#L5","def":{"name":"in?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == In"}},{"id":"out?-instance-method","html_id":"out?-instance-method","name":"out?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region_overlap.cr#L8","def":{"name":"out?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Out"}},{"id":"part?-instance-method","html_id":"part?-instance-method","name":"part?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/region_overlap.cr#L11","def":{"name":"part?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Part"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/RGBA","path":"Cairo/RGBA.html","kind":"struct","full_name":"Cairo::RGBA","name":"RGBA","abstract":false,"superclass":{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/rgba.cr","line_number":2,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rgba.cr#L2"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(red:Float64,green:Float64,blue:Float64,alpha:Float64)-class-method","html_id":"new(red:Float64,green:Float64,blue:Float64,alpha:Float64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"},{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"args_string":"(red : Float64, green : Float64, blue : Float64, alpha : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rgba.cr#L8","def":{"name":"new","args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"},{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(red, green, blue, alpha)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"alpha:Float64-instance-method","html_id":"alpha:Float64-instance-method","name":"alpha","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rgba.cr#L6","def":{"name":"alpha","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@alpha"}},{"id":"alpha=(alpha:Float64)-instance-method","html_id":"alpha=(alpha:Float64)-instance-method","name":"alpha=","doc":null,"summary":null,"abstract":false,"args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"args_string":"(alpha : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rgba.cr#L6","def":{"name":"alpha=","args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@alpha = alpha"}},{"id":"blue:Float64-instance-method","html_id":"blue:Float64-instance-method","name":"blue","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rgba.cr#L5","def":{"name":"blue","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@blue"}},{"id":"blue=(blue:Float64)-instance-method","html_id":"blue=(blue:Float64)-instance-method","name":"blue=","doc":null,"summary":null,"abstract":false,"args":[{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"}],"args_string":"(blue : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rgba.cr#L5","def":{"name":"blue=","args":[{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@blue = blue"}},{"id":"green:Float64-instance-method","html_id":"green:Float64-instance-method","name":"green","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rgba.cr#L4","def":{"name":"green","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@green"}},{"id":"green=(green:Float64)-instance-method","html_id":"green=(green:Float64)-instance-method","name":"green=","doc":null,"summary":null,"abstract":false,"args":[{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"}],"args_string":"(green : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rgba.cr#L4","def":{"name":"green=","args":[{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@green = green"}},{"id":"red:Float64-instance-method","html_id":"red:Float64-instance-method","name":"red","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rgba.cr#L3","def":{"name":"red","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@red"}},{"id":"red=(red:Float64)-instance-method","html_id":"red=(red:Float64)-instance-method","name":"red=","doc":null,"summary":null,"abstract":false,"args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"}],"args_string":"(red : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/rgba.cr#L3","def":{"name":"red=","args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@red = red"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/ScaledFont","path":"Cairo/ScaledFont.html","kind":"class","full_name":"Cairo::ScaledFont","name":"ScaledFont","abstract":false,"superclass":{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/scaled_font.cr","line_number":16,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L16"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"A `ScaledFont` is a font scaled to a particular size and device resolution.\nA `ScaledFont` is most useful for low-level font usage where a library or\napplication wants to cache a reference to a scaled font to speed up the computation of metrics.\n\nThere are various types of scaled fonts, depending on the font backend they use.\nThe type of a scaled font can be queried using `ScaledFont#type`.\n\nMemory management of `ScaledFont` is done with `ScaledFont#reference` and `ScaledFont#finalize`.","summary":"<p>A <code><a href=\"../Cairo/ScaledFont.html\">ScaledFont</a></code> is a font scaled to a particular size and device resolution.</p>","class_methods":[],"constructors":[{"id":"new(font_face:FontFace,font_matrix:Matrix,ctm:Matrix,options:FontOptions)-class-method","html_id":"new(font_face:FontFace,font_matrix:Matrix,ctm:Matrix,options:FontOptions)-class-method","name":"new","doc":"Creates a `ScaledFont` object from a font face and matrices that describe the size of the font and the environment in which it will be used.\n\n###Parameters\n\n- **font_face** a `FontFace`\n- **font_matrix** font space to user space transformation matrix for the font.\nIn the simplest case of a N point font, this matrix is just a scale by N,\nbut it can also be used to shear the font or stretch it unequally along the two axes. See `Context#font_matrix=`.\n- **ctm** user to device transformation matrix with which the font will be used.\n- **options** options to use when getting metrics for the font and rendering with it.\n\n###Returns\nA newly created `ScaledFont`. Destroy with `ScaledFont#finalize`.","summary":"<p>Creates a <code><a href=\"../Cairo/ScaledFont.html\">ScaledFont</a></code> object from a font face and matrices that describe the size of the font and the environment in which it will be used.</p>","abstract":false,"args":[{"name":"font_face","doc":null,"default_value":"","external_name":"font_face","restriction":"FontFace"},{"name":"font_matrix","doc":null,"default_value":"","external_name":"font_matrix","restriction":"Matrix"},{"name":"ctm","doc":null,"default_value":"","external_name":"ctm","restriction":"Matrix"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"FontOptions"}],"args_string":"(font_face : FontFace, font_matrix : Matrix, ctm : Matrix, options : FontOptions)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L30","def":{"name":"new","args":[{"name":"font_face","doc":null,"default_value":"","external_name":"font_face","restriction":"FontFace"},{"name":"font_matrix","doc":null,"default_value":"","external_name":"font_matrix","restriction":"Matrix"},{"name":"ctm","doc":null,"default_value":"","external_name":"ctm","restriction":"Matrix"},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":"FontOptions"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(font_face, font_matrix, ctm, options)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(scaled_font:LibCairo::PScaledFontT)-class-method","html_id":"new(scaled_font:LibCairo::PScaledFontT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"scaled_font","doc":null,"default_value":"","external_name":"scaled_font","restriction":"LibCairo::PScaledFontT"}],"args_string":"(scaled_font : LibCairo::PScaledFontT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L34","def":{"name":"new","args":[{"name":"scaled_font","doc":null,"default_value":"","external_name":"scaled_font","restriction":"LibCairo::PScaledFontT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(scaled_font)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"ctm:Matrix-instance-method","html_id":"ctm:Matrix-instance-method","name":"ctm","doc":"Stores the CTM with which `ScaledFont` was created into *ctm*.\nNOTE that the translation offsets *(x0, y0)* of the CTM are ignored by `ScaledFont#initialize`.\nSo, the matrix this function returns always has *0,0* as *x0,y0*.\n\n###Returns\nThe value for the CTM.","summary":"<p>Stores the CTM with which <code><a href=\"../Cairo/ScaledFont.html\">ScaledFont</a></code> was created into <em>ctm</em>.</p>","abstract":false,"args":[],"args_string":" : Matrix","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L205","def":{"name":"ctm","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Matrix","visibility":"Public","body":"LibCairo.scaled_font_get_ctm(@scaled_font, out ctm)\nMatrix.new(ctm)\n"}},{"id":"extents:FontExtents-instance-method","html_id":"extents:FontExtents-instance-method","name":"extents","doc":"Gets the metrics for a `ScaledFont`.\n\n###Returns\nA `FontExtents` which to store the retrieved extents.","summary":"<p>Gets the metrics for a <code><a href=\"../Cairo/ScaledFont.html\">ScaledFont</a></code>.</p>","abstract":false,"args":[],"args_string":" : FontExtents","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L111","def":{"name":"extents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FontExtents","visibility":"Public","body":"LibCairo.scaled_font_extents(@scaled_font, out font_extents)\nFontExtents.new(font_extents)\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":"Decreases the reference count on font by one. If the result is zero,\nthen font and all associated resources are freed. See `ScaledFont#reference`.","summary":"<p>Decreases the reference count on font by one.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L41","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.scaled_font_destroy(@scaled_font)"}},{"id":"font_face:FontFace-instance-method","html_id":"font_face:FontFace-instance-method","name":"font_face","doc":"Gets the font face that this scaled font uses. This might be the font face passed to `ScaledFont#initialize`,\nbut this does not hold true for all possible cases.\n\n###Returns\nThe `FontFace` with which `ScaledFont` was created. This object is owned by cairo.\nTo keep a reference to it, you must call `ScaledFont#reference`.","summary":"<p>Gets the font face that this scaled font uses.</p>","abstract":false,"args":[],"args_string":" : FontFace","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L186","def":{"name":"font_face","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FontFace","visibility":"Public","body":"FontFace.new(LibCairo.scaled_font_get_font_face(@scaled_font))"}},{"id":"font_matrix:Matrix-instance-method","html_id":"font_matrix:Matrix-instance-method","name":"font_matrix","doc":"Stores the font matrix with which scaled_font was created into matrix.\n\n###Returns\nThe value for the matrix.","summary":"<p>Stores the font matrix with which scaled_font was created into matrix.</p>","abstract":false,"args":[],"args_string":" : Matrix","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L194","def":{"name":"font_matrix","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Matrix","visibility":"Public","body":"LibCairo.scaled_font_get_font_matrix(@scaled_font, out matrix)\nMatrix.new(matrix)\n"}},{"id":"font_options:FontOptions-instance-method","html_id":"font_options:FontOptions-instance-method","name":"font_options","doc":"Stores the font options with which `ScaledFont` was created into options.\n\n###Returns\nThe value for the font options.","summary":"<p>Stores the font options with which <code><a href=\"../Cairo/ScaledFont.html\">ScaledFont</a></code> was created into options.</p>","abstract":false,"args":[],"args_string":" : FontOptions","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L225","def":{"name":"font_options","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FontOptions","visibility":"Public","body":"font_options = FontOptions.new\nLibCairo.scaled_font_get_font_options(@scaled_font, font_options.to_unsafe)\nfont_options\n"}},{"id":"glyph_extents(glyphs:GlyphArray):TextExtents-instance-method","html_id":"glyph_extents(glyphs:GlyphArray):TextExtents-instance-method","name":"glyph_extents","doc":"Gets the extents for an array of glyphs. The extents describe a user-space rectangle\nthat encloses the \"inked\" portion of the glyphs, (as they would be drawn by `Context#show_glyphs`\nif the cairo graphics state were set to the same `font_face`, `font_matrix`, `ctm`, and `font_options`).\nAdditionally, the `x_advance` and `y_advance` values indicate the amount by which the current\npoint would be advanced by `Context#show_glyphs`.\n\nNOTE that whitespace glyphs do not contribute to the size of the rectangle (`extents.width` and `extents.height`).\n\n###Parameters\n- **glyphs** an array of glyph IDs with X and Y offsets.\n\n###Returns\nA `TextExtents` which to store the retrieved extents.","summary":"<p>Gets the extents for an array of glyphs.</p>","abstract":false,"args":[{"name":"glyphs","doc":null,"default_value":"","external_name":"glyphs","restriction":"GlyphArray"}],"args_string":"(glyphs : GlyphArray) : TextExtents","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L150","def":{"name":"glyph_extents","args":[{"name":"glyphs","doc":null,"default_value":"","external_name":"glyphs","restriction":"GlyphArray"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"TextExtents","visibility":"Public","body":"LibCairo.glyph_extents(@scaled_font, glyphs.to_unsafe, glyphs.size, out extents)\nTextExtents.new(extents)\n"}},{"id":"reference:ScaledFont-instance-method","html_id":"reference:ScaledFont-instance-method","name":"reference","doc":"Increases the reference count on `ScaledFont` by one. This prevents scaled_font from being destroyed\nuntil a matching call to `ScaledFont#finalize` is made.\n\nUse `ScaledFont#reference_count` to get the number of references to a `ScaledFont`.\n\n###Returns\nThe referenced `ScaledFont`.","summary":"<p>Increases the reference count on <code><a href=\"../Cairo/ScaledFont.html\">ScaledFont</a></code> by one.</p>","abstract":false,"args":[],"args_string":" : ScaledFont","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L52","def":{"name":"reference","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ScaledFont","visibility":"Public","body":"ScaledFont.new(LibCairo.scaled_font_reference(@scaled_font))"}},{"id":"reference_count:UInt32-instance-method","html_id":"reference_count:UInt32-instance-method","name":"reference_count","doc":"Returns the current reference count of `ScaledFont`.\n\n###Returns\nThe current reference count of `ScaledFont`. If the object is a *nil* object, 0 will be returned.","summary":"<p>Returns the current reference count of <code><a href=\"../Cairo/ScaledFont.html\">ScaledFont</a></code>.</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L60","def":{"name":"reference_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"LibCairo.scaled_font_get_reference_count(@scaled_font)"}},{"id":"scale_matrix:Matrix-instance-method","html_id":"scale_matrix:Matrix-instance-method","name":"scale_matrix","doc":"Stores the scale matrix of `ScaledFont` into matrix.\nThe scale matrix is product of the font matrix and the *ctm* associated with the scaled font,\nand hence is the matrix mapping from font space to device space.\n\n###Returns\nThe value for the matrix.","summary":"<p>Stores the scale matrix of <code><a href=\"../Cairo/ScaledFont.html\">ScaledFont</a></code> into matrix.</p>","abstract":false,"args":[],"args_string":" : Matrix","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L216","def":{"name":"scale_matrix","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Matrix","visibility":"Public","body":"LibCairo.scaled_font_get_scale_matrix(@scaled_font, out matrix)\nMatrix.new(matrix)\n"}},{"id":"set_user_data(key:UserDataKey,user_data:Pointer(Void),destroy:DestroyFuncT):Status-instance-method","html_id":"set_user_data(key:UserDataKey,user_data:Pointer(Void),destroy:DestroyFuncT):Status-instance-method","name":"set_user_data","doc":"Attach user data to `ScaledFont`. To remove user data from a surface,\ncall this function with the key that was used to set it and *Nil* for data .\n\n###Parameters\n- **key** the address of a `UserDataKey` to attach the user data to\n- **user_data** the user data to attach to the `ScaledFont`\n- **destroy** a `DestroyFuncT` which will be called when the `Context` is destroyed or when new user data is attached using the same key.\n\n###Returns\n`Status::Success` or `Status::NoMemory` if a slot could not be allocated for the user data.","summary":"<p>Attach user data to <code><a href=\"../Cairo/ScaledFont.html\">ScaledFont</a></code>.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"},{"name":"user_data","doc":null,"default_value":"","external_name":"user_data","restriction":"::Pointer(Void)"},{"name":"destroy","doc":null,"default_value":"","external_name":"destroy","restriction":"DestroyFuncT"}],"args_string":"(key : UserDataKey, user_data : Pointer(Void), destroy : DestroyFuncT) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L103","def":{"name":"set_user_data","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"},{"name":"user_data","doc":null,"default_value":"","external_name":"user_data","restriction":"::Pointer(Void)"},{"name":"destroy","doc":null,"default_value":"","external_name":"destroy","restriction":"DestroyFuncT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.scaled_font_set_user_data(@scaled_font, key.to_unsafe, user_data, destroy)).value)"}},{"id":"status:Status-instance-method","html_id":"status:Status-instance-method","name":"status","doc":"Checks whether an error has previously occurred for this `ScaledFont`.\n\n###Returns\n`Status::Success` or another error such as `Status::NoMemory`.","summary":"<p>Checks whether an error has previously occurred for this <code><a href=\"../Cairo/ScaledFont.html\">ScaledFont</a></code>.</p>","abstract":false,"args":[],"args_string":" : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L68","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.scaled_font_status(@scaled_font)).value)"}},{"id":"text_extents(text:String):TextExtents-instance-method","html_id":"text_extents(text:String):TextExtents-instance-method","name":"text_extents","doc":"Gets the extents for a string of text. The extents describe a user-space rectangle\nthat encloses the \"inked\" portion of the text drawn at the origin (0,0)\n(as it would be drawn by `Context#show_text` if the cairo graphics state were set\nto the same `font_face`, `font_matrix`, `ctm`, and `font_options`). Additionally,\nthe `x_advance` and `y_advance` values indicate the amount by which the current point would be advanced by `Context#show_text`.\n\nNOTE that whitespace characters do not directly contribute to the size of the rectangle\n(`extents.width` and `extents.height`). They do contribute indirectly by changing the position\nof non-whitespace characters. In particular, trailing whitespace characters are likely to not affect\nthe size of the rectangle, though they will affect the `x_advance` and `y_advance` values.\n\n###Parameters\n- **text** string of text\n\n###Returns\nA `TextExtents` which to store the retrieved extents.","summary":"<p>Gets the extents for a string of text.</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"args_string":"(text : String) : TextExtents","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L132","def":{"name":"text_extents","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"TextExtents","visibility":"Public","body":"LibCairo.scaled_font_text_extents(@scaled_font, text.to_unsafe, out text_extents)\nTextExtents.new(text_extents)\n"}},{"id":"text_to_glyphs(x:Float64,y:Float64,text:String):NamedTuple()-instance-method","html_id":"text_to_glyphs(x:Float64,y:Float64,text:String):NamedTuple()-instance-method","name":"text_to_glyphs","doc":"Converts UTF-8 text to an array of glyphs.\n\n###Parameters\n- **x** X position to place first glyph\n- **y** Y position to place first glyph\n- **text** a string of text encoded in UTF-8\n\n###Returns\n- **glyphs** array of glyphs to fill\n- **clusters** array of cluster mapping information to fill\n- **cluster_flags** cluster flags corresponding to the output clusters\n- **status** `Status::Success` upon success, or an error status if the input values are wrong or if conversion failed.\nIf the input values are correct but the conversion failed, the error status is also set on `ScaledFont`.","summary":"<p>Converts UTF-8 text to an array of glyphs.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"},{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"args_string":"(x : Float64, y : Float64, text : String) : NamedTuple()","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L168","def":{"name":"text_to_glyphs","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"},{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(glyphs: GlyphArray, clusters: TextClusterArray, cluster_flags: TextClusterFlags, status: Status)","visibility":"Public","body":"status = LibCairo.scaled_font_text_to_glyphs(reference.to_unsafe, x, y, text.to_unsafe, text.size, out glyphs, out num_glyphs, out clusters, out num_clusters, out cluster_flags)\n{glyphs: GlyphArray.new(glyphs, num_glyphs), clusters: TextClusterArray.new(clusters, num_clusters), cluster_flags: TextClusterFlags.new(cluster_flags.value), status: Status.new(status.value)}\n"}},{"id":"to_unsafe:LibCairo::PScaledFontT-instance-method","html_id":"to_unsafe:LibCairo::PScaledFontT-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PScaledFontT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L231","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PScaledFontT","visibility":"Public","body":"@scaled_font"}},{"id":"type:FontType-instance-method","html_id":"type:FontType-instance-method","name":"type","doc":"This function returns the type of the backend used to create a scaled font.\nSee `FontType` for available types. However, this function never returns `FontType::Toy`.\n\n###Returns\nThe type of `ScaledFont`.","summary":"<p>This function returns the type of the backend used to create a scaled font.</p>","abstract":false,"args":[],"args_string":" : FontType","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L77","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FontType","visibility":"Public","body":"FontType.new((LibCairo.scaled_font_get_type(@scaled_font)).value)"}},{"id":"user_data(key:UserDataKey):Pointer(Void)-instance-method","html_id":"user_data(key:UserDataKey):Pointer(Void)-instance-method","name":"user_data","doc":"Return user data previously attached to `ScaledFont` using the specified key.\nIf no user data has been attached with the given key this function returns *Nil*.\n\n###Parameters\n- **key** the address of the `UserDataKey` the user data was attached to\n\n###Returns\nThe user data previously attached or *Nil*.","summary":"<p>Return user data previously attached to <code><a href=\"../Cairo/ScaledFont.html\">ScaledFont</a></code> using the specified key.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"}],"args_string":"(key : UserDataKey) : Pointer(Void)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/scaled_font.cr#L89","def":{"name":"user_data","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Pointer(Void)","visibility":"Public","body":"LibCairo.scaled_font_get_user_data(@scaled_font, key.to_unsafe)"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Script","path":"Cairo/Script.html","kind":"class","full_name":"Cairo::Script","name":"Script","abstract":false,"superclass":{"html_id":"cairo/Cairo/Device","kind":"class","full_name":"Cairo::Device","name":"Device"},"ancestors":[{"html_id":"cairo/Cairo/Device","kind":"class","full_name":"Cairo::Device","name":"Device"},{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/script.cr","line_number":5,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script.cr#L5"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(write_func:LibCairo::WriteFuncT,closure:Pointer(Void))-class-method","html_id":"new(write_func:LibCairo::WriteFuncT,closure:Pointer(Void))-class-method","name":"new","doc":"Create for Stream","summary":"<p>Create for Stream</p>","abstract":false,"args":[{"name":"write_func","doc":null,"default_value":"","external_name":"write_func","restriction":"LibCairo::WriteFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"}],"args_string":"(write_func : LibCairo::WriteFuncT, closure : Pointer(Void))","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script.cr#L5","def":{"name":"new","args":[{"name":"write_func","doc":null,"default_value":"","external_name":"write_func","restriction":"LibCairo::WriteFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(write_func, closure)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(filename:String)-class-method","html_id":"new(filename:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script.cr#L5","def":{"name":"new","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(filename)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"create_script_surface(content:Content,width:Float64,height:Float64):Surface-instance-method","html_id":"create_script_surface(content:Content,width:Float64,height:Float64):Surface-instance-method","name":"create_script_surface","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"Content"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Float64"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"}],"args_string":"(content : Content, width : Float64, height : Float64) : Surface","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script.cr#L5","def":{"name":"create_script_surface","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"Content"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Float64"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Surface","visibility":"Public","body":"Surface.new(LibCairo.script_surface_create(to_unsafe, LibCairo::ContentT.new(content.value), width, height))"}},{"id":"create_script_surface_for_target(target:Surface):Surface-instance-method","html_id":"create_script_surface_for_target(target:Surface):Surface-instance-method","name":"create_script_surface_for_target","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Surface"}],"args_string":"(target : Surface) : Surface","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script.cr#L5","def":{"name":"create_script_surface_for_target","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Surface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Surface","visibility":"Public","body":"Surface.new(LibCairo.script_surface_create_for_target(to_unsafe, target.to_unsafe))"}},{"id":"from_recording_surface(recording_surface:Surface):Status-instance-method","html_id":"from_recording_surface(recording_surface:Surface):Status-instance-method","name":"from_recording_surface","doc":null,"summary":null,"abstract":false,"args":[{"name":"recording_surface","doc":null,"default_value":"","external_name":"recording_surface","restriction":"Surface"}],"args_string":"(recording_surface : Surface) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script.cr#L5","def":{"name":"from_recording_surface","args":[{"name":"recording_surface","doc":null,"default_value":"","external_name":"recording_surface","restriction":"Surface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.script_from_recording_surface(to_unsafe, recording_surface.to_unsafe)).value)"}},{"id":"mode:ScriptMode-instance-method","html_id":"mode:ScriptMode-instance-method","name":"mode","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ScriptMode","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script.cr#L5","def":{"name":"mode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ScriptMode","visibility":"Public","body":"ScriptMode.new((LibCairo.script_get_mode(to_unsafe)).value)"}},{"id":"mode=(mode:ScriptMode)-instance-method","html_id":"mode=(mode:ScriptMode)-instance-method","name":"mode=","doc":null,"summary":null,"abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"ScriptMode"}],"args_string":"(mode : ScriptMode)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script.cr#L5","def":{"name":"mode=","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"ScriptMode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.script_set_mode(to_unsafe, LibCairo::ScriptModeT.new(mode.value))\nself\n"}},{"id":"write_comment(comment:String,len:Int32=-1)-instance-method","html_id":"write_comment(comment:String,len:Int32=-1)-instance-method","name":"write_comment","doc":null,"summary":null,"abstract":false,"args":[{"name":"comment","doc":null,"default_value":"","external_name":"comment","restriction":"String"},{"name":"len","doc":null,"default_value":"-1","external_name":"len","restriction":"Int32"}],"args_string":"(comment : String, len : Int32 = <span class=\"n\">-1</span>)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script.cr#L5","def":{"name":"write_comment","args":[{"name":"comment","doc":null,"default_value":"","external_name":"comment","restriction":"String"},{"name":"len","doc":null,"default_value":"-1","external_name":"len","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.script_write_comment(to_unsafe, comment.to_unsafe, len)\nself\n"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/ScriptInterpreter","path":"Cairo/ScriptInterpreter.html","kind":"class","full_name":"Cairo::ScriptInterpreter","name":"ScriptInterpreter","abstract":false,"superclass":{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/script_interpreter.cr","line_number":8,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script_interpreter.cr#L8"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Wrapper for LibCairo::PScriptInterpreterT","summary":"<p>Wrapper for LibCairo::PScriptInterpreterT</p>","class_methods":[{"id":"translate_stream(stream:Int32,write_func:LibCairo::WriteFuncT,closure:Pointer(Void)):Status-class-method","html_id":"translate_stream(stream:Int32,write_func:LibCairo::WriteFuncT,closure:Pointer(Void)):Status-class-method","name":"translate_stream","doc":null,"summary":null,"abstract":false,"args":[{"name":"stream","doc":null,"default_value":"","external_name":"stream","restriction":"Int32"},{"name":"write_func","doc":null,"default_value":"","external_name":"write_func","restriction":"LibCairo::WriteFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"}],"args_string":"(stream : Int32, write_func : LibCairo::WriteFuncT, closure : Pointer(Void)) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script_interpreter.cr#L50","def":{"name":"translate_stream","args":[{"name":"stream","doc":null,"default_value":"","external_name":"stream","restriction":"Int32"},{"name":"write_func","doc":null,"default_value":"","external_name":"write_func","restriction":"LibCairo::WriteFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.script_interpreter_translate_stream(stream, write_func, closure)).value)"}}],"constructors":[{"id":"new(script_interpreter:LibCairo::PScriptInterpreterT)-class-method","html_id":"new(script_interpreter:LibCairo::PScriptInterpreterT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"script_interpreter","doc":null,"default_value":"","external_name":"script_interpreter","restriction":"LibCairo::PScriptInterpreterT"}],"args_string":"(script_interpreter : LibCairo::PScriptInterpreterT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script_interpreter.cr#L9","def":{"name":"new","args":[{"name":"script_interpreter","doc":null,"default_value":"","external_name":"script_interpreter","restriction":"LibCairo::PScriptInterpreterT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(script_interpreter)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script_interpreter.cr#L14","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"feed_stream(stream:Int32):Status-instance-method","html_id":"feed_stream(stream:Int32):Status-instance-method","name":"feed_stream","doc":null,"summary":null,"abstract":false,"args":[{"name":"stream","doc":null,"default_value":"","external_name":"stream","restriction":"Int32"}],"args_string":"(stream : Int32) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script_interpreter.cr#L30","def":{"name":"feed_stream","args":[{"name":"stream","doc":null,"default_value":"","external_name":"stream","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.script_interpreter_feed_stream(@script_interpreter, stream)).value)"}},{"id":"feed_string(line:String,len:Int32=-1):Status-instance-method","html_id":"feed_string(line:String,len:Int32=-1):Status-instance-method","name":"feed_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"line","doc":null,"default_value":"","external_name":"line","restriction":"String"},{"name":"len","doc":null,"default_value":"-1","external_name":"len","restriction":"Int32"}],"args_string":"(line : String, len : Int32 = <span class=\"n\">-1</span>) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script_interpreter.cr#L34","def":{"name":"feed_string","args":[{"name":"line","doc":null,"default_value":"","external_name":"line","restriction":"String"},{"name":"len","doc":null,"default_value":"-1","external_name":"len","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.script_interpreter_feed_string(@script_interpreter, line_to_unsafe, len)).value)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script_interpreter.cr#L18","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.script_interpreter_destroy(@script_interpreter)"}},{"id":"finish:Status-instance-method","html_id":"finish:Status-instance-method","name":"finish","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script_interpreter.cr#L46","def":{"name":"finish","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.script_interpreter_finish(@script_interpreter)).value)"}},{"id":"install_hooks(hooks:ScriptInterpreterHooksT)-instance-method","html_id":"install_hooks(hooks:ScriptInterpreterHooksT)-instance-method","name":"install_hooks","doc":null,"summary":null,"abstract":false,"args":[{"name":"hooks","doc":null,"default_value":"","external_name":"hooks","restriction":"ScriptInterpreterHooksT"}],"args_string":"(hooks : ScriptInterpreterHooksT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script_interpreter.cr#L22","def":{"name":"install_hooks","args":[{"name":"hooks","doc":null,"default_value":"","external_name":"hooks","restriction":"ScriptInterpreterHooksT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.script_interpreter_install_hooks(@script_interpreter, pointerof(hooks))"}},{"id":"line_number:UInt32-instance-method","html_id":"line_number:UInt32-instance-method","name":"line_number","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script_interpreter.cr#L38","def":{"name":"line_number","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"LibCairo.script_interpreter_get_line_number"}},{"id":"reference:ScriptInterpreter-instance-method","html_id":"reference:ScriptInterpreter-instance-method","name":"reference","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ScriptInterpreter","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script_interpreter.cr#L42","def":{"name":"reference","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ScriptInterpreter","visibility":"Public","body":"ScriptInterpreter.new(script_interpreter_reference(@script_interpreter))"}},{"id":"run(filename:String):Status-instance-method","html_id":"run(filename:String):Status-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script_interpreter.cr#L26","def":{"name":"run","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.script_interpreter_run(@script_interpreter, filename.to_unsafe)).value)"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/ScriptMode","path":"Cairo/ScriptMode.html","kind":"enum","full_name":"Cairo::ScriptMode","name":"ScriptMode","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/script_mode.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script_mode.cr#L4"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Ascii","name":"Ascii","value":"0","doc":null,"summary":null},{"id":"Binary","name":"Binary","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"ascii?-instance-method","html_id":"ascii?-instance-method","name":"ascii?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script_mode.cr#L4","def":{"name":"ascii?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Ascii"}},{"id":"binary?-instance-method","html_id":"binary?-instance-method","name":"binary?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/script_mode.cr#L4","def":{"name":"binary?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Binary"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Status","path":"Cairo/Status.html","kind":"enum","full_name":"Cairo::Status","name":"Status","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/status.cr","line_number":19,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L19"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Success","name":"Success","value":"0","doc":"No error has occurred.","summary":"<p>No error has occurred.</p>"},{"id":"NoMemory","name":"NoMemory","value":"1","doc":"Out of memory.","summary":"<p>Out of memory.</p>"},{"id":"InvalidRestore","name":"InvalidRestore","value":"2","doc":"`Context#restore` called without matching `Context#save`.","summary":"<p><code><a href=\"../Cairo/Context.html#restore-instance-method\">Context#restore</a></code> called without matching <code><a href=\"../Cairo/Context.html#save-instance-method\">Context#save</a></code>.</p>"},{"id":"InvalidPopGroup","name":"InvalidPopGroup","value":"3","doc":"No saved group to pop, i.e. `Context#pop_group` without matching `Context#push_group`.","summary":"<p>No saved group to pop, i.e.</p>"},{"id":"NoCurrentPoint","name":"NoCurrentPoint","value":"4","doc":"No current point defined.","summary":"<p>No current point defined.</p>"},{"id":"InvalidMatrix","name":"InvalidMatrix","value":"5","doc":"Invalid matrix (not invertible).","summary":"<p>Invalid matrix (not invertible).</p>"},{"id":"InvalidStatus","name":"InvalidStatus","value":"6","doc":"Invalid value for an input `Status`.","summary":"<p>Invalid value for an input <code><a href=\"../Cairo/Status.html\">Status</a></code>.</p>"},{"id":"NullPointer","name":"NullPointer","value":"7","doc":"NULL pointer.","summary":"<p>NULL pointer.</p>"},{"id":"InvalidString","name":"InvalidString","value":"8","doc":"Input string not valid UTF-8.","summary":"<p>Input string not valid UTF-8.</p>"},{"id":"InvalidPathData","name":"InvalidPathData","value":"9","doc":"Input path data not valid.","summary":"<p>Input path data not valid.</p>"},{"id":"ReadError","name":"ReadError","value":"10","doc":"Error while reading from input stream.","summary":"<p>Error while reading from input stream.</p>"},{"id":"WriteError","name":"WriteError","value":"11","doc":"Error while writing to output stream.","summary":"<p>Error while writing to output stream.</p>"},{"id":"SurfaceFinished","name":"SurfaceFinished","value":"12","doc":"Target surface has been finished.","summary":"<p>Target surface has been finished.</p>"},{"id":"SurfaceTypeMismatch","name":"SurfaceTypeMismatch","value":"13","doc":"The surface type is not appropriate for the operation.","summary":"<p>The surface type is not appropriate for the operation.</p>"},{"id":"PatternTypeMismatch","name":"PatternTypeMismatch","value":"14","doc":"The pattern type is not appropriate for the operation.","summary":"<p>The pattern type is not appropriate for the operation.</p>"},{"id":"InvalidContent","name":"InvalidContent","value":"15","doc":"Invalid value for an input `Content`.","summary":"<p>Invalid value for an input <code><a href=\"../Cairo/Content.html\">Content</a></code>.</p>"},{"id":"InvalidFormat","name":"InvalidFormat","value":"16","doc":"Invalid value for an input `Format`.","summary":"<p>Invalid value for an input <code><a href=\"../Cairo/Format.html\">Format</a></code>.</p>"},{"id":"InvalidVisual","name":"InvalidVisual","value":"17","doc":"Invalid value for an input `Visual`.","summary":"<p>Invalid value for an input <code>Visual</code>.</p>"},{"id":"FileNotFound","name":"FileNotFound","value":"18","doc":"File not found.","summary":"<p>File not found.</p>"},{"id":"InvalidDash","name":"InvalidDash","value":"19","doc":"Invalid value for a dash setting.","summary":"<p>Invalid value for a dash setting.</p>"},{"id":"InvalidDscComment","name":"InvalidDscComment","value":"20","doc":"Invalid value for a DSC comment.","summary":"<p>Invalid value for a DSC comment.</p>"},{"id":"InvalidIndex","name":"InvalidIndex","value":"21","doc":"Invalid index passed to getter.","summary":"<p>Invalid index passed to getter.</p>"},{"id":"ClipNotRepresentable","name":"ClipNotRepresentable","value":"22","doc":"Clip region not representable in desired format.","summary":"<p>Clip region not representable in desired format.</p>"},{"id":"TempFileRrror","name":"TempFileRrror","value":"23","doc":"Error creating or writing to a temporary file.","summary":"<p>Error creating or writing to a temporary file.</p>"},{"id":"InvalidStride","name":"InvalidStride","value":"24","doc":"Invalid value for stride.","summary":"<p>Invalid value for stride.</p>"},{"id":"FontTypeMismatch","name":"FontTypeMismatch","value":"25","doc":"The font type is not appropriate for the operation.","summary":"<p>The font type is not appropriate for the operation.</p>"},{"id":"UserFontImmutable","name":"UserFontImmutable","value":"26","doc":"The user-font is immutable.","summary":"<p>The user-font is immutable.</p>"},{"id":"UserFontError","name":"UserFontError","value":"27","doc":"Error occurred in a user-font callback function.","summary":"<p>Error occurred in a user-font callback function.</p>"},{"id":"NegativeCount","name":"NegativeCount","value":"28","doc":"Negative number used where it is not allowed.","summary":"<p>Negative number used where it is not allowed.</p>"},{"id":"InvalidClusters","name":"InvalidClusters","value":"29","doc":"Input clusters do not represent the accompanying text and glyph array.","summary":"<p>Input clusters do not represent the accompanying text and glyph array.</p>"},{"id":"InvalidSlant","name":"InvalidSlant","value":"30","doc":"Invalid value for an input `FontSlant`.","summary":"<p>Invalid value for an input <code><a href=\"../Cairo/FontSlant.html\">FontSlant</a></code>.</p>"},{"id":"InvalidWeight","name":"InvalidWeight","value":"31","doc":"Invalid value for an input `FontWeight`.","summary":"<p>Invalid value for an input <code><a href=\"../Cairo/FontWeight.html\">FontWeight</a></code>.</p>"},{"id":"InvalidSize","name":"InvalidSize","value":"32","doc":"Invalid value (typically too big) for the size of the input (surface, pattern, etc.).","summary":"<p>Invalid value (typically too big) for the size of the input (surface, pattern, etc.).</p>"},{"id":"UserFontNotImplemented","name":"UserFontNotImplemented","value":"33","doc":"User-font method not implemented.","summary":"<p>User-font method not implemented.</p>"},{"id":"DeviceTypeMismatch","name":"DeviceTypeMismatch","value":"34","doc":"The device type is not appropriate for the operation.","summary":"<p>The device type is not appropriate for the operation.</p>"},{"id":"DeviceError","name":"DeviceError","value":"35","doc":"An operation to the device caused an unspecified error.","summary":"<p>An operation to the device caused an unspecified error.</p>"},{"id":"InvalidMeshConstruction","name":"InvalidMeshConstruction","value":"36","doc":"A mesh pattern construction operation was used outside of a\n`Pattern#begin_patch`/`Pattern#end_patch` pair.","summary":"<p>A mesh pattern construction operation was used outside of a <code><a href=\"../Cairo/Pattern.html#begin_patch-instance-method\">Pattern#begin_patch</a></code>/<code><a href=\"../Cairo/Pattern.html#end_patch-instance-method\">Pattern#end_patch</a></code> pair.</p>"},{"id":"DeviceFinished","name":"DeviceFinished","value":"37","doc":"Target device has been finished.","summary":"<p>Target device has been finished.</p>"},{"id":"Jbig2GlobalMissing","name":"Jbig2GlobalMissing","value":"38","doc":"`Cairo::C::LibCairo::MIME_TYPE_JBIG2_GLOBAL_ID` has been used on at least one image but no image provided `Cairo::C::LibCairo::MIME_TYPE_JBIG2_GLOBAL`.","summary":"<p><code><a href=\"../Cairo.html\">Cairo</a>::C::LibCairo::MIME_TYPE_JBIG2_GLOBAL_ID</code> has been used on at least one image but no image provided <code><a href=\"../Cairo.html\">Cairo</a>::C::LibCairo::MIME_TYPE_JBIG2_GLOBAL</code>.</p>"},{"id":"PngError","name":"PngError","value":"39","doc":"Error occurred in libpng while reading from or writing to a PNG file.","summary":"<p>Error occurred in libpng while reading from or writing to a PNG file.</p>"},{"id":"FreeTypeError","name":"FreeTypeError","value":"40","doc":"Error occurred in libfreetype.","summary":"<p>Error occurred in libfreetype.</p>"},{"id":"Win32GdiError","name":"Win32GdiError","value":"41","doc":"Error occurred in the Windows Graphics Device Interface.","summary":"<p>Error occurred in the Windows Graphics Device Interface.</p>"},{"id":"TagError","name":"TagError","value":"42","doc":"Invalid tag name, attributes, or nesting.","summary":"<p>Invalid tag name, attributes, or nesting.</p>"},{"id":"LastStatus","name":"LastStatus","value":"43","doc":"This is a special value indicating the number of status values defined in this enumeration.\nWhen using this value, NOTE that the version of cairo at run-time may have additional status values defined\nthan the value of this symbol at compile-time.","summary":"<p>This is a special value indicating the number of status values defined in this enumeration.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Cairo uses a single status type to represent all kinds of errors. A status value of `Success` represents no error and has an integer\nvalue of zero. All other status values represent an error.\n\nCairo's error handling is designed to be easy to use and safe. All major cairo objects retain an error status internally\nwhich can be queried anytime by the users using `status` calls. In the mean time,\nit is safe to call all cairo functions normally even if the underlying object is in an error status.\nThis means that no error handling code is required before or after each individual cairo function call.\n\n\n`Status` is used to indicate errors that can occur when using `Context`. In some cases it is returned directly by functions.\nBut when using `Context`, the last error, if any, is stored in the context and can be retrieved with `Context#status`.\n\nNew entries may be added in future versions. Use `Status#to_string` to get a human-readable representation of an error message.","summary":"<p>Cairo uses a single status type to represent all kinds of errors.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"clip_not_representable?-instance-method","html_id":"clip_not_representable?-instance-method","name":"clip_not_representable?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L87","def":{"name":"clip_not_representable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ClipNotRepresentable"}},{"id":"device_error?-instance-method","html_id":"device_error?-instance-method","name":"device_error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L126","def":{"name":"device_error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DeviceError"}},{"id":"device_finished?-instance-method","html_id":"device_finished?-instance-method","name":"device_finished?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L133","def":{"name":"device_finished?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DeviceFinished"}},{"id":"device_type_mismatch?-instance-method","html_id":"device_type_mismatch?-instance-method","name":"device_type_mismatch?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L123","def":{"name":"device_type_mismatch?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DeviceTypeMismatch"}},{"id":"file_not_found?-instance-method","html_id":"file_not_found?-instance-method","name":"file_not_found?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L75","def":{"name":"file_not_found?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FileNotFound"}},{"id":"font_type_mismatch?-instance-method","html_id":"font_type_mismatch?-instance-method","name":"font_type_mismatch?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L96","def":{"name":"font_type_mismatch?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FontTypeMismatch"}},{"id":"free_type_error?-instance-method","html_id":"free_type_error?-instance-method","name":"free_type_error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L142","def":{"name":"free_type_error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FreeTypeError"}},{"id":"invalid_clusters?-instance-method","html_id":"invalid_clusters?-instance-method","name":"invalid_clusters?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L108","def":{"name":"invalid_clusters?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidClusters"}},{"id":"invalid_content?-instance-method","html_id":"invalid_content?-instance-method","name":"invalid_content?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L66","def":{"name":"invalid_content?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidContent"}},{"id":"invalid_dash?-instance-method","html_id":"invalid_dash?-instance-method","name":"invalid_dash?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L78","def":{"name":"invalid_dash?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidDash"}},{"id":"invalid_dsc_comment?-instance-method","html_id":"invalid_dsc_comment?-instance-method","name":"invalid_dsc_comment?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L81","def":{"name":"invalid_dsc_comment?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidDscComment"}},{"id":"invalid_format?-instance-method","html_id":"invalid_format?-instance-method","name":"invalid_format?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L69","def":{"name":"invalid_format?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidFormat"}},{"id":"invalid_index?-instance-method","html_id":"invalid_index?-instance-method","name":"invalid_index?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L84","def":{"name":"invalid_index?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidIndex"}},{"id":"invalid_matrix?-instance-method","html_id":"invalid_matrix?-instance-method","name":"invalid_matrix?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L36","def":{"name":"invalid_matrix?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidMatrix"}},{"id":"invalid_mesh_construction?-instance-method","html_id":"invalid_mesh_construction?-instance-method","name":"invalid_mesh_construction?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L130","def":{"name":"invalid_mesh_construction?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidMeshConstruction"}},{"id":"invalid_path_data?-instance-method","html_id":"invalid_path_data?-instance-method","name":"invalid_path_data?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L48","def":{"name":"invalid_path_data?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidPathData"}},{"id":"invalid_pop_group?-instance-method","html_id":"invalid_pop_group?-instance-method","name":"invalid_pop_group?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L30","def":{"name":"invalid_pop_group?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidPopGroup"}},{"id":"invalid_restore?-instance-method","html_id":"invalid_restore?-instance-method","name":"invalid_restore?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L27","def":{"name":"invalid_restore?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidRestore"}},{"id":"invalid_size?-instance-method","html_id":"invalid_size?-instance-method","name":"invalid_size?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L117","def":{"name":"invalid_size?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidSize"}},{"id":"invalid_slant?-instance-method","html_id":"invalid_slant?-instance-method","name":"invalid_slant?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L111","def":{"name":"invalid_slant?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidSlant"}},{"id":"invalid_status?-instance-method","html_id":"invalid_status?-instance-method","name":"invalid_status?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L39","def":{"name":"invalid_status?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidStatus"}},{"id":"invalid_stride?-instance-method","html_id":"invalid_stride?-instance-method","name":"invalid_stride?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L93","def":{"name":"invalid_stride?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidStride"}},{"id":"invalid_string?-instance-method","html_id":"invalid_string?-instance-method","name":"invalid_string?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L45","def":{"name":"invalid_string?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidString"}},{"id":"invalid_visual?-instance-method","html_id":"invalid_visual?-instance-method","name":"invalid_visual?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L72","def":{"name":"invalid_visual?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidVisual"}},{"id":"invalid_weight?-instance-method","html_id":"invalid_weight?-instance-method","name":"invalid_weight?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L114","def":{"name":"invalid_weight?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == InvalidWeight"}},{"id":"jbig2_global_missing?-instance-method","html_id":"jbig2_global_missing?-instance-method","name":"jbig2_global_missing?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L136","def":{"name":"jbig2_global_missing?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Jbig2GlobalMissing"}},{"id":"last_status?-instance-method","html_id":"last_status?-instance-method","name":"last_status?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L153","def":{"name":"last_status?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LastStatus"}},{"id":"negative_count?-instance-method","html_id":"negative_count?-instance-method","name":"negative_count?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L105","def":{"name":"negative_count?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NegativeCount"}},{"id":"no_current_point?-instance-method","html_id":"no_current_point?-instance-method","name":"no_current_point?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L33","def":{"name":"no_current_point?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NoCurrentPoint"}},{"id":"no_memory?-instance-method","html_id":"no_memory?-instance-method","name":"no_memory?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L24","def":{"name":"no_memory?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NoMemory"}},{"id":"null_pointer?-instance-method","html_id":"null_pointer?-instance-method","name":"null_pointer?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L42","def":{"name":"null_pointer?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NullPointer"}},{"id":"pattern_type_mismatch?-instance-method","html_id":"pattern_type_mismatch?-instance-method","name":"pattern_type_mismatch?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L63","def":{"name":"pattern_type_mismatch?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PatternTypeMismatch"}},{"id":"png_error?-instance-method","html_id":"png_error?-instance-method","name":"png_error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L139","def":{"name":"png_error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PngError"}},{"id":"read_error?-instance-method","html_id":"read_error?-instance-method","name":"read_error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L51","def":{"name":"read_error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ReadError"}},{"id":"success?-instance-method","html_id":"success?-instance-method","name":"success?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L21","def":{"name":"success?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Success"}},{"id":"surface_finished?-instance-method","html_id":"surface_finished?-instance-method","name":"surface_finished?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L57","def":{"name":"surface_finished?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SurfaceFinished"}},{"id":"surface_type_mismatch?-instance-method","html_id":"surface_type_mismatch?-instance-method","name":"surface_type_mismatch?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L60","def":{"name":"surface_type_mismatch?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SurfaceTypeMismatch"}},{"id":"tag_error?-instance-method","html_id":"tag_error?-instance-method","name":"tag_error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L148","def":{"name":"tag_error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == TagError"}},{"id":"temp_file_rrror?-instance-method","html_id":"temp_file_rrror?-instance-method","name":"temp_file_rrror?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L90","def":{"name":"temp_file_rrror?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == TempFileRrror"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"Provides a human-readable description.","summary":"<p>Provides a human-readable description.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L156","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.new(LibCairo.status_to_string(LibCairo::StatusT.new(self)))"}},{"id":"user_font_error?-instance-method","html_id":"user_font_error?-instance-method","name":"user_font_error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L102","def":{"name":"user_font_error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == UserFontError"}},{"id":"user_font_immutable?-instance-method","html_id":"user_font_immutable?-instance-method","name":"user_font_immutable?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L99","def":{"name":"user_font_immutable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == UserFontImmutable"}},{"id":"user_font_not_implemented?-instance-method","html_id":"user_font_not_implemented?-instance-method","name":"user_font_not_implemented?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L120","def":{"name":"user_font_not_implemented?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == UserFontNotImplemented"}},{"id":"win32_gdi_error?-instance-method","html_id":"win32_gdi_error?-instance-method","name":"win32_gdi_error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L145","def":{"name":"win32_gdi_error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Win32GdiError"}},{"id":"write_error?-instance-method","html_id":"write_error?-instance-method","name":"write_error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status.cr#L54","def":{"name":"write_error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == WriteError"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/StatusException","path":"Cairo/StatusException.html","kind":"class","full_name":"Cairo::StatusException","name":"StatusException","abstract":false,"superclass":{"html_id":"cairo/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"cairo/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/status_exception.cr","line_number":2,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status_exception.cr#L2"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(status:Status,message:String?=nil,cause:Exception?=nil)-class-method","html_id":"new(status:Status,message:String?=nil,cause:Exception?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"status","doc":null,"default_value":"","external_name":"status","restriction":"Status"},{"name":"message","doc":null,"default_value":"nil","external_name":"message","restriction":"String | ::Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"}],"args_string":"(status : Status, message : String? = <span class=\"n\">nil</span>, cause : Exception? = <span class=\"n\">nil</span>)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status_exception.cr#L5","def":{"name":"new","args":[{"name":"status","doc":null,"default_value":"","external_name":"status","restriction":"Status"},{"name":"message","doc":null,"default_value":"nil","external_name":"message","restriction":"String | ::Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(status, message, cause)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"status:Status-instance-method","html_id":"status:Status-instance-method","name":"status","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/status_exception.cr#L3","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"@status"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/SubpixelOrder","path":"Cairo/SubpixelOrder.html","kind":"enum","full_name":"Cairo::SubpixelOrder","name":"SubpixelOrder","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/subpixel_order.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/subpixel_order.cr#L4"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Default","name":"Default","value":"0","doc":"Use the default subpixel order for for the target device.","summary":"<p>Use the default subpixel order for for the target device.</p>"},{"id":"RGB","name":"RGB","value":"1","doc":"Subpixel elements are arranged horizontally with red at the left.","summary":"<p>Subpixel elements are arranged horizontally with red at the left.</p>"},{"id":"BGR","name":"BGR","value":"2","doc":"Subpixel elements are arranged horizontally with blue at the left.","summary":"<p>Subpixel elements are arranged horizontally with blue at the left.</p>"},{"id":"VRGB","name":"VRGB","value":"3","doc":"Subpixel elements are arranged vertically with red at the top.","summary":"<p>Subpixel elements are arranged vertically with red at the top.</p>"},{"id":"VBGR","name":"VBGR","value":"4","doc":"Subpixel elements are arranged vertically with blue at the top.","summary":"<p>Subpixel elements are arranged vertically with blue at the top.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"The subpixel order specifies the order of color elements within each\npixel on the display device when rendering with an antialiasing mode of `Antialias::Subpixel`.","summary":"<p>The subpixel order specifies the order of color elements within each pixel on the display device when rendering with an antialiasing mode of <code><a href=\"../Cairo/Antialias.html#Subpixel\">Antialias::Subpixel</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"bgr?-instance-method","html_id":"bgr?-instance-method","name":"bgr?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/subpixel_order.cr#L12","def":{"name":"bgr?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == BGR"}},{"id":"default?-instance-method","html_id":"default?-instance-method","name":"default?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/subpixel_order.cr#L6","def":{"name":"default?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Default"}},{"id":"rgb?-instance-method","html_id":"rgb?-instance-method","name":"rgb?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/subpixel_order.cr#L9","def":{"name":"rgb?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RGB"}},{"id":"vbgr?-instance-method","html_id":"vbgr?-instance-method","name":"vbgr?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/subpixel_order.cr#L18","def":{"name":"vbgr?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == VBGR"}},{"id":"vrgb?-instance-method","html_id":"vrgb?-instance-method","name":"vrgb?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/subpixel_order.cr#L15","def":{"name":"vrgb?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == VRGB"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/Surface","path":"Cairo/Surface.html","kind":"class","full_name":"Cairo::Surface","name":"Surface","abstract":false,"superclass":{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/surface.cr","line_number":8,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L8"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"cairo/Cairo/PdfSurface","kind":"class","full_name":"Cairo::PdfSurface","name":"PdfSurface"},{"html_id":"cairo/Cairo/PsSurface","kind":"class","full_name":"Cairo::PsSurface","name":"PsSurface"},{"html_id":"cairo/Cairo/SvgSurface","kind":"class","full_name":"Cairo::SvgSurface","name":"SvgSurface"},{"html_id":"cairo/Cairo/TeeSurface","kind":"class","full_name":"Cairo::TeeSurface","name":"TeeSurface"},{"html_id":"cairo/Cairo/XlibSurface","kind":"class","full_name":"Cairo::XlibSurface","name":"XlibSurface"}],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Wrapper for LibCairo::PSurfaceT","summary":"<p>Wrapper for LibCairo::PSurfaceT</p>","class_methods":[],"constructors":[{"id":"new(data:Bytes,format:Format,width:Int32,height:Int32,stride:Int32)-class-method","html_id":"new(data:Bytes,format:Format,width:Int32,height:Int32,stride:Int32)-class-method","name":"new","doc":"Create Image Surface for Data","summary":"<p>Create Image Surface for Data</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"Format"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"},{"name":"stride","doc":null,"default_value":"","external_name":"stride","restriction":"Int32"}],"args_string":"(data : Bytes, format : Format, width : Int32, height : Int32, stride : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L20","def":{"name":"new","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"Format"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"},{"name":"stride","doc":null,"default_value":"","external_name":"stride","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(data, format, width, height, stride)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(format:Format,width:Int32,height:Int32)-class-method","html_id":"new(format:Format,width:Int32,height:Int32)-class-method","name":"new","doc":"Create Image Surface","summary":"<p>Create Image Surface</p>","abstract":false,"args":[{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"Format"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(format : Format, width : Int32, height : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L15","def":{"name":"new","args":[{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"Format"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(format, width, height)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(read_func:LibCairo::ReadFuncT,closure:Pointer(Void))-class-method","html_id":"new(read_func:LibCairo::ReadFuncT,closure:Pointer(Void))-class-method","name":"new","doc":"Create Image Surface form PNG Stream","summary":"<p>Create Image Surface form PNG Stream</p>","abstract":false,"args":[{"name":"read_func","doc":null,"default_value":"","external_name":"read_func","restriction":"LibCairo::ReadFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"}],"args_string":"(read_func : LibCairo::ReadFuncT, closure : Pointer(Void))","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L25","def":{"name":"new","args":[{"name":"read_func","doc":null,"default_value":"","external_name":"read_func","restriction":"LibCairo::ReadFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(read_func, closure)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(content:Content,extents:Rectangle?)-class-method","html_id":"new(content:Content,extents:Rectangle?)-class-method","name":"new","doc":"Create Recording Surface","summary":"<p>Create Recording Surface</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"Content"},{"name":"extents","doc":null,"default_value":"","external_name":"extents","restriction":"Rectangle | ::Nil"}],"args_string":"(content : Content, extents : Rectangle?)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L40","def":{"name":"new","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"Content"},{"name":"extents","doc":null,"default_value":"","external_name":"extents","restriction":"Rectangle | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(content, extents)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(surface:LibCairo::PSurfaceT)-class-method","html_id":"new(surface:LibCairo::PSurfaceT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"surface","doc":null,"default_value":"","external_name":"surface","restriction":"LibCairo::PSurfaceT"}],"args_string":"(surface : LibCairo::PSurfaceT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L9","def":{"name":"new","args":[{"name":"surface","doc":null,"default_value":"","external_name":"surface","restriction":"LibCairo::PSurfaceT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(surface)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(filename:String)-class-method","html_id":"new(filename:String)-class-method","name":"new","doc":"Create Image Surface form PNG","summary":"<p>Create Image Surface form PNG</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L25","def":{"name":"new","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(filename)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"content:Content-instance-method","html_id":"content:Content-instance-method","name":"content","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Content","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L145","def":{"name":"content","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Content","visibility":"Public","body":"Content.new((LibCairo.surface_get_content(@surface)).value)"}},{"id":"copy_page-instance-method","html_id":"copy_page-instance-method","name":"copy_page","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L249","def":{"name":"copy_page","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.surface_copy_page(@surface)\nself\n"}},{"id":"create_for_rectangle(x:Float64,y:Float64,width:Float64,height:Float64):Surface-instance-method","html_id":"create_for_rectangle(x:Float64,y:Float64,width:Float64,height:Float64):Surface-instance-method","name":"create_for_rectangle","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Float64"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"}],"args_string":"(x : Float64, y : Float64, width : Float64, height : Float64) : Surface","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L76","def":{"name":"create_for_rectangle","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float64"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float64"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Float64"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Surface","visibility":"Public","body":"Surface.new(LibCairo.surface_create_for_rectangle(@surface, x, y, width, height))"}},{"id":"create_observer(mode:SurfaceObserverMode):Surface-instance-method","html_id":"create_observer(mode:SurfaceObserverMode):Surface-instance-method","name":"create_observer","doc":null,"summary":null,"abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"SurfaceObserverMode"}],"args_string":"(mode : SurfaceObserverMode) : Surface","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L80","def":{"name":"create_observer","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"SurfaceObserverMode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Surface","visibility":"Public","body":"Surface.new(LibCairo.surface_create_observer(@surface, LibCairo::SurfaceObserverModeT.new(mode.value)))"}},{"id":"create_similar(content:Content,width:Int32,height:Int32):Surface-instance-method","html_id":"create_similar(content:Content,width:Int32,height:Int32):Surface-instance-method","name":"create_similar","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"Content"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(content : Content, width : Int32, height : Int32) : Surface","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L55","def":{"name":"create_similar","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"Content"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Surface","visibility":"Public","body":"Surface.new(LibCairo.surface_create_similar(@surface, LibCairo::ContentT.new(content.value), width, height))"}},{"id":"create_similar_image(format:Format,width:Int32,height:Int32):Surface-instance-method","html_id":"create_similar_image(format:Format,width:Int32,height:Int32):Surface-instance-method","name":"create_similar_image","doc":null,"summary":null,"abstract":false,"args":[{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"Format"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(format : Format, width : Int32, height : Int32) : Surface","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L59","def":{"name":"create_similar_image","args":[{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"Format"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Surface","visibility":"Public","body":"Surface.new(LibCairo.surface_create_similar_image(@surface, LibCairo::FormatT.new(format.value), width, height))"}},{"id":"data:String-instance-method","html_id":"data:String-instance-method","name":"data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L263","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.new(LibCairo.image_surface_get_data(@surface))"}},{"id":"device:Device-instance-method","html_id":"device:Device-instance-method","name":"device","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Device","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L129","def":{"name":"device","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Device","visibility":"Public","body":"Device.new(LibCairo.surface_get_device(@surface))"}},{"id":"device_offset:Point-instance-method","html_id":"device_offset:Point-instance-method","name":"device_offset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Point","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L224","def":{"name":"device_offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point","visibility":"Public","body":"LibCairo.surface_get_device_offset(@surface, out x_offset, out y_offset)\nPoint.new(x_offset, y_offset)\n"}},{"id":"device_offset=(offset:Point)-instance-method","html_id":"device_offset=(offset:Point)-instance-method","name":"device_offset=","doc":null,"summary":null,"abstract":false,"args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Point"}],"args_string":"(offset : Point)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L229","def":{"name":"device_offset=","args":[{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.surface_set_device_offset(@surface, offset.x, offset.y)\nself\n"}},{"id":"device_scale:Point-instance-method","html_id":"device_scale:Point-instance-method","name":"device_scale","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Point","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L209","def":{"name":"device_scale","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point","visibility":"Public","body":"LibCairo.surface_get_device_scale(@surface, out x_scale, out y_scale)\nPoint.new(x_scale, x_scale)\n"}},{"id":"device_scale=(scale:Point)-instance-method","html_id":"device_scale=(scale:Point)-instance-method","name":"device_scale=","doc":null,"summary":null,"abstract":false,"args":[{"name":"scale","doc":null,"default_value":"","external_name":"scale","restriction":"Point"}],"args_string":"(scale : Point)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L214","def":{"name":"device_scale=","args":[{"name":"scale","doc":null,"default_value":"","external_name":"scale","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.surface_set_device_scale(@surface, scale.x, scale.y)\nself\n"}},{"id":"extents:NamedTuple()-instance-method","html_id":"extents:NamedTuple()-instance-method","name":"extents","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : NamedTuple()","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L288","def":{"name":"extents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(extents: Rectangle, bounded: Bool)","visibility":"Public","body":"bounded = (LibCairo.recording_surface_get_extents(@surface, out extents)) == 1\n{extents: extents, bounded: bounded}\n"}},{"id":"fallback_resolution:Point-instance-method","html_id":"fallback_resolution:Point-instance-method","name":"fallback_resolution","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Point","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L239","def":{"name":"fallback_resolution","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point","visibility":"Public","body":"LibCairo.surface_get_fallback_resolution(@surface, out x_ppi, out y_ppi)\nPoint.new(x_ppi, y_ppi)\n"}},{"id":"fallback_resolution=(res:Point)-instance-method","html_id":"fallback_resolution=(res:Point)-instance-method","name":"fallback_resolution=","doc":null,"summary":null,"abstract":false,"args":[{"name":"res","doc":null,"default_value":"","external_name":"res","restriction":"Point"}],"args_string":"(res : Point)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L244","def":{"name":"fallback_resolution=","args":[{"name":"res","doc":null,"default_value":"","external_name":"res","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.surface_set_fallback_resolution(@surface, res.x, res.y)\nself\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L51","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.surface_destroy(@surface)"}},{"id":"finish-instance-method","html_id":"finish-instance-method","name":"finish","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L124","def":{"name":"finish","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.surface_finish(@surface)\nself\n"}},{"id":"flush-instance-method","html_id":"flush-instance-method","name":"flush","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L189","def":{"name":"flush","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.surface_flush(@surface)\nself\n"}},{"id":"font_options:FontOptions-instance-method","html_id":"font_options:FontOptions-instance-method","name":"font_options","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : FontOptions","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L183","def":{"name":"font_options","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FontOptions","visibility":"Public","body":"font_options = FontOptions.new\nLibCairo.surface_get_font_options(@surface, font_options.to_unsafe)\nfont_options\n"}},{"id":"format:Format-instance-method","html_id":"format:Format-instance-method","name":"format","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Format","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L267","def":{"name":"format","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Format","visibility":"Public","body":"Format.new((LibCairo.image_surface_get_format(@surface)).value)"}},{"id":"get_type:SurfaceType-instance-method","html_id":"get_type:SurfaceType-instance-method","name":"get_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : SurfaceType","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L141","def":{"name":"get_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SurfaceType","visibility":"Public","body":"SurfaceType.new((LibCairo.surface_get_type(@surface)).value)"}},{"id":"has_show_text_glyphs?:Bool-instance-method","html_id":"has_show_text_glyphs?:Bool-instance-method","name":"has_show_text_glyphs?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L259","def":{"name":"has_show_text_glyphs?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(LibCairo.surface_has_show_text_glyphs(@surface)) == 2"}},{"id":"height:Int32-instance-method","html_id":"height:Int32-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L275","def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"LibCairo.image_surface_get_height(@surface)"}},{"id":"ink_extents:Rectangle-instance-method","html_id":"ink_extents:Rectangle-instance-method","name":"ink_extents","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Rectangle","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L283","def":{"name":"ink_extents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Rectangle","visibility":"Public","body":"LibCairo.recording_surface_ink_extents(@surface, out x0, out y0, out width, out height)\nRectangle.new(x1, y1, width, height)\n"}},{"id":"map_to_image(extents:RectangleInt?):Surface-instance-method","html_id":"map_to_image(extents:RectangleInt?):Surface-instance-method","name":"map_to_image","doc":null,"summary":null,"abstract":false,"args":[{"name":"extents","doc":null,"default_value":"","external_name":"extents","restriction":"RectangleInt | ::Nil"}],"args_string":"(extents : RectangleInt?) : Surface","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L63","def":{"name":"map_to_image","args":[{"name":"extents","doc":null,"default_value":"","external_name":"extents","restriction":"RectangleInt | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Surface","visibility":"Public","body":"if extents.is_a(RectangleInt)\n  Surface.new(LibCairo.surface_map_to_image(@surface, (extents.as(RectangleInt)).to_unsafe))\nelse\n  Surface.new(LibCairo.surface_map_to_image(@surface, nil))\nend"}},{"id":"mark_dirty-instance-method","html_id":"mark_dirty-instance-method","name":"mark_dirty","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L194","def":{"name":"mark_dirty","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.surface_mark_dirty(@surface)\nself\n"}},{"id":"mark_dirty_rectangle(x:Int32,y:Int32,width:Int32,height:Int32)-instance-method","html_id":"mark_dirty_rectangle(x:Int32,y:Int32,width:Int32,height:Int32)-instance-method","name":"mark_dirty_rectangle","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(x : Int32, y : Int32, width : Int32, height : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L199","def":{"name":"mark_dirty_rectangle","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.surface_mark_dirty_rectangle(@surface, x, y, width, height)\nself\n"}},{"id":"mime_data(mime_type:String):Bytes-instance-method","html_id":"mime_data(mime_type:String):Bytes-instance-method","name":"mime_data","doc":null,"summary":null,"abstract":false,"args":[{"name":"mime_type","doc":null,"default_value":"","external_name":"mime_type","restriction":"String"}],"args_string":"(mime_type : String) : Bytes","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L169","def":{"name":"mime_data","args":[{"name":"mime_type","doc":null,"default_value":"","external_name":"mime_type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"LibCairo.surface_get_mime_data(@surface, mime_type.to_unsafe, out data, out length)\nBytes.new(data, length)\n"}},{"id":"observer_add_fill_callback(func:LibCairo::SurfaceObserverCallbackT,data:Pointer(Void)):Status-instance-method","html_id":"observer_add_fill_callback(func:LibCairo::SurfaceObserverCallbackT,data:Pointer(Void)):Status-instance-method","name":"observer_add_fill_callback","doc":null,"summary":null,"abstract":false,"args":[{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"LibCairo::SurfaceObserverCallbackT"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"args_string":"(func : LibCairo::SurfaceObserverCallbackT, data : Pointer(Void)) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L92","def":{"name":"observer_add_fill_callback","args":[{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"LibCairo::SurfaceObserverCallbackT"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.surface_observer_add_fill_callback(@surface, func, data)).value)"}},{"id":"observer_add_finish_callback(func:LibCairo::SurfaceObserverCallbackT,data:Pointer(Void)):Status-instance-method","html_id":"observer_add_finish_callback(func:LibCairo::SurfaceObserverCallbackT,data:Pointer(Void)):Status-instance-method","name":"observer_add_finish_callback","doc":null,"summary":null,"abstract":false,"args":[{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"LibCairo::SurfaceObserverCallbackT"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"args_string":"(func : LibCairo::SurfaceObserverCallbackT, data : Pointer(Void)) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L108","def":{"name":"observer_add_finish_callback","args":[{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"LibCairo::SurfaceObserverCallbackT"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.surface_observer_add_finish_callback(@surface, func, data)).value)"}},{"id":"observer_add_flush_callback(func:LibCairo::SurfaceObserverCallbackT,data:Pointer(Void)):Status-instance-method","html_id":"observer_add_flush_callback(func:LibCairo::SurfaceObserverCallbackT,data:Pointer(Void)):Status-instance-method","name":"observer_add_flush_callback","doc":null,"summary":null,"abstract":false,"args":[{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"LibCairo::SurfaceObserverCallbackT"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"args_string":"(func : LibCairo::SurfaceObserverCallbackT, data : Pointer(Void)) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L104","def":{"name":"observer_add_flush_callback","args":[{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"LibCairo::SurfaceObserverCallbackT"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.surface_observer_add_flush_callback(@surface, func, data)).value)"}},{"id":"observer_add_glyphs_callback(func:LibCairo::SurfaceObserverCallbackT,data:Pointer(Void)):Status-instance-method","html_id":"observer_add_glyphs_callback(func:LibCairo::SurfaceObserverCallbackT,data:Pointer(Void)):Status-instance-method","name":"observer_add_glyphs_callback","doc":null,"summary":null,"abstract":false,"args":[{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"LibCairo::SurfaceObserverCallbackT"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"args_string":"(func : LibCairo::SurfaceObserverCallbackT, data : Pointer(Void)) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L100","def":{"name":"observer_add_glyphs_callback","args":[{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"LibCairo::SurfaceObserverCallbackT"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.surface_observer_add_glyphs_callback(@surface, func, data)).value)"}},{"id":"observer_add_mask_callback(func:LibCairo::SurfaceObserverCallbackT,data:Pointer(Void)):Status-instance-method","html_id":"observer_add_mask_callback(func:LibCairo::SurfaceObserverCallbackT,data:Pointer(Void)):Status-instance-method","name":"observer_add_mask_callback","doc":null,"summary":null,"abstract":false,"args":[{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"LibCairo::SurfaceObserverCallbackT"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"args_string":"(func : LibCairo::SurfaceObserverCallbackT, data : Pointer(Void)) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L88","def":{"name":"observer_add_mask_callback","args":[{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"LibCairo::SurfaceObserverCallbackT"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.surface_observer_add_mask_callback(@surface, func, data)).value)"}},{"id":"observer_add_paint_callback(func:LibCairo::SurfaceObserverCallbackT,data:Pointer(Void)):Status-instance-method","html_id":"observer_add_paint_callback(func:LibCairo::SurfaceObserverCallbackT,data:Pointer(Void)):Status-instance-method","name":"observer_add_paint_callback","doc":null,"summary":null,"abstract":false,"args":[{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"LibCairo::SurfaceObserverCallbackT"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"args_string":"(func : LibCairo::SurfaceObserverCallbackT, data : Pointer(Void)) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L84","def":{"name":"observer_add_paint_callback","args":[{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"LibCairo::SurfaceObserverCallbackT"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.surface_observer_add_paint_callback(@surface, func, data)).value)"}},{"id":"observer_add_stroke_callback(func:LibCairo::SurfaceObserverCallbackT,data:Pointer(Void)):Status-instance-method","html_id":"observer_add_stroke_callback(func:LibCairo::SurfaceObserverCallbackT,data:Pointer(Void)):Status-instance-method","name":"observer_add_stroke_callback","doc":null,"summary":null,"abstract":false,"args":[{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"LibCairo::SurfaceObserverCallbackT"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"args_string":"(func : LibCairo::SurfaceObserverCallbackT, data : Pointer(Void)) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L96","def":{"name":"observer_add_stroke_callback","args":[{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"LibCairo::SurfaceObserverCallbackT"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.surface_observer_add_stroke_callback(@surface, func, data)).value)"}},{"id":"observer_elapsed:Float64-instance-method","html_id":"observer_elapsed:Float64-instance-method","name":"observer_elapsed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L116","def":{"name":"observer_elapsed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"LibCairo.surface_observer_elapsed(@surface)"}},{"id":"observer_print(write_func:LibCairo::WriteFuncT,closure:Pointer(Void)):Status-instance-method","html_id":"observer_print(write_func:LibCairo::WriteFuncT,closure:Pointer(Void)):Status-instance-method","name":"observer_print","doc":null,"summary":null,"abstract":false,"args":[{"name":"write_func","doc":null,"default_value":"","external_name":"write_func","restriction":"LibCairo::WriteFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"}],"args_string":"(write_func : LibCairo::WriteFuncT, closure : Pointer(Void)) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L112","def":{"name":"observer_print","args":[{"name":"write_func","doc":null,"default_value":"","external_name":"write_func","restriction":"LibCairo::WriteFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.surface_observer_print(@surface, write_func, closure)).value)"}},{"id":"reference:Surface-instance-method","html_id":"reference:Surface-instance-method","name":"reference","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Surface","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L120","def":{"name":"reference","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Surface","visibility":"Public","body":"Surface.new(LibCairo.surface_reference(@surface))"}},{"id":"reference_count:UInt32-instance-method","html_id":"reference_count:UInt32-instance-method","name":"reference_count","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L133","def":{"name":"reference_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"LibCairo.surface_get_reference_count(@surface)"}},{"id":"set_device_offset(x_offset:Float64,y_offset:Float64)-instance-method","html_id":"set_device_offset(x_offset:Float64,y_offset:Float64)-instance-method","name":"set_device_offset","doc":null,"summary":null,"abstract":false,"args":[{"name":"x_offset","doc":null,"default_value":"","external_name":"x_offset","restriction":"Float64"},{"name":"y_offset","doc":null,"default_value":"","external_name":"y_offset","restriction":"Float64"}],"args_string":"(x_offset : Float64, y_offset : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L219","def":{"name":"set_device_offset","args":[{"name":"x_offset","doc":null,"default_value":"","external_name":"x_offset","restriction":"Float64"},{"name":"y_offset","doc":null,"default_value":"","external_name":"y_offset","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.surface_set_device_offset(@surface, x_offset, y_offset)\nself\n"}},{"id":"set_device_scale(x_scale:Float64,y_scale:Float64)-instance-method","html_id":"set_device_scale(x_scale:Float64,y_scale:Float64)-instance-method","name":"set_device_scale","doc":null,"summary":null,"abstract":false,"args":[{"name":"x_scale","doc":null,"default_value":"","external_name":"x_scale","restriction":"Float64"},{"name":"y_scale","doc":null,"default_value":"","external_name":"y_scale","restriction":"Float64"}],"args_string":"(x_scale : Float64, y_scale : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L204","def":{"name":"set_device_scale","args":[{"name":"x_scale","doc":null,"default_value":"","external_name":"x_scale","restriction":"Float64"},{"name":"y_scale","doc":null,"default_value":"","external_name":"y_scale","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.surface_set_device_scale(@surface, x_scale, y_scale)\nself\n"}},{"id":"set_fallback_resolution(x_pixels_per_inch:Float64,y_pixels_per_inch:Float64)-instance-method","html_id":"set_fallback_resolution(x_pixels_per_inch:Float64,y_pixels_per_inch:Float64)-instance-method","name":"set_fallback_resolution","doc":null,"summary":null,"abstract":false,"args":[{"name":"x_pixels_per_inch","doc":null,"default_value":"","external_name":"x_pixels_per_inch","restriction":"Float64"},{"name":"y_pixels_per_inch","doc":null,"default_value":"","external_name":"y_pixels_per_inch","restriction":"Float64"}],"args_string":"(x_pixels_per_inch : Float64, y_pixels_per_inch : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L234","def":{"name":"set_fallback_resolution","args":[{"name":"x_pixels_per_inch","doc":null,"default_value":"","external_name":"x_pixels_per_inch","restriction":"Float64"},{"name":"y_pixels_per_inch","doc":null,"default_value":"","external_name":"y_pixels_per_inch","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.surface_set_fallback_resolution(@surface, x_pixels_per_inch, y_pixels_per_inch)\nself\n"}},{"id":"set_mime_data(mime_type:String,data:Bytes,destroy:LibCairo::DestroyFuncT,closure:Pointer(Void)):Status-instance-method","html_id":"set_mime_data(mime_type:String,data:Bytes,destroy:LibCairo::DestroyFuncT,closure:Pointer(Void)):Status-instance-method","name":"set_mime_data","doc":null,"summary":null,"abstract":false,"args":[{"name":"mime_type","doc":null,"default_value":"","external_name":"mime_type","restriction":"String"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"},{"name":"destroy","doc":null,"default_value":"","external_name":"destroy","restriction":"LibCairo::DestroyFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"}],"args_string":"(mime_type : String, data : Bytes, destroy : LibCairo::DestroyFuncT, closure : Pointer(Void)) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L174","def":{"name":"set_mime_data","args":[{"name":"mime_type","doc":null,"default_value":"","external_name":"mime_type","restriction":"String"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"},{"name":"destroy","doc":null,"default_value":"","external_name":"destroy","restriction":"LibCairo::DestroyFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.surface_set_mime_data(@surface, mime_type.to_unsafe, data.to_unsafe, data.size, destroy, closure)).value)"}},{"id":"set_user_data(key:UserDataKey,user_data:Pointer(Void),destroy:LibCairo::DestroyFuncT):Status-instance-method","html_id":"set_user_data(key:UserDataKey,user_data:Pointer(Void),destroy:LibCairo::DestroyFuncT):Status-instance-method","name":"set_user_data","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"},{"name":"user_data","doc":null,"default_value":"","external_name":"user_data","restriction":"::Pointer(Void)"},{"name":"destroy","doc":null,"default_value":"","external_name":"destroy","restriction":"LibCairo::DestroyFuncT"}],"args_string":"(key : UserDataKey, user_data : Pointer(Void), destroy : LibCairo::DestroyFuncT) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L165","def":{"name":"set_user_data","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"},{"name":"user_data","doc":null,"default_value":"","external_name":"user_data","restriction":"::Pointer(Void)"},{"name":"destroy","doc":null,"default_value":"","external_name":"destroy","restriction":"LibCairo::DestroyFuncT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.surface_set_user_data(@surface, key.to_unsafe, user_data, destroy)).value)"}},{"id":"status:Status-instance-method","html_id":"status:Status-instance-method","name":"status","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L137","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.surface_status(@surface)).value)"}},{"id":"stride:Int32-instance-method","html_id":"stride:Int32-instance-method","name":"stride","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L279","def":{"name":"stride","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"LibCairo.image_surface_get_stride(@surface)"}},{"id":"supports_mime_type?(mime_type:String):Bool-instance-method","html_id":"supports_mime_type?(mime_type:String):Bool-instance-method","name":"supports_mime_type?","doc":null,"summary":null,"abstract":false,"args":[{"name":"mime_type","doc":null,"default_value":"","external_name":"mime_type","restriction":"String"}],"args_string":"(mime_type : String) : Bool","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L179","def":{"name":"supports_mime_type?","args":[{"name":"mime_type","doc":null,"default_value":"","external_name":"mime_type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(LibCairo.surface_supports_mime_type(@surface, mime_type.to_unsafe)) == 1"}},{"id":"surface_show_page-instance-method","html_id":"surface_show_page-instance-method","name":"surface_show_page","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L254","def":{"name":"surface_show_page","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.surface_show_page(@surface)\nself\n"}},{"id":"to_unsafe:LibCairo::PSurfaceT-instance-method","html_id":"to_unsafe:LibCairo::PSurfaceT-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PSurfaceT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L293","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PSurfaceT","visibility":"Public","body":"@surface"}},{"id":"unmap_image(image:Surface)-instance-method","html_id":"unmap_image(image:Surface)-instance-method","name":"unmap_image","doc":null,"summary":null,"abstract":false,"args":[{"name":"image","doc":null,"default_value":"","external_name":"image","restriction":"Surface"}],"args_string":"(image : Surface)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L71","def":{"name":"unmap_image","args":[{"name":"image","doc":null,"default_value":"","external_name":"image","restriction":"Surface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.surface_unmap_image(@surface, image.to_unsafe)\nself\n"}},{"id":"user_data(key:UserDataKey):Pointer(Void)-instance-method","html_id":"user_data(key:UserDataKey):Pointer(Void)-instance-method","name":"user_data","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"}],"args_string":"(key : UserDataKey) : Pointer(Void)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L161","def":{"name":"user_data","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"UserDataKey"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Pointer(Void)","visibility":"Public","body":"LibCairo.surface_get_user_data(@surface, key.to_unsafe)"}},{"id":"width:Int32-instance-method","html_id":"width:Int32-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L271","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"LibCairo.image_surface_get_width(@surface)"}},{"id":"write_to_png(filename:String):Status-instance-method","html_id":"write_to_png(filename:String):Status-instance-method","name":"write_to_png","doc":null,"summary":null,"abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L149","def":{"name":"write_to_png","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.surface_write_to_png(@surface, filename.to_unsafe)).value)"}},{"id":"write_to_png_stream(write_func:LibCairo::WriteFuncT,closure:Pointer(Void)):Status-instance-method","html_id":"write_to_png_stream(write_func:LibCairo::WriteFuncT,closure:Pointer(Void)):Status-instance-method","name":"write_to_png_stream","doc":null,"summary":null,"abstract":false,"args":[{"name":"write_func","doc":null,"default_value":"","external_name":"write_func","restriction":"LibCairo::WriteFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"}],"args_string":"(write_func : LibCairo::WriteFuncT, closure : Pointer(Void)) : Status","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface.cr#L149","def":{"name":"write_to_png_stream","args":[{"name":"write_func","doc":null,"default_value":"","external_name":"write_func","restriction":"LibCairo::WriteFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Status","visibility":"Public","body":"Status.new((LibCairo.surface_write_to_png_stream(@surface, write_func, closure)).value)"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/SurfaceObserverMode","path":"Cairo/SurfaceObserverMode.html","kind":"enum","full_name":"Cairo::SurfaceObserverMode","name":"SurfaceObserverMode","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/surface_observer_mode.cr","line_number":2,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_observer_mode.cr#L2"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Normal","name":"Normal","value":"0","doc":null,"summary":null},{"id":"RecordOperations","name":"RecordOperations","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"normal?-instance-method","html_id":"normal?-instance-method","name":"normal?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_observer_mode.cr#L3","def":{"name":"normal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Normal"}},{"id":"record_operations?-instance-method","html_id":"record_operations?-instance-method","name":"record_operations?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_observer_mode.cr#L4","def":{"name":"record_operations?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RecordOperations"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/SurfaceType","path":"Cairo/SurfaceType.html","kind":"enum","full_name":"Cairo::SurfaceType","name":"SurfaceType","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/surface_type.cr","line_number":2,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L2"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Image","name":"Image","value":"0","doc":null,"summary":null},{"id":"PDF","name":"PDF","value":"1","doc":null,"summary":null},{"id":"PS","name":"PS","value":"2","doc":null,"summary":null},{"id":"XLib","name":"XLib","value":"3","doc":null,"summary":null},{"id":"XCB","name":"XCB","value":"4","doc":null,"summary":null},{"id":"Glitz","name":"Glitz","value":"5","doc":null,"summary":null},{"id":"Quartz","name":"Quartz","value":"6","doc":null,"summary":null},{"id":"Win32","name":"Win32","value":"7","doc":null,"summary":null},{"id":"BEOS","name":"BEOS","value":"8","doc":null,"summary":null},{"id":"DirectFB","name":"DirectFB","value":"9","doc":null,"summary":null},{"id":"SVG","name":"SVG","value":"10","doc":null,"summary":null},{"id":"OS2","name":"OS2","value":"11","doc":null,"summary":null},{"id":"Win32Printing","name":"Win32Printing","value":"12","doc":null,"summary":null},{"id":"QuartzImage","name":"QuartzImage","value":"13","doc":null,"summary":null},{"id":"Script","name":"Script","value":"14","doc":null,"summary":null},{"id":"Qt","name":"Qt","value":"15","doc":null,"summary":null},{"id":"Recording","name":"Recording","value":"16","doc":null,"summary":null},{"id":"VG","name":"VG","value":"17","doc":null,"summary":null},{"id":"GL","name":"GL","value":"18","doc":null,"summary":null},{"id":"DRM","name":"DRM","value":"19","doc":null,"summary":null},{"id":"Tee","name":"Tee","value":"20","doc":null,"summary":null},{"id":"XML","name":"XML","value":"21","doc":null,"summary":null},{"id":"Skia","name":"Skia","value":"22","doc":null,"summary":null},{"id":"Subsurface","name":"Subsurface","value":"23","doc":null,"summary":null},{"id":"COGL","name":"COGL","value":"24","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"beos?-instance-method","html_id":"beos?-instance-method","name":"beos?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L11","def":{"name":"beos?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == BEOS"}},{"id":"cogl?-instance-method","html_id":"cogl?-instance-method","name":"cogl?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L27","def":{"name":"cogl?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == COGL"}},{"id":"direct_fb?-instance-method","html_id":"direct_fb?-instance-method","name":"direct_fb?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L12","def":{"name":"direct_fb?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DirectFB"}},{"id":"drm?-instance-method","html_id":"drm?-instance-method","name":"drm?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L22","def":{"name":"drm?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DRM"}},{"id":"gl?-instance-method","html_id":"gl?-instance-method","name":"gl?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L21","def":{"name":"gl?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == GL"}},{"id":"glitz?-instance-method","html_id":"glitz?-instance-method","name":"glitz?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L8","def":{"name":"glitz?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Glitz"}},{"id":"image?-instance-method","html_id":"image?-instance-method","name":"image?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L3","def":{"name":"image?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Image"}},{"id":"os2?-instance-method","html_id":"os2?-instance-method","name":"os2?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L14","def":{"name":"os2?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == OS2"}},{"id":"pdf?-instance-method","html_id":"pdf?-instance-method","name":"pdf?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L4","def":{"name":"pdf?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PDF"}},{"id":"ps?-instance-method","html_id":"ps?-instance-method","name":"ps?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L5","def":{"name":"ps?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PS"}},{"id":"qt?-instance-method","html_id":"qt?-instance-method","name":"qt?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L18","def":{"name":"qt?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Qt"}},{"id":"quartz?-instance-method","html_id":"quartz?-instance-method","name":"quartz?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L9","def":{"name":"quartz?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Quartz"}},{"id":"quartz_image?-instance-method","html_id":"quartz_image?-instance-method","name":"quartz_image?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L16","def":{"name":"quartz_image?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == QuartzImage"}},{"id":"recording?-instance-method","html_id":"recording?-instance-method","name":"recording?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L19","def":{"name":"recording?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Recording"}},{"id":"script?-instance-method","html_id":"script?-instance-method","name":"script?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L17","def":{"name":"script?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Script"}},{"id":"skia?-instance-method","html_id":"skia?-instance-method","name":"skia?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L25","def":{"name":"skia?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Skia"}},{"id":"subsurface?-instance-method","html_id":"subsurface?-instance-method","name":"subsurface?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L26","def":{"name":"subsurface?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Subsurface"}},{"id":"svg?-instance-method","html_id":"svg?-instance-method","name":"svg?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L13","def":{"name":"svg?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SVG"}},{"id":"tee?-instance-method","html_id":"tee?-instance-method","name":"tee?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L23","def":{"name":"tee?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Tee"}},{"id":"vg?-instance-method","html_id":"vg?-instance-method","name":"vg?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L20","def":{"name":"vg?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == VG"}},{"id":"win32?-instance-method","html_id":"win32?-instance-method","name":"win32?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L10","def":{"name":"win32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Win32"}},{"id":"win32_printing?-instance-method","html_id":"win32_printing?-instance-method","name":"win32_printing?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L15","def":{"name":"win32_printing?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Win32Printing"}},{"id":"x_lib?-instance-method","html_id":"x_lib?-instance-method","name":"x_lib?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L6","def":{"name":"x_lib?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == XLib"}},{"id":"xcb?-instance-method","html_id":"xcb?-instance-method","name":"xcb?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L7","def":{"name":"xcb?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == XCB"}},{"id":"xml?-instance-method","html_id":"xml?-instance-method","name":"xml?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/surface_type.cr#L24","def":{"name":"xml?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == XML"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/SvgSurface","path":"Cairo/SvgSurface.html","kind":"class","full_name":"Cairo::SvgSurface","name":"SvgSurface","abstract":false,"superclass":{"html_id":"cairo/Cairo/Surface","kind":"class","full_name":"Cairo::Surface","name":"Surface"},"ancestors":[{"html_id":"cairo/Cairo/Surface","kind":"class","full_name":"Cairo::Surface","name":"Surface"},{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/svg_surface.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/svg_surface.cr#L4"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[{"id":"versions:Array(SvgVersion)-class-method","html_id":"versions:Array(SvgVersion)-class-method","name":"versions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(SvgVersion)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/svg_surface.cr#L4","def":{"name":"versions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(SvgVersion)","visibility":"Public","body":"LibCairo.svg_get_versions(out version, out num_versions)\nif num_versions == 0\n  return [] of SvgVersion\nend\nArray(SvgVersion).new(num_versions) do |i|\n  SvgVersion.new(version[i].value)\nend\n"}}],"constructors":[{"id":"new(write_func:LibCairo::WriteFuncT,closure:Pointer(Void),width_in_points:Float64,height_in_points:Float64)-class-method","html_id":"new(write_func:LibCairo::WriteFuncT,closure:Pointer(Void),width_in_points:Float64,height_in_points:Float64)-class-method","name":"new","doc":"Create for Stream","summary":"<p>Create for Stream</p>","abstract":false,"args":[{"name":"write_func","doc":null,"default_value":"","external_name":"write_func","restriction":"LibCairo::WriteFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"},{"name":"width_in_points","doc":null,"default_value":"","external_name":"width_in_points","restriction":"Float64"},{"name":"height_in_points","doc":null,"default_value":"","external_name":"height_in_points","restriction":"Float64"}],"args_string":"(write_func : LibCairo::WriteFuncT, closure : Pointer(Void), width_in_points : Float64, height_in_points : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/svg_surface.cr#L4","def":{"name":"new","args":[{"name":"write_func","doc":null,"default_value":"","external_name":"write_func","restriction":"LibCairo::WriteFuncT"},{"name":"closure","doc":null,"default_value":"","external_name":"closure","restriction":"::Pointer(Void)"},{"name":"width_in_points","doc":null,"default_value":"","external_name":"width_in_points","restriction":"Float64"},{"name":"height_in_points","doc":null,"default_value":"","external_name":"height_in_points","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(write_func, closure, width_in_points, height_in_points)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(filename:String,width_in_points:Float64,height_in_points:Float64)-class-method","html_id":"new(filename:String,width_in_points:Float64,height_in_points:Float64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"width_in_points","doc":null,"default_value":"","external_name":"width_in_points","restriction":"Float64"},{"name":"height_in_points","doc":null,"default_value":"","external_name":"height_in_points","restriction":"Float64"}],"args_string":"(filename : String, width_in_points : Float64, height_in_points : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/svg_surface.cr#L4","def":{"name":"new","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"width_in_points","doc":null,"default_value":"","external_name":"width_in_points","restriction":"Float64"},{"name":"height_in_points","doc":null,"default_value":"","external_name":"height_in_points","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(filename, width_in_points, height_in_points)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"restrict_to_version(version:SvgVersion)-instance-method","html_id":"restrict_to_version(version:SvgVersion)-instance-method","name":"restrict_to_version","doc":null,"summary":null,"abstract":false,"args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"SvgVersion"}],"args_string":"(version : SvgVersion)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/svg_surface.cr#L4","def":{"name":"restrict_to_version","args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"SvgVersion"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.svg_surface_restrict_to_version(to_unsafe, LibCairo::SvgVersionT.new(version.value))\nself\n"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/SvgVersion","path":"Cairo/SvgVersion.html","kind":"enum","full_name":"Cairo::SvgVersion","name":"SvgVersion","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/svg_version.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/svg_version.cr#L4"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"V_1_1","name":"V_1_1","value":"0","doc":null,"summary":null},{"id":"V_1_2","name":"V_1_2","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/svg_version.cr#L4","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.new(LibCairo.svg_version_to_string(LibCairo::SvgVersionT.new(self.value)))"}},{"id":"v_1_1?-instance-method","html_id":"v_1_1?-instance-method","name":"v_1_1?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/svg_version.cr#L4","def":{"name":"v_1_1?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == V_1_1"}},{"id":"v_1_2?-instance-method","html_id":"v_1_2?-instance-method","name":"v_1_2?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/svg_version.cr#L4","def":{"name":"v_1_2?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == V_1_2"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/TeeSurface","path":"Cairo/TeeSurface.html","kind":"class","full_name":"Cairo::TeeSurface","name":"TeeSurface","abstract":false,"superclass":{"html_id":"cairo/Cairo/Surface","kind":"class","full_name":"Cairo::Surface","name":"Surface"},"ancestors":[{"html_id":"cairo/Cairo/Surface","kind":"class","full_name":"Cairo::Surface","name":"Surface"},{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/tee_surface.cr","line_number":4,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/tee_surface.cr#L4"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"add(target:Surface)-instance-method","html_id":"add(target:Surface)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Surface"}],"args_string":"(target : Surface)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/tee_surface.cr#L4","def":{"name":"add","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Surface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.tee_surface_add(to_unsafe, target.to_unsafe)\nself\n"}},{"id":"index(index:UInt32):Surface-instance-method","html_id":"index(index:UInt32):Surface-instance-method","name":"index","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"UInt32"}],"args_string":"(index : UInt32) : Surface","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/tee_surface.cr#L4","def":{"name":"index","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Surface","visibility":"Public","body":"Surface.new(LibCairo.tee_surface_index(to_unsafe, index))"}},{"id":"remove(target:Surface)-instance-method","html_id":"remove(target:Surface)-instance-method","name":"remove","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Surface"}],"args_string":"(target : Surface)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/tee_surface.cr#L4","def":{"name":"remove","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Surface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.tee_surface_remove(to_unsafe, target.to_unsafe)\nself\n"}},{"id":"tee_surface_create(master:Surface)-instance-method","html_id":"tee_surface_create(master:Surface)-instance-method","name":"tee_surface_create","doc":null,"summary":null,"abstract":false,"args":[{"name":"master","doc":null,"default_value":"","external_name":"master","restriction":"Surface"}],"args_string":"(master : Surface)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/tee_surface.cr#L4","def":{"name":"tee_surface_create","args":[{"name":"master","doc":null,"default_value":"","external_name":"master","restriction":"Surface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"super(LibCairo.tee_surface_create(master.to_unsafe))"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/TextCluster","path":"Cairo/TextCluster.html","kind":"struct","full_name":"Cairo::TextCluster","name":"TextCluster","abstract":false,"superclass":{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"cairo/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/text_cluster.cr","line_number":17,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster.cr#L17"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Wrapper for LibCairo::TextClusterT.\n\nThe `TextCluster` class holds information about a single *text cluster*.\nA text cluster is a minimal mapping of some glyphs corresponding to some UTF-8 text.\n\nFor a cluster to be valid, both *num_bytes* and *num_glyphs* should be non-negative,\nand at least one should be non-zero. Note that clusters with zero glyphs are not as\nwell supported as normal clusters. For example, PDF rendering applications typically\nignore those clusters when PDF text is being selected.\n\nSee `Context#show_text_glyphs` for how clusters are used in advanced text operations.","summary":"<p>Wrapper for LibCairo::TextClusterT.</p>","class_methods":[],"constructors":[{"id":"new(num_bytes:Int32,num_glyphs:Int32)-class-method","html_id":"new(num_bytes:Int32,num_glyphs:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"num_bytes","doc":null,"default_value":"","external_name":"num_bytes","restriction":"Int32"},{"name":"num_glyphs","doc":null,"default_value":"","external_name":"num_glyphs","restriction":"Int32"}],"args_string":"(num_bytes : Int32, num_glyphs : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster.cr#L24","def":{"name":"new","args":[{"name":"num_bytes","doc":null,"default_value":"","external_name":"num_bytes","restriction":"Int32"},{"name":"num_glyphs","doc":null,"default_value":"","external_name":"num_glyphs","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(num_bytes, num_glyphs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(cluster:LibCairo::TextClusterT)-class-method","html_id":"new(cluster:LibCairo::TextClusterT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"cluster","doc":null,"default_value":"","external_name":"cluster","restriction":"LibCairo::TextClusterT"}],"args_string":"(cluster : LibCairo::TextClusterT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster.cr#L30","def":{"name":"new","args":[{"name":"cluster","doc":null,"default_value":"","external_name":"cluster","restriction":"LibCairo::TextClusterT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(cluster)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(cluster:LibCairo::PTextClusterT)-class-method","html_id":"new(cluster:LibCairo::PTextClusterT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"cluster","doc":null,"default_value":"","external_name":"cluster","restriction":"LibCairo::PTextClusterT"}],"args_string":"(cluster : LibCairo::PTextClusterT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster.cr#L33","def":{"name":"new","args":[{"name":"cluster","doc":null,"default_value":"","external_name":"cluster","restriction":"LibCairo::PTextClusterT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(cluster)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster.cr#L18","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"num_bytes:Int32-instance-method","html_id":"num_bytes:Int32-instance-method","name":"num_bytes","doc":"The number of bytes of UTF-8 text covered by cluster.","summary":"<p>The number of bytes of UTF-8 text covered by cluster.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster.cr#L39","def":{"name":"num_bytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@cluster.num_bytes"}},{"id":"num_bytes=(num_bytes:Int32)-instance-method","html_id":"num_bytes=(num_bytes:Int32)-instance-method","name":"num_bytes=","doc":null,"summary":null,"abstract":false,"args":[{"name":"num_bytes","doc":null,"default_value":"","external_name":"num_bytes","restriction":"Int32"}],"args_string":"(num_bytes : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster.cr#L43","def":{"name":"num_bytes=","args":[{"name":"num_bytes","doc":null,"default_value":"","external_name":"num_bytes","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cluster.num_bytes = num_bytes"}},{"id":"num_glyphs:Int32-instance-method","html_id":"num_glyphs:Int32-instance-method","name":"num_glyphs","doc":"The number of glyphs covered by cluster.","summary":"<p>The number of glyphs covered by cluster.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster.cr#L48","def":{"name":"num_glyphs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@cluster.num_glyphs"}},{"id":"num_glyphs=(num_glyphs:Int32)-instance-method","html_id":"num_glyphs=(num_glyphs:Int32)-instance-method","name":"num_glyphs=","doc":null,"summary":null,"abstract":false,"args":[{"name":"num_glyphs","doc":null,"default_value":"","external_name":"num_glyphs","restriction":"Int32"}],"args_string":"(num_glyphs : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster.cr#L52","def":{"name":"num_glyphs=","args":[{"name":"num_glyphs","doc":null,"default_value":"","external_name":"num_glyphs","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cluster.num_glyphs = num_glyphs"}},{"id":"to_cairo_cluster:LibCairo::TextClusterT-instance-method","html_id":"to_cairo_cluster:LibCairo::TextClusterT-instance-method","name":"to_cairo_cluster","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::TextClusterT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster.cr#L56","def":{"name":"to_cairo_cluster","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::TextClusterT","visibility":"Public","body":"@cluster"}},{"id":"to_unsafe:LibCairo::PTextClusterT-instance-method","html_id":"to_unsafe:LibCairo::PTextClusterT-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PTextClusterT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster.cr#L60","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PTextClusterT","visibility":"Public","body":"pointerof(@cluster)"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/TextClusterArray","path":"Cairo/TextClusterArray.html","kind":"class","full_name":"Cairo::TextClusterArray","name":"TextClusterArray","abstract":false,"superclass":{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"cairo/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"cairo/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"cairo/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/text_cluster_array.cr","line_number":7,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster_array.cr#L7"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"cairo/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(clusters:LibCairo::PTextClusterT,num_clusters:Int32)-class-method","html_id":"new(clusters:LibCairo::PTextClusterT,num_clusters:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"clusters","doc":null,"default_value":"","external_name":"clusters","restriction":"LibCairo::PTextClusterT"},{"name":"num_clusters","doc":null,"default_value":"","external_name":"num_clusters","restriction":"Int32"}],"args_string":"(clusters : LibCairo::PTextClusterT, num_clusters : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster_array.cr#L16","def":{"name":"new","args":[{"name":"clusters","doc":null,"default_value":"","external_name":"clusters","restriction":"LibCairo::PTextClusterT"},{"name":"num_clusters","doc":null,"default_value":"","external_name":"num_clusters","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(clusters, num_clusters)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(num_clusters:Int)-class-method","html_id":"new(num_clusters:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"num_clusters","doc":null,"default_value":"","external_name":"num_clusters","restriction":"Int"}],"args_string":"(num_clusters : Int)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster_array.cr#L10","def":{"name":"new","args":[{"name":"num_clusters","doc":null,"default_value":"","external_name":"num_clusters","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(num_clusters)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[]=(index:Int,cluster:TextCluster)-instance-method","html_id":"[]=(index:Int,cluster:TextCluster)-instance-method","name":"[]=","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"cluster","doc":null,"default_value":"","external_name":"cluster","restriction":"TextCluster"}],"args_string":"(index : Int, cluster : TextCluster)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster_array.cr#L39","def":{"name":"[]=","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"cluster","doc":null,"default_value":"","external_name":"cluster","restriction":"TextCluster"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_index_out_of_bounds(index)\n(@clusters + index).value = cluster.to_unsafe.value\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster_array.cr#L24","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.text_cluster_free(@clusters)\n@num_clusters = 0\n"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":"Returns the number of elements in this container.","summary":"<p>Returns the number of elements in this container.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster_array.cr#L30","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@num_clusters"}},{"id":"to_unsafe:LibCairo::PTextClusterT-instance-method","html_id":"to_unsafe:LibCairo::PTextClusterT-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PTextClusterT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster_array.cr#L44","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PTextClusterT","visibility":"Public","body":"@clusters"}},{"id":"unsafe_fetch(index:Int)-instance-method","html_id":"unsafe_fetch(index:Int)-instance-method","name":"unsafe_fetch","doc":"Returns the element at the given *index*, without doing any bounds check.\n\n`Indexable` makes sure to invoke this method with *index* in `0...size`,\nso converting negative indices to positive ones is not needed here.\n\nClients never invoke this method directly. Instead, they access\nelements with `#[](index)` and `#[]?(index)`.\n\nThis method should only be directly invoked if you are absolutely\nsure the index is in bounds, to avoid a bounds check for a small boost\nof performance.","summary":"<p>Returns the element at the given <em>index</em>, without doing any bounds check.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster_array.cr#L35","def":{"name":"unsafe_fetch","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@clusters + index).value"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/TextClusterFlags","path":"Cairo/TextClusterFlags.html","kind":"enum","full_name":"Cairo::TextClusterFlags","name":"TextClusterFlags","abstract":false,"superclass":null,"ancestors":[{"html_id":"cairo/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"cairo/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"cairo/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/text_cluster_flags.cr","line_number":3,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster_flags.cr#L3"}],"repository_name":"cairo","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Backward","name":"Backward","value":"1","doc":"The clusters in the cluster array map to glyphs in the glyph array from end to start.","summary":"<p>The clusters in the cluster array map to glyphs in the glyph array from end to start.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Specifies properties of a text cluster mapping.","summary":"<p>Specifies properties of a text cluster mapping.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"backward?-instance-method","html_id":"backward?-instance-method","name":"backward?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_cluster_flags.cr#L5","def":{"name":"backward?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Backward"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/TextExtents","path":"Cairo/TextExtents.html","kind":"class","full_name":"Cairo::TextExtents","name":"TextExtents","abstract":false,"superclass":{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/text_extents.cr","line_number":12,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L12"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"The `TextExtents` structure stores the extents of a single glyph or a string of glyphs in user-space coordinates.\nBecause text extents are in user-space coordinates, they are mostly, but not entirely,\nindependent of the current transformation matrix. If you call `context.scale(2.0, 2.0)`,\ntext will be drawn twice as big, but the reported text extents will not be doubled.\nThey will change slightly due to hinting (so you can't assume that metrics are independent of the transformation matrix),\nbut otherwise will remain unchanged.","summary":"<p>The <code><a href=\"../Cairo/TextExtents.html\">TextExtents</a></code> structure stores the extents of a single glyph or a string of glyphs in user-space coordinates.</p>","class_methods":[],"constructors":[{"id":"new(x_bearing:Float64,y_bearing:Float64,width:Float64,height:Float64,x_advance:Float64,y_advance:Float64)-class-method","html_id":"new(x_bearing:Float64,y_bearing:Float64,width:Float64,height:Float64,x_advance:Float64,y_advance:Float64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"x_bearing","doc":null,"default_value":"","external_name":"x_bearing","restriction":"Float64"},{"name":"y_bearing","doc":null,"default_value":"","external_name":"y_bearing","restriction":"Float64"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Float64"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"},{"name":"x_advance","doc":null,"default_value":"","external_name":"x_advance","restriction":"Float64"},{"name":"y_advance","doc":null,"default_value":"","external_name":"y_advance","restriction":"Float64"}],"args_string":"(x_bearing : Float64, y_bearing : Float64, width : Float64, height : Float64, x_advance : Float64, y_advance : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L17","def":{"name":"new","args":[{"name":"x_bearing","doc":null,"default_value":"","external_name":"x_bearing","restriction":"Float64"},{"name":"y_bearing","doc":null,"default_value":"","external_name":"y_bearing","restriction":"Float64"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Float64"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"},{"name":"x_advance","doc":null,"default_value":"","external_name":"x_advance","restriction":"Float64"},{"name":"y_advance","doc":null,"default_value":"","external_name":"y_advance","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(x_bearing, y_bearing, width, height, x_advance, y_advance)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(text_extents:LibCairo::TextExtentsT)-class-method","html_id":"new(text_extents:LibCairo::TextExtentsT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"text_extents","doc":null,"default_value":"","external_name":"text_extents","restriction":"LibCairo::TextExtentsT"}],"args_string":"(text_extents : LibCairo::TextExtentsT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L29","def":{"name":"new","args":[{"name":"text_extents","doc":null,"default_value":"","external_name":"text_extents","restriction":"LibCairo::TextExtentsT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(text_extents)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L13","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"height:Float64-instance-method","html_id":"height:Float64-instance-method","name":"height","doc":"Height of the glyphs as drawn.","summary":"<p>Height of the glyphs as drawn.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L69","def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@text_extents.height"}},{"id":"height=(height:Float64)-instance-method","html_id":"height=(height:Float64)-instance-method","name":"height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"}],"args_string":"(height : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L74","def":{"name":"height=","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text_extents.height = height"}},{"id":"to_cairo_text_extents:LibCairo::TextExtentsT-instance-method","html_id":"to_cairo_text_extents:LibCairo::TextExtentsT-instance-method","name":"to_cairo_text_extents","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::TextExtentsT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L102","def":{"name":"to_cairo_text_extents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::TextExtentsT","visibility":"Public","body":"@text_extents"}},{"id":"to_unsafe:LibCairo::PTextExtentsT-instance-method","html_id":"to_unsafe:LibCairo::PTextExtentsT-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCairo::PTextExtentsT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L106","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PTextExtentsT","visibility":"Public","body":"pointerof(@text_extents)"}},{"id":"width:Float64-instance-method","html_id":"width:Float64-instance-method","name":"width","doc":"Width of the glyphs as drawn.","summary":"<p>Width of the glyphs as drawn.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L58","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@text_extents.width"}},{"id":"width=(width:Float64)-instance-method","html_id":"width=(width:Float64)-instance-method","name":"width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Float64"}],"args_string":"(width : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L63","def":{"name":"width=","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text_extents.width = width"}},{"id":"x_advance:Float64-instance-method","html_id":"x_advance:Float64-instance-method","name":"x_advance","doc":"Distance to advance in the X direction after drawing these glyphs.","summary":"<p>Distance to advance in the X direction after drawing these glyphs.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L80","def":{"name":"x_advance","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@text_extents.x_advance"}},{"id":"x_advance=(x_advance:Float64)-instance-method","html_id":"x_advance=(x_advance:Float64)-instance-method","name":"x_advance=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x_advance","doc":null,"default_value":"","external_name":"x_advance","restriction":"Float64"}],"args_string":"(x_advance : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L85","def":{"name":"x_advance=","args":[{"name":"x_advance","doc":null,"default_value":"","external_name":"x_advance","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text_extents.x_advance = x_advance"}},{"id":"x_bearing:Float64-instance-method","html_id":"x_bearing:Float64-instance-method","name":"x_bearing","doc":"The horizontal distance from the origin to the leftmost part of the glyphs as drawn.\nPositive if the glyphs lie entirely to the right of the origin.","summary":"<p>The horizontal distance from the origin to the leftmost part of the glyphs as drawn.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L35","def":{"name":"x_bearing","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@text_extents.x_bearing"}},{"id":"x_bearing=(x_bearing:Float64)-instance-method","html_id":"x_bearing=(x_bearing:Float64)-instance-method","name":"x_bearing=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x_bearing","doc":null,"default_value":"","external_name":"x_bearing","restriction":"Float64"}],"args_string":"(x_bearing : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L40","def":{"name":"x_bearing=","args":[{"name":"x_bearing","doc":null,"default_value":"","external_name":"x_bearing","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text_extents.x_bearing = x_bearing"}},{"id":"y_advance:Float64-instance-method","html_id":"y_advance:Float64-instance-method","name":"y_advance","doc":"Distance to advance in the Y direction after drawing these glyphs.\n\nWill typically be zero except for vertical text layout as found in East-Asian languages.","summary":"<p>Distance to advance in the Y direction after drawing these glyphs.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L93","def":{"name":"y_advance","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@text_extents.y_advance"}},{"id":"y_advance=(y_advance:Float64)-instance-method","html_id":"y_advance=(y_advance:Float64)-instance-method","name":"y_advance=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y_advance","doc":null,"default_value":"","external_name":"y_advance","restriction":"Float64"}],"args_string":"(y_advance : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L98","def":{"name":"y_advance=","args":[{"name":"y_advance","doc":null,"default_value":"","external_name":"y_advance","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text_extents.y_advance = y_advance"}},{"id":"y_bearing:Float64-instance-method","html_id":"y_bearing:Float64-instance-method","name":"y_bearing","doc":"The vertical distance from the origin to the topmost part of the glyphs as drawn.\nPositive only if the glyphs lie completely below the origin; will usually be negative.","summary":"<p>The vertical distance from the origin to the topmost part of the glyphs as drawn.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L47","def":{"name":"y_bearing","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@text_extents.y_bearing"}},{"id":"y_bearing=(y_bearing:Float64)-instance-method","html_id":"y_bearing=(y_bearing:Float64)-instance-method","name":"y_bearing=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y_bearing","doc":null,"default_value":"","external_name":"y_bearing","restriction":"Float64"}],"args_string":"(y_bearing : Float64)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/text_extents.cr#L52","def":{"name":"y_bearing=","args":[{"name":"y_bearing","doc":null,"default_value":"","external_name":"y_bearing","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text_extents.y_bearing = y_bearing"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/UserDataKey","path":"Cairo/UserDataKey.html","kind":"class","full_name":"Cairo::UserDataKey","name":"UserDataKey","abstract":false,"superclass":{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/user_data_key.cr","line_number":7,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/user_data_key.cr#L7"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":"Wrapper for LibCairo::UserDataKeyT","summary":"<p>Wrapper for LibCairo::UserDataKeyT</p>","class_methods":[],"constructors":[{"id":"new(unused:Int32)-class-method","html_id":"new(unused:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"unused","doc":null,"default_value":"","external_name":"unused","restriction":"Int32"}],"args_string":"(unused : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/user_data_key.cr#L12","def":{"name":"new","args":[{"name":"unused","doc":null,"default_value":"","external_name":"unused","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(unused)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(key:LibCairo::UserDataKeyT)-class-method","html_id":"new(key:LibCairo::UserDataKeyT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"LibCairo::UserDataKeyT"}],"args_string":"(key : LibCairo::UserDataKeyT)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/user_data_key.cr#L17","def":{"name":"new","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"LibCairo::UserDataKeyT"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/user_data_key.cr#L8","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_unsafe:LibCairo::PUserDataKeyT-instance-method","html_id":"to_unsafe:LibCairo::PUserDataKeyT-instance-method","name":"to_unsafe","doc":"Returns the pointer of the underlieing structure.","summary":"<p>Returns the pointer of the underlieing structure.</p>","abstract":false,"args":[],"args_string":" : LibCairo::PUserDataKeyT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/user_data_key.cr#L34","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::PUserDataKeyT","visibility":"Public","body":"pointerof(@key)"}},{"id":"unused:Int32-instance-method","html_id":"unused:Int32-instance-method","name":"unused","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/user_data_key.cr#L20","def":{"name":"unused","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@key.unused"}},{"id":"unused=(unused:Int32)-instance-method","html_id":"unused=(unused:Int32)-instance-method","name":"unused=","doc":null,"summary":null,"abstract":false,"args":[{"name":"unused","doc":null,"default_value":"","external_name":"unused","restriction":"Int32"}],"args_string":"(unused : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/user_data_key.cr#L24","def":{"name":"unused=","args":[{"name":"unused","doc":null,"default_value":"","external_name":"unused","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@key.unused = unused"}},{"id":"user_data_key:LibCairo::UserDataKeyT-instance-method","html_id":"user_data_key:LibCairo::UserDataKeyT-instance-method","name":"user_data_key","doc":"Returns the underlieing structure.","summary":"<p>Returns the underlieing structure.</p>","abstract":false,"args":[],"args_string":" : LibCairo::UserDataKeyT","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/user_data_key.cr#L29","def":{"name":"user_data_key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCairo::UserDataKeyT","visibility":"Public","body":"@key"}}],"macros":[],"types":[]},{"html_id":"cairo/Cairo/XlibSurface","path":"Cairo/XlibSurface.html","kind":"class","full_name":"Cairo::XlibSurface","name":"XlibSurface","abstract":false,"superclass":{"html_id":"cairo/Cairo/Surface","kind":"class","full_name":"Cairo::Surface","name":"Surface"},"ancestors":[{"html_id":"cairo/Cairo/Surface","kind":"class","full_name":"Cairo::Surface","name":"Surface"},{"html_id":"cairo/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"cairo/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cairo/xlib_surface.cr","line_number":5,"url":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/xlib_surface.cr#L5"}],"repository_name":"cairo","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"cairo/Cairo","kind":"module","full_name":"Cairo","name":"Cairo"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(dpy:Display,drawable:Drawable,visual:Visual,width:Int32,height:Int32)-class-method","html_id":"new(dpy:Display,drawable:Drawable,visual:Visual,width:Int32,height:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":"Display"},{"name":"drawable","doc":null,"default_value":"","external_name":"drawable","restriction":"Drawable"},{"name":"visual","doc":null,"default_value":"","external_name":"visual","restriction":"Visual"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(dpy : Display, drawable : Drawable, visual : Visual, width : Int32, height : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/xlib_surface.cr#L5","def":{"name":"new","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":"Display"},{"name":"drawable","doc":null,"default_value":"","external_name":"drawable","restriction":"Drawable"},{"name":"visual","doc":null,"default_value":"","external_name":"visual","restriction":"Visual"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(dpy, drawable, visual, width, height)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(dpy:Display,bitmap:Pixmap,screen:Screen,width:Int32,height:Int32)-class-method","html_id":"new(dpy:Display,bitmap:Pixmap,screen:Screen,width:Int32,height:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":"Display"},{"name":"bitmap","doc":null,"default_value":"","external_name":"bitmap","restriction":"Pixmap"},{"name":"screen","doc":null,"default_value":"","external_name":"screen","restriction":"Screen"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(dpy : Display, bitmap : Pixmap, screen : Screen, width : Int32, height : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/xlib_surface.cr#L5","def":{"name":"new","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":"Display"},{"name":"bitmap","doc":null,"default_value":"","external_name":"bitmap","restriction":"Pixmap"},{"name":"screen","doc":null,"default_value":"","external_name":"screen","restriction":"Screen"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(dpy, bitmap, screen, width, height)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"depth:Int32-instance-method","html_id":"depth:Int32-instance-method","name":"depth","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/xlib_surface.cr#L5","def":{"name":"depth","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"LibCairo.xlib_surface_get_depth(to_unsafe)"}},{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/xlib_surface.cr#L5","def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(LibCairo.xlib_surface_get_display(to_unsafe))"}},{"id":"drawable:Drawable-instance-method","html_id":"drawable:Drawable-instance-method","name":"drawable","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Drawable","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/xlib_surface.cr#L5","def":{"name":"drawable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Drawable","visibility":"Public","body":"LibCairo.xlib_surface_get_drawable(to_unsafe)"}},{"id":"height:Int32-instance-method","html_id":"height:Int32-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/xlib_surface.cr#L5","def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"LibCairo.xlib_surface_get_height(to_unsafe)"}},{"id":"screen:Screen-instance-method","html_id":"screen:Screen-instance-method","name":"screen","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Screen","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/xlib_surface.cr#L5","def":{"name":"screen","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Screen","visibility":"Public","body":"Screen.new(LibCairo.xlib_surface_get_screen(to_unsafe))"}},{"id":"set_drawable(drawable:Drawable,width:Int32,height:Int32)-instance-method","html_id":"set_drawable(drawable:Drawable,width:Int32,height:Int32)-instance-method","name":"set_drawable","doc":null,"summary":null,"abstract":false,"args":[{"name":"drawable","doc":null,"default_value":"","external_name":"drawable","restriction":"Drawable"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(drawable : Drawable, width : Int32, height : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/xlib_surface.cr#L5","def":{"name":"set_drawable","args":[{"name":"drawable","doc":null,"default_value":"","external_name":"drawable","restriction":"Drawable"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.xlib_surface_set_drawable(to_unsafe, drawable, width, height)\nself\n"}},{"id":"set_size(width:Int32,height:Int32)-instance-method","html_id":"set_size(width:Int32,height:Int32)-instance-method","name":"set_size","doc":null,"summary":null,"abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(width : Int32, height : Int32)","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/xlib_surface.cr#L5","def":{"name":"set_size","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LibCairo.xlib_surface_set_size(to_unsafe, width, height)\nself\n"}},{"id":"visual:Visual-instance-method","html_id":"visual:Visual-instance-method","name":"visual","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Visual","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/xlib_surface.cr#L5","def":{"name":"visual","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Visual","visibility":"Public","body":"Visual.new(LibCairo.xlib_surface_get_visual(to_unsafe))"}},{"id":"width:Int32-instance-method","html_id":"width:Int32-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/TamasSzekeres/cairo-cr/blob/5f3761340bc4d3038e17f362564a4288d77d3fef/src/cairo/xlib_surface.cr#L5","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"LibCairo.xlib_surface_get_width(to_unsafe)"}}],"macros":[],"types":[]}]}]}})